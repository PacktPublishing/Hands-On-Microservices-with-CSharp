<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Manatee.Trello</name>
    </assembly>
    <members>
        <member name="T:Manatee.Trello.Action">
            <summary>
            Represents an action performed on Trello objects.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Action.Fields">
            <summary>
            Enumerates the data which can be pulled for actions.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Action.Fields.Data">
            <summary>
            Indicates the Data property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Action.Fields.Date">
            <summary>
            Indicates the Date property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Action.Fields.Creator">
            <summary>
            Indicates the Creator property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Action.Fields.Type">
            <summary>
            Indicates the Type property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.CreationDate">
            <summary>
            Gets the creation date of the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Creator">
            <summary>
            Gets the member who performed the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Data">
            <summary>
            Gets any data associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Date">
            <summary>
            Gets the date and time at which the action was performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Type">
            <summary>
            Gets the type of action.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Action.Updated">
            <summary>
            Raised when data on the action is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Action.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.Action"/> instance.
            </summary>
            <param name="id">The action's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.Action.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the action.
            </summary>
            <remarks>
            This permanently deletes the action from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Action.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the action data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Action.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyActionCollection">
            <summary>
            A read-only collection of actions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyActionCollection.Filter(Manatee.Trello.ActionType)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="actionType">The action type.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyActionCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.ActionType})">
            <summary>
            Adds a number of filters to the collection.
            </summary>
            <param name="actionTypes">A collection of action types.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyActionCollection.Filter(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Adds a date-based filter to the collection.
            </summary>
            <param name="start">The start date.</param>
            <param name="end">The end date.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyActionCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the collection.
            </summary>
            <returns>A task.</returns>
        </member>
        <member name="T:Manatee.Trello.ActionData">
            <summary>
            Exposes any data associated with an action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ActionData.Attachment">
            <summary>
            Gets an assocated attachment.
            </summary>
            <associated-action-types>
            - AddAttachmentToCard
            - DeleteAttachmentFromCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.Board">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-action-types>
            - AddMemberToBoard
            - AddToOrganizationBoard
            - CreateBoard
            - DeleteBoardInvitation
            - MakeAdminOfBoard
            - MakeNormalMemberOfBoard
            - MakeObserverOfBoard
            - RemoveFromOrganizationBoard
            - UnconfirmedBoardInvitation
            - UpdateBoard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.BoardSource">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-action-types>
            - CopyBoard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.BoardTarget">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-action-types>
            - CopyBoardx
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.Card">
            <summary>
            Gets an assocated card.
            </summary>
            <associated-action-types>
            - AddAttachmentToCard
            - AddChecklistToCard
            - AddMemberToCard
            - CommentCard
            - ConvertToCardFromCheckItem
            - CopyCommentCard
            - CreateCard
            - DeleteAttachmentFromCard
            - DeleteCard
            - EmailCard
            - MoveCardFromBoard
            - MoveCardToBoard
            - RemoveChecklistFromCard
            - RemoveMemberFromCard
            - UpdateCard
            - UpdateCardClosed
            - UpdateCardDesc
            - UpdateCardIdList
            - UpdateCardName
            - UpdateCheckItemStateOnCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.CardSource">
            <summary>
            Gets an assocated card.
            </summary>
            <associated-action-types>
            - CopyCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.CheckItem">
            <summary>
            Gets an assocated checklist item.
            </summary>
            <associated-action-types>
            - ConvertToCardFromCheckItem
            - UpdateCheckItemStateOnCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.CheckList">
            <summary>
            Gets an assocated checklist.
            </summary>
            <associated-action-types>
            - AddChecklistToCard
            - RemoveChecklistFromCard
            - UpdateChecklist
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.CustomField">
            <summary>
            Gets an associated custom field definition.
            </summary>
            <associated-action-types>
            - UpdateCustomField
            - UpdateCustomFieldItem
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.Label">
            <summary>
            Gets the associated label.
            </summary>
            <associated-action-types>
            - AddLabelToCard
            - CreateLabel
            - DeleteLabel
            - RemoveLabelFromCard
            - UpdateLabel
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.LastEdited">
            <summary>
            Gets the date/time a comment was last edited.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ActionData.List">
            <summary>
            Gets an assocated list.
            </summary>
            <associated-action-types>
            - CreateList
            - MoveListFromBoard
            - MoveListToBoard
            - UpdateList
            - UpdateListClosed
            - UpdateListName
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.ListAfter">
            <summary>
            Gets the current list.
            </summary>
            <associated-action-types>
            - UpdateCardIdList
            </associated-action-types>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.ActionData.List"/> or <see cref="P:Manatee.Trello.ActionData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ActionData.ListBefore">
            <summary>
            Gets the previous list.
            </summary>
            <associated-action-types>
            - UpdateCardIdList
            </associated-action-types>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.ActionData.List"/> or <see cref="P:Manatee.Trello.ActionData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ActionData.Member">
            <summary>
            Gets an assocated member.
            </summary>
            <associated-action-types>
            - AddMemberToBoard
            - AddMemberToCard
            - AddMemberToOrganization
            - MakeNormalMemberOfBoard
            - MakeNormalMemberOfOrganization
            - MemberJoinedTrello
            - RemoveMemberFromCard
            - UpdateMember
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.OldDescription">
            <summary>
            Gets the previous description.
            </summary>
            <associated-action-types>
            - UpdateCard
            - UpdateCardDesc
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.OldList">
            <summary>
            Gets the previous list.
            </summary>
            <associated-action-types>
            - UpdateCard
            - UpdateCardIdList
            </associated-action-types>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.ActionData.ListAfter"/> or <see cref="P:Manatee.Trello.ActionData.ListBefore"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ActionData.OldPosition">
            <summary>
            Gets the previous position.
            </summary>
            <associated-action-types>
            - UpdateCard
            - UpdateList
            - UpdateCustomField
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.OldText">
            <summary>
            Gets the previous text value. 
            </summary>
            <associated-action-types>
            - UpdateCard
            - CommentCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.Organization">
            <summary>
            Gets an associated organization.
            </summary>
            <associated-action-types>
            - AddMemberToOrganization
            - AddToOrganizationBoard
            - CreateOrganization
            - DeleteOrganizationInvitation
            - MakeNormalMemberOfOrganization
            - RemoveFromOrganizationBoard
            - UnconfirmedOrganizationInvitation
            - UpdateOrganization
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.PowerUp">
            <summary>
            Gets an associated power-up.
            </summary>
            <associated-action-types>
            - DisablePowerUp
            - EnablePowerUp
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.Text">
            <summary>
            Gets assocated text.
            </summary>
            <associated-action-types>
            - CommentCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.WasArchived">
            <summary>
            Gets whether the object was previously archived.
            </summary>
            <associated-action-types>
            - UpdateCardClosed
            - UpdateListClosed
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.ActionData.Value">
            <summary>
            Gets a custom value associate with the action if any.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ActionType">
            <summary>
             Enumerates known types of <see cref="T:Manatee.Trello.Action"/>s.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
            <remarks>This value is not supported by Trello's API.</remarks>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddAdminToBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was added to a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddAdminToOrganization">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was added to a <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddAttachmentToCard">
            <summary>
            Indicates an <see cref="T:Manatee.Trello.Attachment"/> was added to a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddBoardsPinnedToMember">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> pinned a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddChecklistToCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> was added to a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddLabelToCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Label"/> was added to a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddMemberToBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was added to a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddMemberToCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was added to a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddMemberToOrganization">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was added to an <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddToOrganizationBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Organization"/> was added to a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CommentCard">
            <summary>
            Indicates a comment was added to a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.ConvertToCardFromCheckItem">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> item was converted to <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Board"/> was copied.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was copied.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyChecklist">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> was copied.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyCommentCard">
            <summary>
            Indicates a comment was copied from one <see cref="T:Manatee.Trello.Card"/> to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Board"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateBoardInvitation">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was invided to a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateBoardPreference">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Board"/> preference was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateChecklist">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateLabel">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Label"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateList">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.List"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateOrganization">
            <summary>
            Indicates an <see cref="T:Manatee.Trello.Organization"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateOrganizationInvitation">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was invided to an <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteAttachmentFromCard">
            <summary>
            Indicates an <see cref="T:Manatee.Trello.Attachment"/> was deleted from a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteBoardInvitation">
            <summary>
            Indicates an invitation to a <see cref="T:Manatee.Trello.Board"/> was rescinded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was deleted.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteCheckItem">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckItem"/> was deleted.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteLabel">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Label"/> was deleted.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteOrganizationInvitation">
            <summary>
            Indicates an invitation to an <see cref="T:Manatee.Trello.Organization"/> was rescinded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DisablePlugin">
            <summary>
            Indicates a power-up was disabled.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DisablePowerUp">
            <summary>
            Indicates a power-up was disabled.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.EmailCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was created via email.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.EnablePlugin">
            <summary>
            Indicates a power-up was enabled.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.EnablePowerUp">
            <summary>
            Indicates a power-up was enabled.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeAdminOfBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was made an admin of a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeAdminOfOrganization">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was made an admin of an <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeNormalMemberOfBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was made a normal <see cref="T:Manatee.Trello.Member"/> of a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeNormalMemberOfOrganization">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was made a normal <see cref="T:Manatee.Trello.Member"/> of an <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeObserverOfBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was made an observer of a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MemberJoinedTrello">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> joined Trello.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveCardFromBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was moved from one <see cref="T:Manatee.Trello.Board"/> to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveCardToBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was moved from one <see cref="T:Manatee.Trello.Board"/> to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveListFromBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.List"/> was moved from one <see cref="T:Manatee.Trello.Board"/> to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveListToBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.List"/> was moved from one <see cref="T:Manatee.Trello.Board"/> to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveAdminFromBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was removed as an admin from a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveAdminFromOrganization">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was removed as an admin from an <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveBoardsPinnedFromMember">
            <summary>
            Indicates an <see cref="T:Manatee.Trello.Member"/> unpinnned a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveChecklistFromCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> was removed from a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveFromOrganizationBoard">
            <summary>
            Indicates an <see cref="T:Manatee.Trello.Organization"/> was removed from a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveLabelFromCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Label"/> was removed from a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveMemberFromBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was removed from a <see cref="T:Manatee.Trello.Board"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveMemberFromCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was removed from a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveMemberFromOrganization">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was removed from an <see cref="T:Manatee.Trello.Organization"/>.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UnconfirmedBoardInvitation">
            <summary>
            Indicates an invitation to a <see cref="T:Manatee.Trello.Board"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UnconfirmedOrganizationInvitation">
            <summary>
            Indicates an invitation to an <see cref="T:Manatee.Trello.Organization"/> was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateBoard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Board"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Card"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCheckItem">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckItem"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCheckItemStateOnCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCustomField">
            <summary>
            Indicates that a <see cref="T:Manatee.Trello.CustomField"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCustomFieldItem">
            <summary>
            Indicates that a <see cref="T:Manatee.Trello.CustomField"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateChecklist">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.CheckList"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateLabel">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Label"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateList">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.List"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateMember">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateOrganization">
            <summary>
            Indicates an <see cref="T:Manatee.Trello.Organization"/> was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.VoteOnCard">
            <summary>
            Indicates a <see cref="T:Manatee.Trello.Member"/> voted for a <see cref="T:Manatee.Trello.Card"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ActionType.DefaultForCardActions">
            <summary>
            Indictes the default set of values returned by <see cref="P:Manatee.Trello.Card.Actions"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ActionType.All">
            <summary>
            Indicates all action types
            </summary>
        </member>
        <member name="P:Manatee.Trello.ActionType.Bits">
            <summary>
            Lazy-initialized BitArray.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ActionType.#cctor">
            <summary>
            Static constructor. Sets the static public fields.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ActionType.op_BitwiseOr(Manatee.Trello.ActionType,Manatee.Trello.ActionType)">
            <summary>
            OR operator. Or together ActionType instances.
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.op_BitwiseAnd(Manatee.Trello.ActionType,Manatee.Trello.ActionType)">
            <summary>
            AND operator. And together ActionType instances.
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.op_ExclusiveOr(Manatee.Trello.ActionType,Manatee.Trello.ActionType)">
            <summary>
            XOR operator. Xor together ActionType instances.
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.op_Equality(Manatee.Trello.ActionType,Manatee.Trello.ActionType)">
            <summary>
            Equality operator.
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.op_Inequality(Manatee.Trello.ActionType,Manatee.Trello.ActionType)">
            <summary>
            Inequality operator.
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.ToString">
            <summary>
            Overridden. Returns a comma-separated string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.Equals(System.Object)">
            <summary>
            Overridden. Compares equality with another object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.GetHashCode">
            <summary>
            Overridden. Gets the hash code of the internal BitArray.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.Equals(Manatee.Trello.ActionType)">
            <summary>
            Strongly-typed equality method.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.CompareTo(Manatee.Trello.ActionType)">
            <summary>
            Compares based on highest bit set. Instance with higher
            bit set is bigger.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.GetTypeCode">
            <summary>
            Returns TypeCode.Object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.HasFlag(Manatee.Trello.ActionType)">
            <summary>
            Checks <paramref name="flags"/> to see if all the bits set in that flags are also set in this flags.
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.GetFlags">
            <summary>
            Gets all of the flags that are active in this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.GetNames">
            <summary>
            Gets the names of this ActionType enumerated type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.GetValues">
            <summary>
            Gets all the values of this ActionType enumerated type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.ActionType.TryParse(System.String,Manatee.Trello.ActionType@)">
            <summary>
            Standard TryParse pattern. Parses a ActionType result from a string.
            </summary>
            <param name="s"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Manatee.Trello.Attachment">
            <summary>
            Represents an attachment to a card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Attachment.Fields">
            <summary>
            Enumerates the data which can be pulled for attachments.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Bytes">
            <summary>
            Indicates the Data property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Date">
            <summary>
            Indicates the Date property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.IsUpload">
            <summary>
            Indicates the IsUpload property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Member">
            <summary>
            Indicates the Member property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.MimeType">
            <summary>
            Indicates the MimeType property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Previews">
            <summary>
            Indicates the Previews property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Url">
            <summary>
            Indicates the Url property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.EdgeColor">
            <summary>
            Indicates the EdgeColor property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Attachment.Fields.Position">
            <summary>
            Indicates the Position property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Bytes">
            <summary>
            Gets the size of the attachment in bytes.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.CreationDate">
            <summary>
            Gets the creation date of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Date">
            <summary>
            Gets the date and time the attachment was added to a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.EdgeColor">
            <summary>
            Gets the color used as a border for the attachment preview on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.IsUpload">
            <summary>
            Gets whether the attachment was uploaded data or attached by URI.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Member">
            <summary>
            Gets the <see cref="P:Manatee.Trello.IAttachment.Member"/> who added the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.MimeType">
            <summary>
            Gets the MIME type of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Name">
            <summary>
            Gets or sets the name of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Position">
            <summary>
            Gets or sets the attachment's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Previews">
            <summary>
            Gets the collection of previews generated by Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Url">
            <summary>
            Gets the URI of the attachment.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Attachment.Updated">
            <summary>
            Raised when data on the attachment is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Attachment.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the attachment.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the attachment from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Attachment.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the attachment data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Attachment.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.AttachmentCollection">
            <summary>
            A collection of attachments.
            </summary>
        </member>
        <member name="M:Manatee.Trello.AttachmentCollection.Add(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds an attachment to a card using the URL of the attachment.
            </summary>
            <param name="url">A URL to the data to attach.  Must be a valid URL that begins with 'http://' or 'https://'.</param>
            <param name="name">An optional name for the attachment.  The linked file name will be used by default if not specified.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IAttachment"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.AttachmentCollection.Add(System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
            Adds an attachment to a card by uploading data.
            </summary>
            <param name="data">The byte data of the file to attach.</param>
            <param name="name">A name for the attachment.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IAttachment"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.AvatarSource">
            <summary>
            Enumerates the avatar sources used by Trello.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSource.Unknown">
            <summary>
            Indicates the avatar source is not recognized.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSource.None">
            <summary>
            Indicates there is no avatar.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSource.Upload">
            <summary>
            Indicates the avatar has been uploaded by the user.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSource.Gravatar">
            <summary>
            Indicates the avatar is supplied by Gravatar.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Badges">
            <summary>
            Represents a collection of badges which summarize the contents of a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.Attachments">
            <summary>
            Gets the number of attachments on this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.CheckItems">
            <summary>
            Gets the number of check items on this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.CheckItemsChecked">
            <summary>
            Gets the number of check items on this card which are checked.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.Comments">
            <summary>
            Gets the number of comments on this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.DueDate">
            <summary>
            Gets the due date for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.FogBugz">
            <summary>
            Gets some FogBugz information.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.HasDescription">
            <summary>
            Gets whether this card has a description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.HasVoted">
            <summary>
            Gets whether the current member has voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.IsComplete">
            <summary>
            Gets wheterh this card has been marked complete.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.IsSubscribed">
            <summary>
            Gets whether the current member is subscribed to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.Votes">
            <summary>
            Gets the number of votes for this card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Board">
            <summary>
            Represents a board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Board.Fields">
            <summary>
            Enumerates the data which can be pulled for boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Description">
            <summary>
            Indicates the Description property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Closed">
            <summary>
            Indicates the Closed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Organization">
            <summary>
            Indicates the Organization property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Pinned">
            <summary>
            Indicates the Pinned property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Starred">
            <summary>
            Indicates the Starred property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Preferencess">
            <summary>
            Indicates the Preferencess property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Url">
            <summary>
            Indicates the Url property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.IsSubscribed">
            <summary>
            Indicates the Subscribed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.LastActivityDate">
            <summary>
            Indicates the LastActivityDate property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.LastViewDate">
            <summary>
            Indicates the LastViewDate property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.ShortLink">
            <summary>
            Indicates the ShortLink property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.ShortUrl">
            <summary>
            Indicates the ShortUrl property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Lists">
            <summary>
            Indicates that the lists should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Members">
            <summary>
            Indicates that the members should downloaded. Not included by default.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.CustomFields">
            <summary>
            Indicates that the custom field definitions should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Labels">
            <summary>
            Indicates that the labels should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Memberships">
            <summary>
            Indicates that the memberships should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Actions">
            <summary>
            Indicates that the actions should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.Cards">
            <summary>
            Indicates that the cards should downloaded. Not included by default.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.PowerUps">
            <summary>
            Indicates that the power-ups should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Board.Fields.PowerUpData">
            <summary>
            Indicates that the Lists should downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Actions">
            <summary>
            Gets the collection of actions performed on and within this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Cards">
            <summary>
            Gets the collection of cards contained within this board.
            </summary>
            <remarks>
            This property only exposes unarchived cards.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Board.CreationDate">
            <summary>
            Gets the creation date of the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.CustomFields">
            <summary>
            Gets the collection of custom fields defined on the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Description">
            <summary>
            Gets or sets the board's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsClosed">
            <summary>
            Gets or sets whether this board is closed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsPinned">
            <summary>
            Gets or sets wheterh this board is pinned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsStarred">
            <summary>
            Gets or sets wheterh this board is pinned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Labels">
            <summary>
            Gets the collection of labels for this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.LastActivity">
            <summary>
            Gets the date of the board's most recent activity.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.LastViewed">
            <summary>
            Gets the date when the board was most recently viewed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Lists">
            <summary>
            Gets the collection of lists on this board.
            </summary>
            <remarks>
            This property only exposes unarchived lists.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Board.Members">
            <summary>
            Gets the collection of members on this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Memberships">
            <summary>
            Gets the collection of members and their privileges on this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Name">
            <summary>
            Gets or sets the board's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Organization">
            <summary>
            Gets or sets the organization to which this board belongs.
            </summary>
            <remarks>
            Setting null makes the board's first admin the owner.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Board.PowerUps">
            <summary>
            Gets metadata about any active power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.PowerUpData">
            <summary>
            Gets specific data regarding power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Preferences">
            <summary>
            Gets the set of preferences for the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.PersonalPreferences">
            <summary>
            Gets the set of preferences for the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.ShortLink">
            <summary>
            Gets the board's short URI.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.ShortUrl">
            <summary>
            Gets the board's short link (ID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Url">
            <summary>
            Gets the board's URI.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Item(System.String)">
            <summary>
            Retrieves a list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching list, or null if none found.</returns>
            <remarks>
            Matches on list ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Board.Item(System.Int32)">
            <summary>
            Retrieves the list at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The list.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.Board.Updated">
            <summary>
            Raised when data on the board is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Board.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Board"/> object.
            </summary>
            <param name="id">The board's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.Board.ApplyAction(Manatee.Trello.IAction)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.Board.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the board.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the board from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Board.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the board data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Board.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.BoardBackground">
            <summary>
            Represents a background image for a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Blue">
            <summary>
            The standard blue board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Orange">
            <summary>
            The standard orange board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Green">
            <summary>
            The standard green board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Red">
            <summary>
            The standard red board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Purple">
            <summary>
            The standard purple board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Pink">
            <summary>
            The standard pink board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Lime">
            <summary>
            The standard bright green board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Sky">
            <summary>
            The standard light blue board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Grey">
            <summary>
            The standard grey board background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.BottomColor">
            <summary>
            Gets the bottom color of a gradient background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Brightness">
            <summary>
            Gets the brightness of the background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Color">
            <summary>
            Gets the color of a stock solid-color background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Id">
            <summary>
            Gets the background's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.Image">
            <summary>
            Gets the image of a background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.IsTiled">
            <summary>
            Gets whether the image is tiled when displayed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.ScaledImages">
            <summary>
            Gets a collections of scaled background images.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardBackground.TopColor">
            <summary>
            Gets the top color of a gradient background.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardBackgroundBrightness">
            <summary>
            Specifies the brightness level of the board background.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardBackgroundBrightness.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardBackgroundBrightness.Light">
            <summary>
            Indicates that the board background is light.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardBackgroundBrightness.Dark">
            <summary>
            Indicates that the board background is dark.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardCollection">
            <summary>
            A collection of boards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardCollection.Add(System.String,Manatee.Trello.IBoard,System.Threading.CancellationToken)">
            <summary>
            Creates a new board.
            </summary>
            <param name="name">The name of the board to create.</param>
            <param name="source">A board to use as a template.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IBoard"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.BoardCommentPermission">
            <summary>
             Enumerates known board commenting permission levels.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentPermission.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentPermission.Members">
            <summary>
            Indicates that only members of the board may comment on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentPermission.Observers">
            <summary>
            Indicates that observers may make comments on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentPermission.Org">
            <summary>
            Indicates that only members of the organization to which the board belongs may comment on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentPermission.Public">
            <summary>
            Indicates that any Trello member may comment on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentPermission.Disabled">
            <summary>
            Indicates that no members may comment on cards.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardExtensions">
            <summary>
            Extension methods for boards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.CardsForMember(Manatee.Trello.IBoard,Manatee.Trello.IMember)">
            <summary>
            Gets all open cards for a member on a specific board.
            </summary>
            <param name="board">The board.</param>
            <param name="member">The member.</param>
            <returns>A <see cref="T:Manatee.Trello.IReadOnlyCardCollection"/> containing the member's cards.</returns>
        </member>
        <member name="T:Manatee.Trello.BoardFilter">
            <summary>
            Enumerates the filter options for board collections.  Can be combined with the bitwise-OR operator.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Members">
            <summary>
            Filters to boards that only members can access.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Organization">
            <summary>
            Filters to boards that only organization members can access.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Public">
            <summary>
            Filters to boards that are publicly accessible.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Open">
            <summary>
            Filters to open boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Closed">
            <summary>
            Filters to closed boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Pinned">
            <summary>
            Filters to pinned boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Unpinned">
            <summary>
            Filters to unpinned boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.Starred">
            <summary>
            Filters to starred boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardFilter.All">
            <summary>
            Indicates that all boards should be returned.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardInvitationPermission">
            <summary>
             Enumerates known board invitation permission levels.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardInvitationPermission.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardInvitationPermission.Members">
            <summary>
            Indicates that any member of the board may extend an invitation to join the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardInvitationPermission.Admins">
            <summary>
            Indicates that only admins of the board may extend an invitation to joni the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardLabelCollection">
            <summary>
            A collection of labels for boards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardLabelCollection.Add(System.String,System.Nullable{Manatee.Trello.LabelColor},System.Threading.CancellationToken)">
            <summary>
            Adds a label to the collection.
            </summary>
            <param name="name">The name of the label.</param>
            <param name="color">The color of the label to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ILabel"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardLabelCollection.Filter(Manatee.Trello.LabelColor)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="labelColor">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.BoardLabelCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.BoardMembership">
            <summary>
            Represents the permission level a member has on a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.CreationDate">
            <summary>
            Gets the creation date of the membership.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.Id">
            <summary>
            Gets the membership definition's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.IsDeactivated">
            <summary>
            Gets whether the member has accepted the invitation to join Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.Member">
            <summary>
            Gets the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.MemberType">
            <summary>
            Gets the membership's permission level.
            </summary>
        </member>
        <member name="E:Manatee.Trello.BoardMembership.Updated">
            <summary>
            Raised when data on the membership is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the board membership data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.BoardMembershipCollection">
            <summary>
            A collection of board memberships.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardMembershipCollection.Add(Manatee.Trello.IMember,Manatee.Trello.BoardMembershipType,System.Threading.CancellationToken)">
            <summary>
            Adds a member to a board with specified privileges.
            </summary>
            <param name="member">The member to add.</param>
            <param name="membership">The membership type.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IBoardMembership"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardMembershipCollection.Remove(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a board.
            </summary>
            <param name="member">The member to remove.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.BoardMembershipType">
            <summary>
             Enumerates known board membership types.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Admin">
            <summary>
            Indicates the member is an admin of the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Normal">
            <summary>
            Indicates the member is a normal member of the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Observer">
            <summary>
            Indicates the member is may only view the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Ghost">
            <summary>
            Indicates the member has been invited, but has not yet joined Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardPermissionLevel">
            <summary>
             Enumerates known values for board permission levels
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevel.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevel.Private">
            <summary>
            Indicates that the board can only be viewed by its members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevel.Org">
            <summary>
            Indicates that the board may be viewed by any member of the organization to which the board belongs.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevel.Public">
            <summary>
            Indicates that anyone (even non-Trello users) may view the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardPersonalPreferences">
            <summary>
            Represents the user-specific preferences for a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.EmailList">
            <summary>
            Gets or sets the <see cref="T:Manatee.Trello.IList"/> which will be used to post new cards submitted by email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.EmailPosition">
            <summary>
            Gets or sets the <see cref="T:Manatee.Trello.Position"/> within a <see cref="T:Manatee.Trello.IList"/> which will be used to post new cards submitted by email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowListGuide">
            <summary>
            Gets or sets whether to show the list guide.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebar">
            <summary>
            Gets or sets whether to show the side bar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebarActivity">
            <summary>
            Gets or sets whether to show the activity list in the side bar.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebarBoardActions">
            <summary>
            Gets or sets whether to show the board action list in the side bar.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebarMembers">
            <summary>
            Gets or sets whether to show the board members in the side bar.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.BoardPreferences">
            <summary>
            Represents the preferences for a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.PermissionLevel">
            <summary>
            Gets or sets the general visibility of the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Voting">
            <summary>
            Gets or sets whether voting is enabled and which members are allowed to vote. 
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Commenting">
            <summary>
            Gets or sets whether commenting is enabled and which members are allowed to add comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Invitations">
            <summary>
            Gets or sets which members may invite others to the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.AllowSelfJoin">
            <summary>
            Gets or sets whether any Trello member may join the board themselves or if an invitation is required.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.ShowCardCovers">
            <summary>
            Gets or sets whether card covers are shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.IsCalendarFeedEnabled">
            <summary>
            Gets or sets whether the calendar feed is enabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.CardAgingStyle">
            <summary>
            Gets or sets the card aging style for the Card Aging power up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Background">
            <summary>
            Gets or sets the background of the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardVotingPermission">
            <summary>
            Enumerates known voting permission levels for a board
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingPermission.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingPermission.Members">
            <summary>
            Indicates that only members of the board may vote on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingPermission.Org">
            <summary>
            Indicates that only members of the organization to which the board belongs may vote on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingPermission.Public">
            <summary>
            Indicates that any Trello member may vote on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingPermission.Disabled">
            <summary>
            Indicates that no members may vote on cards.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Card">
            <summary>
            Represents a card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Card.Fields">
            <summary>
            Enumerates the data which can be pulled for cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Badges">
            <summary>
            Indicates the Badges property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Board">
            <summary>
            Indicates the Board property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Checklists">
            <summary>
            Indicates the Checklists property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.DateLastActivity">
            <summary>
            Indicates the DateLastActivity property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Description">
            <summary>
            Indicates the Description property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Due">
            <summary>
            Indicates the Due property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.IsArchived">
            <summary>
            Indicates the IsArchived property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.IsComplete">
            <summary>
            Indicates the IsComplete property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.IsSubscribed">
            <summary>
            Indicates the IsSubscribed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Labels">
            <summary>
            Indicates that the labels should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.List">
            <summary>
            Indicates the List property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.ManualCoverAttachment">
            <summary>
            Indicates the ManualCoverAttachment property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Position">
            <summary>
            Indicates the Position property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.ShortId">
            <summary>
            Indicates the ShortId property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.ShortUrl">
            <summary>
            Indicates the ShortUrl property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Url">
            <summary>
            Indicates the Url property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Actions">
            <summary>
            Indicates that the actions should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Attachments">
            <summary>
            Indicates that the attachments should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.CustomFields">
            <summary>
            Indicates that the custom field instances should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Comments">
            <summary>
            Indicates that the comments should downloaded. Overrides Actions. Not included by default.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Members">
            <summary>
            Indicates that the members should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.Stickers">
            <summary>
            Indicates that the stickers should downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Card.Fields.VotingMembers">
            <summary>
            Indicates that the voting members should downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Actions">
            <summary>
            Gets the collection of actions performed on this card.
            </summary>
            <remarks>By default imposed by Trello, this contains actions of type <see cref="F:Manatee.Trello.ActionType.CommentCard"/>.</remarks>
        </member>
        <member name="P:Manatee.Trello.Card.Attachments">
            <summary>
            Gets the collection of attachments contained in the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Badges">
            <summary>
            Gets the badges summarizing the card's content.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Board">
            <summary>
            Gets the board to which the card belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.CheckLists">
            <summary>
            Gets the collection of checklists contained in the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Comments">
            <summary>
            Gets the collection of comments made on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.CreationDate">
            <summary>
            Gets the creation date of the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.CustomFields">
            <summary>
            Gets the collection of custom field values for the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Description">
            <summary>
            Gets or sets the card's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.DueDate">
            <summary>
            Gets or sets the card's due date.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Id">
            <summary>
            Gets the card's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.IsArchived">
            <summary>
            Gets or sets whether the card is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.IsComplete">
            <summary>
            Gets or sets whether the card is complete.  Associated with <see cref="P:Manatee.Trello.Card.DueDate"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Labels">
            <summary>
            Gets the collection of labels on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.LastActivity">
            <summary>
            Gets the most recent date of activity on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.List">
            <summary>
            Gets or sets the list to the card belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Members">
            <summary>
            Gets the collection of members who are assigned to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Name">
            <summary>
            Gets or sets the card's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Position">
            <summary>
            Gets or sets the card's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.PowerUpData">
            <summary>
            Gets card-specific power-up data.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.ShortId">
            <summary>
            Gets the card's short ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.ShortUrl">
            <summary>
            Gets the card's short URL.
            </summary>
            <remarks>
            Because this value does not change, it can be used as a permalink.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Card.Stickers">
            <summary>
            Gets the collection of stickers which appear on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Url">
            <summary>
            Gets the card's full URL.
            </summary>
            <remarks>
            Trello will likely change this value as the name changes.  You can use <see cref="P:Manatee.Trello.Card.ShortUrl"/> for permalinks.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Card.VotingMembers">
            <summary>
            Gets all members who have voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Item(System.String)">
            <summary>
            Retrieves a check list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list, or null if none found.</returns>
            <remarks>
            Matches on checklist ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Card.Item(System.Int32)">
            <summary>
            Retrieves the check list at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The check list.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.Card.Updated">
            <summary>
            Raised when data on the card is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Card.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Card"/> object.
            </summary>
            <param name="id">The card's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <remarks>
            The supplied ID can be either the full or short ID.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Card.ApplyAction(Manatee.Trello.IAction)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.Card.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the card.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the card from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Card.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the card data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Card.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.CardAgingPowerUp">
            <summary>
            Represents the Card Aging power-up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CardAgingPowerUp.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CardAgingPowerUp.Name">
            <summary>
            Gets the power-up name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CardAgingPowerUp.IsPublic">
            <summary>
            Gets whether the power-up is public. (Really, I don't know what this is, and Trello's not talking.)
            </summary>
        </member>
        <member name="M:Manatee.Trello.CardAgingPowerUp.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.CardAgingStyle">
            <summary>
            Enumerates the various styles of aging for the Card Aging power up.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardAgingStyle.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardAgingStyle.Regular">
            <summary>
            Indicates that cards will age by fading.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardAgingStyle.Pirate">
            <summary>
            Indicates that cards will age using a treasure map effect.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CardCollection">
            <summary>
            A collection of cards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CardCollection.Add(System.String,System.String,Manatee.Trello.Position,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Manatee.Trello.IMember},System.Collections.Generic.IEnumerable{Manatee.Trello.ILabel},System.Threading.CancellationToken)">
            <summary>
            Creates a new card.
            </summary>
            <param name="name">A name</param>
            <param name="description">(optional) A description</param>
            <param name="position">(optional) The card's position in the list.</param>
            <param name="dueDate">(optional) A due date.</param>
            <param name="isComplete">(optional) Indicates whether the card is complete.</param>
            <param name="members">(optional) A collection of members to add to the card.</param>
            <param name="labels">(optional) A collection of labels to add to the card.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICard"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.CardCollection.Add(Manatee.Trello.ICard,System.Threading.CancellationToken)">
            <summary>
            Creates a new card by copying a card.
            </summary>
            <param name="source">A card to copy.  Default is null.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICard"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.CardCollection.Add(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new card by importing data from a URL.
            </summary>
            <param name="name">The name of the card to add.</param>
            <param name="sourceUrl"></param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICard"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.CardFilter">
            <summary>
            Enumerates the filter options for card collections.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardFilter.Visible">
            <summary>
            Filters to only cards that are visible (not archived or in lists which are archived).
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardFilter.Open">
            <summary>
            Filters to only unarchived cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardFilter.Closed">
            <summary>
            Filters to only archived cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CardFilter.All">
            <summary>
            Indicates that all cards should be returned.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CardLabelCollection">
            <summary>
            A collection of labels for cards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CardLabelCollection.Add(Manatee.Trello.ILabel,System.Threading.CancellationToken)">
            <summary>
            Adds a label to the collection.
            </summary>
            <param name="label">The label to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.CardLabelCollection.Remove(Manatee.Trello.ILabel,System.Threading.CancellationToken)">
            <summary>
            Removes a label from the collection.
            </summary>
            <param name="label">The label to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.CardLabelCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.CardStickerCollection">
            <summary>
            A collection of <see cref="T:Manatee.Trello.ISticker"/>s.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CardStickerCollection.Add(System.String,System.Double,System.Double,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Adds a <see cref="T:Manatee.Trello.ISticker"/> to a <see cref="T:Manatee.Trello.ICard"/>.
            </summary>
            <param name="name">The name of the sticker.</param>
            <param name="left">The position of the left edge.</param>
            <param name="top">The position of the top edge.</param>
            <param name="zIndex">The z-index. Default is 0.</param>
            <param name="rotation">The rotation. Default is 0.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The attachment generated by Trello.</returns>
            <exception cref="T:Manatee.Trello.ValidationException`1">Thrown when <paramref name="name"/> is null, empty, or whitespace.</exception>
            <exception cref="T:Manatee.Trello.ValidationException`1">Thrown when <paramref name="rotation"/> is less than 0 or greater than 359.</exception>
        </member>
        <member name="M:Manatee.Trello.CardStickerCollection.Remove(Manatee.Trello.Sticker,System.Threading.CancellationToken)">
            <summary>
            Removes a <see cref="T:Manatee.Trello.ISticker"/> from a <see cref="T:Manatee.Trello.ICard"/>.
            </summary>
            <param name="sticker">The sticker to remove.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.CheckBoxField">
            <summary>
            Represents a custom checkbox field instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckBoxField.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckItem">
            <summary>
            Represents a checklist item.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckItem.Fields">
            <summary>
            Enumerates the data which can be pulled for check items.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItem.Fields.State">
            <summary>
            Indicates the State property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItem.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItem.Fields.Position">
            <summary>
            Indicates the Position property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.CheckList">
            <summary>
            Gets or sets the checklist to which the item belongs.
            </summary>
            <remarks>
            Trello only supports moving a check item between lists on the same card.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.CheckItem.CreationDate">
            <summary>
            Gets the creation date of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.Id">
            <summary>
            Gets or sets the checklist item's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.Name">
            <summary>
            Gets or sets the checklist item's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.Position">
            <summary>
            Gets or sets the checklist item's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.State">
            <summary>
            Gets or sets the checklist item's state.
            </summary>
        </member>
        <member name="E:Manatee.Trello.CheckItem.Updated">
            <summary>
            Raised when data on the checklist item is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the checklist item.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the checklist item from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the checklist item data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.CheckItem.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Manatee.Trello.CheckItemCollection">
            <summary>
            A collection of checklist items.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckItemCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new checklist item.
            </summary>
            <param name="name">The name of the checklist item to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICheckItem"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.CheckItemState">
            <summary>
            Enumerates known values for an item in a checklist.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItemState.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItemState.Incomplete">
            <summary>
            Indicates that the checlist item is not checked.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItemState.Complete">
            <summary>
            Indicates that the checlist item is checked.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckList">
            <summary>
            Represents a checklist.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckList.Fields">
            <summary>
            Enumerates the data which can be pulled for check lists.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckList.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckList.Fields.Board">
            <summary>
            Indicates the Board property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckList.Fields.Card">
            <summary>
            Indicates the Card property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckList.Fields.CheckItems">
            <summary>
            Indicates the checklist items will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckList.Fields.Position">
            <summary>
            Indicates the Position property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Board">
            <summary>
            Gets the board on which the checklist belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Card">
            <summary>
            Gets the card on which the checklist belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.CheckItems">
            <summary>
            Gets the collection of items in the checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.CreationDate">
            <summary>
            Gets the creation date of the checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Id">
            <summary>
            Gets the checklist's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Name">
            <summary>
            Gets the checklist's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Position">
            <summary>
            Gets the checklist's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Item(System.String)">
            <summary>
            Retrieves a check list item which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list item, or null if none found.</returns>
            <remarks>
            Matches on checkitem ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.CheckList.Item(System.Int32)">
            <summary>
            Retrieves the check list item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The check list item.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.CheckList.Updated">
            <summary>
            Raised when data on the check list is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckList.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.CheckList"/> object.
            </summary>
            <param name="id">The check list's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.CheckList.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the checklist.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the checklist from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.CheckList.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the checklist data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.CheckList.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.CheckListCollection">
            <summary>
            A collection of checklists.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckListCollection.Add(System.String,Manatee.Trello.ICheckList,System.Threading.CancellationToken)">
            <summary>
            Creates a new checklist, optionally by copying a checklist.
            </summary>
            <param name="name">The name of the checklist to add.</param>
            <param name="source">A checklist to use as a template.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICheckList"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.CommentCollection">
            <summary>
            A collection of <see cref="T:Manatee.Trello.Action"/>s of types <see cref="F:Manatee.Trello.ActionType.CommentCard"/> and <see cref="F:Manatee.Trello.ActionType.CopyCommentCard"/>.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CommentCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Posts a new comment to a card.
            </summary>
            <param name="text">The content of the comment.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IAction"/> associated with the comment.</returns>
        </member>
        <member name="T:Manatee.Trello.IAction">
            <summary>
            Documents all of the activities in Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAction.CreationDate">
            <summary>
            Gets the creation date of the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAction.Creator">
            <summary>
            Gets the member who performed the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAction.Data">
            <summary>
            Gets any data associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAction.Date">
            <summary>
            Gets the date and time at which the action was performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAction.Type">
            <summary>
            Gets the type of action.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IAction.Updated">
            <summary>
            Raised when data on the action is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IAction.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the action.
            </summary>
            <remarks>
            This permanently deletes the action from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IAction.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the action data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IActionData">
            <summary>
            Exposes any data associated with an action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IActionData.Attachment">
            <summary>
            Gets an assocated attachment.
            </summary>
            <associated-action-types>
            - AddAttachmentToCard
            - DeleteAttachmentFromCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.Board">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-action-types>
            - AddMemberToBoard
            - AddToOrganizationBoard
            - CreateBoard
            - DeleteBoardInvitation
            - MakeAdminOfBoard
            - MakeNormalMemberOfBoard
            - MakeObserverOfBoard
            - RemoveFromOrganizationBoard
            - UnconfirmedBoardInvitation
            - UpdateBoard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.BoardSource">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-action-types>
            - CopyBoard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.BoardTarget">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-action-types>
            - CopyBoardx
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.Card">
            <summary>
            Gets an assocated card.
            </summary>
            <associated-action-types>
            - AddAttachmentToCard
            - AddChecklistToCard
            - AddMemberToCard
            - CommentCard
            - ConvertToCardFromCheckItem
            - CopyCommentCard
            - CreateCard
            - DeleteAttachmentFromCard
            - DeleteCard
            - EmailCard
            - MoveCardFromBoard
            - MoveCardToBoard
            - RemoveChecklistFromCard
            - RemoveMemberFromCard
            - UpdateCard
            - UpdateCardClosed
            - UpdateCardDesc
            - UpdateCardIdList
            - UpdateCardName
            - UpdateCheckItemStateOnCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.CardSource">
            <summary>
            Gets an assocated card.
            </summary>
            <associated-action-types>
            - CopyCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.CheckItem">
            <summary>
            Gets an assocated checklist item.
            </summary>
            <associated-action-types>
            - ConvertToCardFromCheckItem
            - UpdateCheckItemStateOnCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.CheckList">
            <summary>
            Gets an assocated checklist.
            </summary>
            <associated-action-types>
            - AddChecklistToCard
            - RemoveChecklistFromCard
            - UpdateChecklist
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.CustomField">
            <summary>
            Gets an associated custom field definition.
            </summary>
            <associated-action-types>
            - UpdateCustomField
            - UpdateCustomFieldItem
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.Label">
            <summary>
            Gets the associated label.
            </summary>
            <associated-action-types>
            - AddLabelToCard
            - CreateLabel
            - DeleteLabel
            - RemoveLabelFromCard
            - UpdateLabel
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.LastEdited">
            <summary>
            Gets the date/time a comment was last edited.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IActionData.List">
            <summary>
            Gets an assocated list.
            </summary>
            <associated-action-types>
            - CreateList
            - MoveListFromBoard
            - MoveListToBoard
            - UpdateList
            - UpdateListClosed
            - UpdateListName
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.ListAfter">
            <summary>
            Gets the current list.
            </summary>
            <associated-action-types>
            - UpdateCardIdList
            </associated-action-types>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.IActionData.List"/> or <see cref="P:Manatee.Trello.IActionData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IActionData.ListBefore">
            <summary>
            Gets the previous list.
            </summary>
            <associated-action-types>
            - UpdateCardIdList
            </associated-action-types>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.IActionData.List"/> or <see cref="P:Manatee.Trello.IActionData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IActionData.Member">
            <summary>
            Gets an assocated member.
            </summary>
            <associated-action-types>
            - AddMemberToBoard
            - AddMemberToCard
            - AddMemberToOrganization
            - MakeNormalMemberOfBoard
            - MakeNormalMemberOfOrganization
            - MemberJoinedTrello
            - RemoveMemberFromCard
            - UpdateMember
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.OldDescription">
            <summary>
            Gets the previous description.
            </summary>
            <associated-action-types>
            - UpdateCard
            - UpdateCardDesc
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.OldList">
            <summary>
            Gets the previous list.
            </summary>
            <associated-action-types>
            - UpdateCard
            - UpdateCardIdList
            </associated-action-types>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.IActionData.ListAfter"/> or <see cref="P:Manatee.Trello.IActionData.ListBefore"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IActionData.OldPosition">
            <summary>
            Gets the previous position.
            </summary>
            <associated-action-types>
            - UpdateCard
            - UpdateList
            - UpdateCustomField
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.OldText">
            <summary>
            Gets the previous text value. 
            </summary>
            <associated-action-types>
            - UpdateCard
            - CommentCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.Organization">
            <summary>
            Gets an associated organization.
            </summary>
            <associated-action-types>
            - AddMemberToOrganization
            - AddToOrganizationBoard
            - CreateOrganization
            - DeleteOrganizationInvitation
            - MakeNormalMemberOfOrganization
            - RemoveFromOrganizationBoard
            - UnconfirmedOrganizationInvitation
            - UpdateOrganization
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.PowerUp">
            <summary>
            Gets an associated power-up.
            </summary>
            <associated-action-types>
            - DisablePowerUp
            - EnablePowerUp
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.Text">
            <summary>
            Gets assocated text.
            </summary>
            <associated-action-types>
            - CommentCard
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.WasArchived">
            <summary>
            Gets whether the object was previously archived.
            </summary>
            <associated-action-types>
            - UpdateCardClosed
            - UpdateListClosed
            </associated-action-types>
        </member>
        <member name="P:Manatee.Trello.IActionData.Value">
            <summary>
            Gets a custom value associate with the action if any.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IAttachment">
            <summary>
            Represents an attachment to a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Bytes">
            <summary>
            Gets the size of the attachment in bytes.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.CreationDate">
            <summary>
            Gets the creation date of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Date">
            <summary>
            Gets the date and time the attachment was added to a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.IsUpload">
            <summary>
            Gets whether the attachment was uploaded data or attached by URI.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Member">
            <summary>
            Gets the <see cref="P:Manatee.Trello.IAttachment.Member"/> who added the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.MimeType">
            <summary>
            Gets the MIME type of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Name">
            <summary>
            Gets or sets the name of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Previews">
            <summary>
            Gets the collection of previews generated by Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Url">
            <summary>
            Gets the URI of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.EdgeColor">
            <summary>
            Gets the color used as a border for the attachment preview on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IAttachment.Position">
            <summary>
            Gets or sets the attachment's position.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IAttachment.Updated">
            <summary>
            Raised when data on the attachment is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IAttachment.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the attachment.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the attachment from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IAttachment.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the attachment data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IAttachmentCollection">
            <summary>
            A collection of attachments.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IAttachmentCollection.Add(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds an attachment to a card using the URL of the attachment.
            </summary>
            <param name="url">A URL to the data to attach.  Must be a valid URL that begins with 'http://' or 'https://'.</param>
            <param name="name">An optional name for the attachment.  The linked file name will be used by default if not specified.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IAttachment"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.IAttachmentCollection.Add(System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
            Adds an attachment to a card by uploading data.
            </summary>
            <param name="data">The byte data of the file to attach.</param>
            <param name="name">A name for the attachment.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IAttachment"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.IBadges">
            <summary>
            Represents a collection of badges which summarize the contents of a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.Attachments">
            <summary>
            Gets the number of attachments on this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.CheckItems">
            <summary>
            Gets the number of check items on this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.CheckItemsChecked">
            <summary>
            Gets the number of check items on this card which are checked.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.Comments">
            <summary>
            Gets the number of comments on this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.DueDate">
            <summary>
            Gets the due date for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.FogBugz">
            <summary>
            Gets some FogBugz information.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.HasDescription">
            <summary>
            Gets whether this card has a description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.HasVoted">
            <summary>
            Gets whether the current member has voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.IsComplete">
            <summary>
            Gets wheterh this card has been marked complete.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.IsSubscribed">
            <summary>
            Gets whether the current member is subscribed to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBadges.Votes">
            <summary>
            Gets the number of votes for this card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IBoard">
            <summary>
            Represents a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Actions">
            <summary>
            Gets the collection of actions performed on and within this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Cards">
            <summary>
            Gets the collection of cards contained within this board.
            </summary>
            <remarks>
            This property only exposes unarchived cards.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoard.CreationDate">
            <summary>
            Gets the creation date of the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.CustomFields">
            <summary>
            Gets the collection of custom fields defined on the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Description">
            <summary>
            Gets or sets the board's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.IsClosed">
            <summary>
            Gets or sets whether this board is closed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Labels">
            <summary>
            Gets the collection of labels for this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Lists">
            <summary>
            Gets the collection of lists on this board.
            </summary>
            <remarks>
            This property only exposes unarchived lists.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoard.Members">
            <summary>
            Gets the collection of members on this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Memberships">
            <summary>
            Gets the collection of members and their privileges on this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Name">
            <summary>
            Gets or sets the board's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Organization">
            <summary>
            Gets or sets the organization to which this board belongs.
            </summary>
            <remarks>
            Setting null makes the board's first admin the owner.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoard.PowerUps">
            <summary>
            Gets metadata about any active power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.PowerUpData">
            <summary>
            Gets specific data regarding power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Preferences">
            <summary>
            Gets the set of preferences for the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.PersonalPreferences">
            <summary>
            Gets the set of preferences for the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Url">
            <summary>
            Gets the board's URI.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.IsPinned">
            <summary>
            Gets or sets wheterh this board is pinned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.IsStarred">
            <summary>
            Gets or sets wheterh this board is pinned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.LastActivity">
            <summary>
            Gets the date of the board's most recent activity.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.LastViewed">
            <summary>
            Gets the date when the board was most recently viewed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.ShortLink">
            <summary>
            Gets the board's short URI.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.ShortUrl">
            <summary>
            Gets the board's short link (ID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoard.Item(System.String)">
            <summary>
            Retrieves a list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching list, or null if none found.</returns>
            <remarks>
            Matches on List.Id and List.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoard.Item(System.Int32)">
            <summary>
            Retrieves the list at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The list.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.IBoard.Updated">
            <summary>
            Raised when data on the board is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IBoard.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the board.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the board from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IBoard.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the board data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IBoardBackground">
            <summary>
            Represents a background image for a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.Color">
            <summary>
            Gets the color of a stock solid-color background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.Image">
            <summary>
            Gets the image of a background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.IsTiled">
            <summary>
            Gets whether the image is tiled when displayed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.ScaledImages">
            <summary>
            Gets a collections of scaled background images.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.BottomColor">
            <summary>
            Gets the bottom color of a gradient background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.Brightness">
            <summary>
            Gets the brightness of the background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardBackground.TopColor">
            <summary>
            Gets the top color of a gradient background.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IBoardCollection">
            <summary>
            A collection of boards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IBoardCollection.Add(System.String,Manatee.Trello.IBoard,System.Threading.CancellationToken)">
            <summary>
            Creates a new board.
            </summary>
            <param name="name">The name of the board to create.</param>
            <param name="source">A board to use as a template.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IBoard"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.IBoardLabelCollection">
            <summary>
            A collection of labels for boards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IBoardLabelCollection.Add(System.String,System.Nullable{Manatee.Trello.LabelColor},System.Threading.CancellationToken)">
            <summary>
            Adds a label to the collection.
            </summary>
            <param name="name">The name of the label.</param>
            <param name="color">The color of the label to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ILabel"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.IBoardLabelCollection.Filter(Manatee.Trello.LabelColor)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="labelColor">The filter value.</param>
        </member>
        <member name="T:Manatee.Trello.IBoardMembership">
            <summary>
            Associates a <see cref="T:Manatee.Trello.IMember"/> to a <see cref="T:Manatee.Trello.IBoard"/> and indicates any permissions the member has on the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardMembership.CreationDate">
            <summary>
            Gets the creation date of the membership.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardMembership.IsDeactivated">
            <summary>
            Gets whether the member has accepted the invitation to join Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardMembership.Member">
            <summary>
            Gets the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardMembership.MemberType">
            <summary>
            Gets the membership's permission level.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IBoardMembership.Updated">
            <summary>
            Raised when data on the membership is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IBoardMembership.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the board membership data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IBoardMembershipCollection">
            <summary>
            A collection of board memberships.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IBoardMembershipCollection.Add(Manatee.Trello.IMember,Manatee.Trello.BoardMembershipType,System.Threading.CancellationToken)">
            <summary>
            Adds a member to a board with specified privileges.
            </summary>
            <param name="member">The member to add.</param>
            <param name="membership">The membership type.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IBoardMembership"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.IBoardMembershipCollection.Remove(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Removes a member from a board.
            </summary>
            <param name="member">The member to remove.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IBoardPersonalPreferences">
            <summary>
            Represents the user-specific preferences for a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.EmailList">
            <summary>
            Gets or sets the <see cref="T:Manatee.Trello.List"/> which will be used to post new cards submitted by email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.EmailPosition">
            <summary>
            Gets or sets the <see cref="T:Manatee.Trello.Position"/> within a <see cref="T:Manatee.Trello.List"/> which will be used to post new cards submitted by email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.ShowListGuide">
            <summary>
            Gets or sets whether to show the list guide.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.ShowSidebar">
            <summary>
            Gets or sets whether to show the side bar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.ShowSidebarActivity">
            <summary>
            Gets or sets whether to show the activity list in the side bar.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.ShowSidebarBoardActions">
            <summary>
            Gets or sets whether to show the board action list in the side bar.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IBoardPersonalPreferences.ShowSidebarMembers">
            <summary>
            Gets or sets whether to show the board members in the side bar.
            </summary>
            <remarks>
            It appears that this may be deprecated by Trello.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.IBoardPreferences">
            <summary>
            Represents the preferences for a board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.PermissionLevel">
            <summary>
            Gets or sets the general visibility of the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.Voting">
            <summary>
            Gets or sets whether voting is enabled and which members are allowed to vote. 
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.Commenting">
            <summary>
            Gets or sets whether commenting is enabled and which members are allowed to add comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.Invitations">
            <summary>
            Gets or sets which members may invite others to the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.AllowSelfJoin">
            <summary>
            Gets or sets whether any Trello member may join the board themselves or if an invitation must be sent.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.ShowCardCovers">
            <summary>
            Gets or sets whether card covers are shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.IsCalendarFeedEnabled">
            <summary>
            Gets or sets whether the calendar feed is enabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.CardAgingStyle">
            <summary>
            Gets or sets the card aging style for the Card Aging power up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IBoardPreferences.Background">
            <summary>
            Gets or sets the background of the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ICache">
            <summary>
            Defines operations for a cache.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICache.Add(Manatee.Trello.ICacheable)">
            <summary>
            Adds an object to the cache, if it does not already exist.
            </summary>
            <param name="obj">The object to add.</param>
        </member>
        <member name="M:Manatee.Trello.ICache.Find``1(System.String)">
            <summary>
            Finds an object of a certain type meeting specified criteria.
            </summary>
            <param name="id">The ID to search for.</param>
            <typeparam name="T">The type of object to find.</typeparam>
        </member>
        <member name="M:Manatee.Trello.ICache.Remove(Manatee.Trello.ICacheable)">
            <summary>
            Removes an object from the cache, if it exists.
            </summary>
            <param name="obj">The object to remove.</param>
        </member>
        <member name="M:Manatee.Trello.ICache.Clear">
            <summary>
            Removes all objects from the cache.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ICacheable">
            <summary>
            Defines properties which are required to cache an object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICacheable.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ICanWebhook">
            <summary>
            Definines properties and methods required to support webhooks.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICanWebhook.ApplyAction(Manatee.Trello.IAction)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:Manatee.Trello.ICard">
            <summary>
            Represents a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Actions">
            <summary>
            Gets the collection of actions performed on this card.
            </summary>
            <remarks>
            By default imposed by Trello, this contains actions of types <see cref="F:Manatee.Trello.ActionType.CommentCard"/> and <see cref="!:ActionType.UpdateCardIdList"/>.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ICard.Attachments">
            <summary>
            Gets the collection of attachments contained in the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Badges">
            <summary>
            Gets the badges summarizing the content of the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Board">
            <summary>
            Gets the board to which the card belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.CheckLists">
            <summary>
            Gets the collection of checklists contained in the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Comments">
            <summary>
            Gets the collection of comments made on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.CreationDate">
            <summary>
            Gets the creation date of the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.CustomFields">
            <summary>
            Gets the collection of custom field values for the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Description">
            <summary>
            Gets or sets the card's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.DueDate">
            <summary>
            Gets or sets the card's due date.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.IsArchived">
            <summary>
            Gets or sets whether the card is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.IsComplete">
            <summary>
            Gets or sets whether the card is complete.  Associated with <see cref="P:Manatee.Trello.ICard.DueDate"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Labels">
            <summary>
            Gets the collection of labels on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.LastActivity">
            <summary>
            Gets the most recent date of activity on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.List">
            <summary>
            Gets or sets the list to the card belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Members">
            <summary>
            Gets the collection of members who are assigned to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Name">
            <summary>
            Gets or sets the card's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Position">
            <summary>
            Gets or sets the card's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.PowerUpData">
            <summary>
            Gets specific data regarding power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.ShortId">
            <summary>
            Gets the card's short ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.ShortUrl">
            <summary>
            Gets the card's short URL.
            </summary>
            <remarks>
            Because this value does not change, it can be used as a permalink.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ICard.Stickers">
            <summary>
            Gets the collection of stickers which appear on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Url">
            <summary>
            Gets the card's full URL.
            </summary>
            <remarks>
            Trello will likely change this value as the name changes.  You can use <see cref="P:Manatee.Trello.ICard.ShortUrl"/> for permalinks.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ICard.VotingMembers">
            <summary>
            Gets all members who have voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICard.Item(System.String)">
            <summary>
            Retrieves a check list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list, or null if none found.</returns>
            <remarks>
            Matches on CheckList.Id and CheckList.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ICard.Item(System.Int32)">
            <summary>
            Retrieves the check list at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The check list.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.ICard.Updated">
            <summary>
            Raised when data on the card is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICard.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the card.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the card from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ICard.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the card data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ICardCollection">
            <summary>
            A collection of cards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICardCollection.Add(System.String,System.String,Manatee.Trello.Position,System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Manatee.Trello.IMember},System.Collections.Generic.IEnumerable{Manatee.Trello.ILabel},System.Threading.CancellationToken)">
            <summary>
            Creates a new card.
            </summary>
            <param name="name">A name</param>
            <param name="description">(optional) A description</param>
            <param name="position">(optional) The card's position in the list.</param>
            <param name="dueDate">(optional) A due date.</param>
            <param name="isComplete">(optional) Indicates whether the card is complete.</param>
            <param name="members">(optional) A collection of members to add to the card.</param>
            <param name="labels">(optional) A collection of labels to add to the card.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICard"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.ICardCollection.Add(Manatee.Trello.ICard,System.Threading.CancellationToken)">
            <summary>
            Creates a new card by copying a card.
            </summary>
            <param name="source">A card to copy.  Default is null.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICard"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.ICardCollection.Add(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new card by importing data from a URL.
            </summary>
            <param name="name">The name of the card to add.</param>
            <param name="sourceUrl"></param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICard"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.ICardLabelCollection">
            <summary>
            A collection of labels for cards.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICardLabelCollection.Add(Manatee.Trello.ILabel,System.Threading.CancellationToken)">
            <summary>
            Adds a label to the collection.
            </summary>
            <param name="label">The label to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.ICardLabelCollection.Remove(Manatee.Trello.ILabel,System.Threading.CancellationToken)">
            <summary>
            Removes a label from the collection.
            </summary>
            <param name="label">The label to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ICardStickerCollection">
            <summary>
            A collection of <see cref="T:Manatee.Trello.ISticker"/>s.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICardStickerCollection.Add(System.String,System.Double,System.Double,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Adds a <see cref="T:Manatee.Trello.ISticker"/> to a <see cref="T:Manatee.Trello.ICard"/>.
            </summary>
            <param name="name">The name of the sticker.</param>
            <param name="left">The position of the left edge.</param>
            <param name="top">The position of the top edge.</param>
            <param name="zIndex">The z-index. Default is 0.</param>
            <param name="rotation">The rotation. Default is 0.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The attachment generated by Trello.</returns>
            <exception cref="T:Manatee.Trello.ValidationException`1">Thrown when <paramref name="name"/> is null, empty, or whitespace.</exception>
            <exception cref="T:Manatee.Trello.ValidationException`1">Thrown when <paramref name="rotation"/> is less than 0 or greater than 359.</exception>
        </member>
        <member name="M:Manatee.Trello.ICardStickerCollection.Remove(Manatee.Trello.Sticker,System.Threading.CancellationToken)">
            <summary>
            Removes a <see cref="T:Manatee.Trello.ISticker"/> from a <see cref="T:Manatee.Trello.ICard"/>.
            </summary>
            <param name="sticker">The sticker to remove.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ICheckItem">
            <summary>
            Represents a checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckItem.CheckList">
            <summary>
            Gets or sets the checklist to which the item belongs.
            </summary>
            <remarks>
            Trello only supports moving a check item between lists on the same card.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ICheckItem.CreationDate">
            <summary>
            Gets the creation date of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckItem.Name">
            <summary>
            Gets or sets the checklist item's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckItem.Position">
            <summary>
            Gets or sets the checklist item's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckItem.State">
            <summary>
            Gets or sets the checklist item's state.
            </summary>
        </member>
        <member name="E:Manatee.Trello.ICheckItem.Updated">
            <summary>
            Raised when data on the checklist item is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICheckItem.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the checklist item.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the checklist item from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ICheckItem.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the checklist item data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ICheckItemCollection">
            <summary>
            A collection of checklist items.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICheckItemCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new checklist item.
            </summary>
            <param name="name">The name of the checklist item to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICheckItem"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.ICheckList">
            <summary>
            Represents a checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.Board">
            <summary>
            Gets the board on which the checklist belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.Card">
            <summary>
            Gets the card on which the checklist belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.CheckItems">
            <summary>
            Gets the collection of items in the checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.CreationDate">
            <summary>
            Gets the creation date of the checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.Name">
            <summary>
            Gets the checklist's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.Position">
            <summary>
            Gets the checklist's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICheckList.Item(System.String)">
            <summary>
            Retrieves a check list item which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list item, or null if none found.</returns>
            <remarks>
            Matches on CheckItem.Id and CheckItem.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ICheckList.Item(System.Int32)">
            <summary>
            Retrieves the check list item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The check list item.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.ICheckList.Updated">
            <summary>
            Raised when data on the check list is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICheckList.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the checklist.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the checklist from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ICheckList.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the checklist data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ICheckListCollection">
            <summary>
            A collection of checklists.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICheckListCollection.Add(System.String,Manatee.Trello.ICheckList,System.Threading.CancellationToken)">
            <summary>
            Creates a new checklist, optionally by copying a checklist.
            </summary>
            <param name="name">The name of the checklist to add.</param>
            <param name="source">A checklist to use as a template.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ICheckList"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.ICommentCollection">
            <summary>
            A collection of comment actions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICommentCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Posts a new comment to a card.
            </summary>
            <param name="text">The content of the comment.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IAction"/> associated with the comment.</returns>
        </member>
        <member name="T:Manatee.Trello.ICustomField">
            <summary>
            Provides a base for <see cref="T:Manatee.Trello.ICustomField`1"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomField.Definition">
            <summary>
            Gets the custom field definition.
            </summary>
        </member>
        <member name="E:Manatee.Trello.ICustomField.Updated">
            <summary>
            Raised when data on the custom field is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICustomField.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the custom field instance data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ICustomField`1">
            <summary>
            Represents a custom field instance.
            </summary>
            <typeparam name="T">The type of data in the field.</typeparam>
        </member>
        <member name="P:Manatee.Trello.ICustomField`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ICustomFieldDefinition">
            <summary>
            Represents a custom field definition.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomFieldDefinition.Board">
            <summary>
            Gets the board on which the field is defined.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomFieldDefinition.FieldGroup">
            <summary>
            Gets an identifier that groups fields across boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomFieldDefinition.Name">
            <summary>
            Gets or sets the name of the field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomFieldDefinition.Position">
            <summary>
            Gets or sets the position of the field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomFieldDefinition.Type">
            <summary>
            Gets the data type of the field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ICustomFieldDefinition.Options">
            <summary>
            Gets drop down options, if applicable.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the field definition.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the custom field definition data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.Nullable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,Manatee.Trello.IDropDownOption,System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="T:Manatee.Trello.ICustomFieldDefinitionCollection">
            <summary>
            A collection of custom field definitions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ICustomFieldDefinitionCollection.Add(System.String,Manatee.Trello.CustomFieldType,System.Threading.CancellationToken,Manatee.Trello.IDropDownOption[])">
            <summary>
            Adds a new custom field definition to a board.
            </summary>
            <param name="name">The field's name.</param>
            <param name="type">The field's data type.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <param name="options">(Optional) A collection of drop down options.</param>
            <returns>The <see cref="T:Manatee.Trello.ICustomFieldDefinition"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.IDropDownOption">
            <summary>
            Represents a custom field drop down option.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IDropDownOption.Field">
            <summary>
            Gets the custom field definition that defines this option.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IDropDownOption.Text">
            <summary>
            Gets the option text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IDropDownOption.Color">
            <summary>
            Gets the option color.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IDropDownOption.Position">
            <summary>
            Gets the option position.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IDropDownOption.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the drop down option.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the drop down option from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IDropDownOption.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the drop down option data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IDropDownOptionCollection">
            <summary>
            A collection of custom field drop down options.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IDropDownOptionCollection.Add(System.String,Manatee.Trello.Position,System.Nullable{Manatee.Trello.LabelColor},System.Threading.CancellationToken)">
            <summary>
            Adds a new drop down option.
            </summary>
            <param name="text">The option's text.</param>
            <param name="position">The option's position.</param>
            <param name="color">(Optional) the option's color.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IDropDownOption"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.IImagePreview">
            <summary>
            Represents a preview for an image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IImagePreview.CreationDate">
            <summary>
            Gets the creation date of the image preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IImagePreview.Height">
            <summary>
            Gets the preview's height in pixels.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IImagePreview.IsScaled">
            <summary>
            Gets whether the attachment was scaled to generate the preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IImagePreview.Url">
            <summary>
            Gets the URI where the preview data is stored.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IImagePreview.Width">
            <summary>
            Gets the preview's width in pixels.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ILabel">
            <summary>
            A label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ILabel.Board">
            <summary>
            Gets the <see cref="P:Manatee.Trello.ILabel.Board"/> on which the label is defined.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ILabel.Color">
            <summary>
            Gets and sets the color.  Use null for no color.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ILabel.CreationDate">
            <summary>
            Gets the creation date of the label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ILabel.Name">
            <summary>
            Gets and sets the label's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ILabel.Uses">
            <summary>
            Gets the number of cards which use this label.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ILabel.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the label.  All usages of the label will also be removed.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the label from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ILabel.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the label data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IList">
            <summary>
            Represents a list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.Actions">
            <summary>
            Gets the collection of actions performed on the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.Board">
            <summary>
            Gets or sets the board on which the list belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.Cards">
            <summary>
            Gets the collection of cards contained in the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.CreationDate">
            <summary>
            Gets the creation date of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.IsArchived">
            <summary>
            Gets or sets whether the list is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.Name">
            <summary>
            Gets the list's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.Position">
            <summary>
            Gets the list's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IList.Item(System.String)">
            <summary>
            Retrieves a card which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching card, or null if none found.</returns>
            <remarks>
            Matches on Card.Id and Card.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IList.Item(System.Int32)">
            <summary>
            Retrieves the card at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The card.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.IList.Updated">
            <summary>
            Raised when data on the list is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IList.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the label data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IListCollection">
            <summary>
            A collection of lists.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IListCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new list.
            </summary>
            <param name="name">The name of the list to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IList"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.ILog">
            <summary>
            Defines methods required to log information, events, and errors generated throughout Manatee.Trello.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ILog.Debug(System.String,System.Object[])">
            <summary>
            Writes a debug level log entry.
            </summary>
            <param name="message">The message or message format.</param>
            <param name="parameters">A list of parameters.</param>
        </member>
        <member name="M:Manatee.Trello.ILog.Info(System.String,System.Object[])">
            <summary>
            Writes an information level log entry.
            </summary>
            <param name="message">The message or message format.</param>
            <param name="parameters">A list of paramaters.</param>
        </member>
        <member name="M:Manatee.Trello.ILog.Error(System.Exception)">
            <summary>
            Writes an error level log entry.
            </summary>
            <param name="e">The exception that will be or was thrown.</param>
        </member>
        <member name="T:Manatee.Trello.IMe">
            <summary>
            Represents the current member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.AvatarSource">
            <summary>
            Gets or sets the source type for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Bio">
            <summary>
            Gets or sets the member's bio.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Boards">
            <summary>
            Gets the collection of boards owned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Email">
            <summary>
            Gets or sets the member's email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.FullName">
            <summary>
            Gets or sets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Notifications">
            <summary>
            Gets the collection of notificaitons for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Organizations">
            <summary>
            Gets the collection of organizations to which the member belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.Preferences">
            <summary>
            Gets the set of preferences for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMe.UserName">
            <summary>
            Gets or sets the member's username.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IMember">
            <summary>
            Represents a member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Actions">
            <summary>
            Gets the collection of actions performed by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.AvatarSource">
            <summary>
            Gets the source type for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.AvatarUrl">
            <summary>
            Gets the URL to the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Bio">
            <summary>
            Gets the member's bio.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Boards">
            <summary>
            Gets the collection of boards owned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Cards">
            <summary>
            Gets the collection of cards assigned to the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.CreationDate">
            <summary>
            Gets the creation date of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.FullName">
            <summary>
            Gets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.IsConfirmed">
            <summary>
            Gets whether the member has actually join or has merely been invited (ghost).
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Mention">
            <summary>
            Gets a string which can be used in comments or descriptions to mention this user.  The user will receive notification that they've been mentioned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Organizations">
            <summary>
            Gets the collection of organizations to which the member belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Status">
            <summary>
            Gets the member's online status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Trophies">
            <summary>
            Gets the collection of trophies earned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.Url">
            <summary>
            Gets the member's URL.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMember.UserName">
            <summary>
            Gets the member's username.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IMember.Updated">
            <summary>
            Raised when data on the member is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IMember.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the member data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IMemberCollection">
            <summary>
            A collection of members.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IMemberCollection.Add(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Adds a member to the collection.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <param name="member">The member to add.</param>
        </member>
        <member name="M:Manatee.Trello.IMemberCollection.Remove(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <param name="member">The member to remove.</param>
        </member>
        <member name="T:Manatee.Trello.IMemberPreferences">
            <summary>
            Represents preferences for a member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMemberPreferences.EnableColorBlindMode">
            <summary>
            Gets or sets whether color-blind mode is enabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMemberPreferences.MinutesBetweenSummaries">
            <summary>
            Gets or sets the time between email summaries.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IMemberSearch">
            <summary>
            Performs a search for members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMemberSearch.Results">
            <summary>
            Gets the collection of results returned by the search.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IMemberSearch.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the search results.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IMemberSearchResult">
            <summary>
            Represents a result from a member search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMemberSearchResult.Member">
            <summary>
            Gets the returned member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IMemberSearchResult.Similarity">
            <summary>
            Gets a value indicating the similarity of the member to the search query.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IMemberStickerCollection">
            <summary>
            A collection of <see cref="T:Manatee.Trello.ISticker"/>s.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IMemberStickerCollection.Add(System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a <see cref="T:Manatee.Trello.ISticker"/> to a <see cref="T:Manatee.Trello.IMember"/>'s custom sticker set by uploading data.
            </summary>
            <param name="data">The byte data of the file to attach.</param>
            <param name="name">A name for the sticker.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ISticker"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.INotification">
            <summary>
            Represents a notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotification.CreationDate">
            <summary>
            Gets the creation date of the notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotification.Creator">
            <summary>
            Gets the member who performed the action which created the notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotification.Data">
            <summary>
            Gets any data associated with the notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotification.Date">
            <summary>
            Gets the date and teim at which the notification was issued.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotification.IsUnread">
            <summary>
            Gets or sets whether the notification has been read.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotification.Type">
            <summary>
            Gets the type of notification.
            </summary>
        </member>
        <member name="E:Manatee.Trello.INotification.Updated">
            <summary>
            Raised when data on the notification is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.INotification.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the notification data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.INotificationData">
            <summary>
            Exposes any data associated with a notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.Attachment">
            <summary>
            Gets an assocated attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.Board">
            <summary>
            Gets an assocated board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.BoardSource">
            <summary>
            Gets an assocated board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.BoardTarget">
            <summary>
            Gets an assocated board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.Card">
            <summary>
            Gets an assocated card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.CardSource">
            <summary>
            Gets an assocated card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.CheckItem">
            <summary>
            Gets an assocated checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.CheckList">
            <summary>
            Gets an assocated checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.List">
            <summary>
            Gets an assocated list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.ListAfter">
            <summary>
            Gets the current list.
            </summary>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.INotificationData.List"/> or <see cref="P:Manatee.Trello.INotificationData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.INotificationData.ListBefore">
            <summary>
            Gets the previous list.
            </summary>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.INotificationData.List"/> or <see cref="P:Manatee.Trello.INotificationData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.INotificationData.Member">
            <summary>
            Gets an assocated member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.OldDescription">
            <summary>
            Gets the previous description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.OldList">
            <summary>
            Gets the previous list.
            </summary>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.INotificationData.ListAfter"/> or <see cref="P:Manatee.Trello.INotificationData.ListBefore"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.INotificationData.OldPosition">
            <summary>
            Gets the previous position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.OldText">
            <summary>
            Gets the previous text value. 
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.Organization">
            <summary>
            Gets an assocated organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.Text">
            <summary>
            Gets assocated text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.INotificationData.WasArchived">
            <summary>
            Gets whether the object was previously archived.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IOrganization">
            <summary>
            Represents an organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Actions">
            <summary>
            Gets the collection of actions performed on the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Boards">
            <summary>
            Gets the collection of boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.CreationDate">
            <summary>
            Gets the creation date of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Description">
            <summary>
            Gets or sets the organization's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.DisplayName">
            <summary>
            Gets or sets the organization's display name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.IsBusinessClass">
            <summary>
            Gets whether the organization has business class status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Members">
            <summary>
            Gets the collection of members who belong to the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Memberships">
            <summary>
            Gets the collection of members and their priveledges on this organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Name">
            <summary>
            Gets the organization's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.PowerUpData">
            <summary>
            Gets specific data regarding power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Preferences">
            <summary>
            Gets the set of preferences for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Url">
            <summary>
            Gets the organization's URL.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganization.Website">
            <summary>
            Gets or sets the organization's website.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IOrganization.Updated">
            <summary>
            Raised when data on the organization is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IOrganization.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the organization.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the organization from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IOrganization.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the organization data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IOrganizationCollection">
            <summary>
            A collection of organizations.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IOrganizationCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization.
            </summary>
            <param name="displayName">The display name of the organization to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IOrganization"/> generated by Trello.</returns>
            <remarks>The organization's name will be derived from the display name and can be changed later.</remarks>
        </member>
        <member name="T:Manatee.Trello.IOrganizationMembership">
            <summary>
            Associates a <see cref="P:Manatee.Trello.IOrganizationMembership.Member"/> to an <see cref="T:Manatee.Trello.Organization"/> and indicates any permissions the member has in the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationMembership.CreationDate">
            <summary>
            Gets the creation date of the membership.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationMembership.IsUnconfirmed">
            <summary>
            Gets whether the member has accepted the invitation to join Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationMembership.Member">
            <summary>
            Gets the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationMembership.MemberType">
            <summary>
            Gets the membership's permission level.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IOrganizationMembership.Updated">
            <summary>
            Raised when data on the membership is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IOrganizationMembership.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the organization membership data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IOrganizationMembershipCollection">
            <summary>
            A collection of organization memberships.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IOrganizationMembershipCollection.Add(Manatee.Trello.IMember,Manatee.Trello.OrganizationMembershipType,System.Threading.CancellationToken)">
            <summary>
            Adds a member to an organization with specified privileges.
            </summary>
            <param name="member">The member to add.</param>
            <param name="membership">The membership type.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IOrganizationMembership"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.IOrganizationMembershipCollection.Remove(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Removes a member from an organization.
            </summary>
            <param name="member">The member to remove.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IOrganizationPreferences">
            <summary>
            Represents the preferences for an organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationPreferences.PermissionLevel">
            <summary>
            Gets or sets the general visibility of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationPreferences.ExternalMembersDisabled">
            <summary>
            Gets or sets whether external members are disabled.
            </summary>
            <remarks>
            Still researching what this means.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IOrganizationPreferences.AssociatedDomain">
            <summary>
            Gets or sets a domain to associate with the organization.
            </summary>
            <remarks>
            Still researching what this means.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.IOrganizationPreferences.PublicBoardVisibility">
            <summary>
            Gets or sets the visibility of public-viewable boards owned by the organizations.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationPreferences.OrganizationBoardVisibility">
            <summary>
            Gets or sets the visibility of organization-viewable boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IOrganizationPreferences.PrivateBoardVisibility">
            <summary>
            Gets or sets the visibility of private-viewable boards owned by the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IPowerUp">
            <summary>
            Defines the basis of a power-up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IPowerUp.Name">
            <summary>
            Gets the power-up name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IPowerUp.IsPublic">
            <summary>
            Gets whether the power-up is public. (Really, I don't know what this is, and Trello's not talking.)
            </summary>
        </member>
        <member name="M:Manatee.Trello.IPowerUp.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IPowerUpCollection">
            <summary>
            A collection of power-ups.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IPowerUpCollection.EnablePowerUp(Manatee.Trello.IPowerUp,System.Threading.CancellationToken)">
            <summary>
            Enables a power-up for a board.
            </summary>
            <param name="powerUp">The power-up to enable.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.IPowerUpCollection.DisablePowerUp(Manatee.Trello.IPowerUp,System.Threading.CancellationToken)">
            <summary>
            Disables a power-up for a board.
            </summary>
            <param name="powerUp">The power-up to disble.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IPowerUpData">
            <summary>
            Represents the data associated with a power-up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IPowerUpData.PluginId">
            <summary>
            Gets the ID for the plugin with which this data is associated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IPowerUpData.Value">
            <summary>
            Gets the data as a string.  This data will be JSON-encoded.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IPowerUpData.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data... data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IQueryable">
            <summary>
            Provides a marker to identify searchable types.
            </summary>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyActionCollection">
            <summary>
            A read-only collection of actions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyActionCollection.Filter(Manatee.Trello.ActionType)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="actionType">The action type.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyActionCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.ActionType})">
            <summary>
            Adds a number of filters to the collection.
            </summary>
            <param name="actionTypes">A collection of action types.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyActionCollection.Filter(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Adds a date-based filter to the collection.
            </summary>
            <param name="start">The start date.</param>
            <param name="end">The end date.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyBoardCollection">
            <summary>
            A read-only collectin of boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyBoardCollection.Item(System.String)">
            <summary>
            Retrieves a board which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching board, or null if none found.</returns>
            <remarks>
            Matches on Board.Id and Board.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyBoardCollection.Filter(Manatee.Trello.BoardFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyBoardMembershipCollection">
            <summary>
            A read-only collection of board memberships.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyBoardMembershipCollection.Item(System.String)">
            <summary>
            Retrieves a membership which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching membership, or null if none found.</returns>
            <remarks>
            Matches on BoardMembership.Id, BoardMembership.Member.Id, BoardMembership.Member.Name, and BoardMembership.Usernamee. Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyBoardMembershipCollection.Filter(Manatee.Trello.MembershipFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="membership">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyBoardMembershipCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.MembershipFilter})">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="memberships">The filter values.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyCardCollection">
            <summary>
            A read-only collection of cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyCardCollection.Item(System.String)">
            <summary>
            Retrieves a card which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching card, or null if none found.</returns>
            <remarks>
            Matches on Card.Id and Card.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyCardCollection.Filter(Manatee.Trello.CardFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyCardCollection.Filter(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Adds a filter to the collection based on start and end date.
            </summary>
            <param name="start">The start date.</param>
            <param name="end">The end date.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyCheckItemCollection">
            <summary>
            A read-only collection of checklist items.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyCheckItemCollection.Item(System.String)">
            <summary>
            Retrieves a check list item which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list item, or null if none found.</returns>
            <remarks>
            Matches on CheckItem.Id and CheckItem.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyCheckListCollection">
            <summary>
            A read-only collection of checklists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyCheckListCollection.Item(System.String)">
            <summary>
            Retrieves a check list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list, or null if none found.</returns>
            <remarks>
            Matches on CheckList.Id and CheckList.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyCollection`1">
            <summary>
            Provides base functionality for a read-only collection.
            </summary>
            <typeparam name="T">The type of object contained by the collection.</typeparam>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyCollection`1.Limit">
            <summary>
            Indicates the maximum number of items to return.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyCollection`1.Item(System.Int32)">
            <summary>
            Retrieves the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The item.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyCollection`1.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyListCollection">
            <summary>
            A read-only collection of lists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyListCollection.Item(System.String)">
            <summary>
            Retrieves a list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching list, or null if none found.</returns>
            <remarks>
            Matches on List.Id and List.Name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyListCollection.Filter(Manatee.Trello.ListFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyMemberCollection">
            <summary>
            A read-only collection of members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyMemberCollection.Item(System.String)">
            <summary>
            Retrieves a member which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching member, or null if none found.</returns>
            <remarks>
            Matches on Member.Id, Member.FullName, and Member.Username.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyMemberCollection.Filter(Manatee.Trello.MemberFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyMemberCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.MemberFilter})">
            <summary>
            Adds a set of filters to the collection.
            </summary>
            <param name="filters">The filter values.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyNotificationCollection">
            <summary>
            A read-only collection of notifications.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyNotificationCollection.Filter(Manatee.Trello.NotificationType)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter type.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyNotificationCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.NotificationType})">
            <summary>
            Adds a set of filters to the collection.
            </summary>
            <param name="filters">A collection of filters.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyOrganizationCollection">
            <summary>
            A read-only collection of organizations.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyOrganizationCollection.Item(System.String)">
            <summary>
            Retrieves a organization which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching organization, or null if none found.</returns>
            <remarks>
            Matches on Organization.Id, Organization.Name, and Organization.DisplayName.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyOrganizationCollection.Filter(Manatee.Trello.OrganizationFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="T:Manatee.Trello.IReadOnlyOrganizationMembershipCollection">
            <summary>
            A read-only collection of organization memberships.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IReadOnlyOrganizationMembershipCollection.Item(System.String)">
            <summary>
            Retrieves a membership which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching list, or null if none found.</returns>
            <remarks>
            Matches on OrganizationMembership.Id, OrganizationMembership.Member.Id, OrganizationMembership.Member.FullName, and OrganizationMembership.Member.Username. Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyOrganizationMembershipCollection.Filter(Manatee.Trello.MembershipFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.IReadOnlyOrganizationMembershipCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.MembershipFilter})">
            <summary>
            Adds a set of filters to the collection.
            </summary>
            <param name="filters">The filter values.</param>
        </member>
        <member name="T:Manatee.Trello.ISearch">
            <summary>
            Performs a search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISearch.Actions">
            <summary>
            Gets the collection of actions returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISearch.Boards">
            <summary>
            Gets the collection of boards returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISearch.Cards">
            <summary>
            Gets the collection of cards returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISearch.Members">
            <summary>
            Gets the collection of members returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISearch.Organizations">
            <summary>
            Gets the collection of organizations returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISearch.Query">
            <summary>
            Gets the query.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ISearch.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the search results.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ISearchQuery">
            <summary>
            Builds a search query.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.Text(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.TextInName(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to card names.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.TextInDescription(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to card descriptions.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.TextInComments(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to card comments.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.TextInCheckLists(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to check lists.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.Member(Manatee.Trello.IMember)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a member search parameter.
            </summary>
            <param name="member">The member to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.Label(Manatee.Trello.ILabel)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a label search parameter.
            </summary>
            <param name="label">The label to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.Label(Manatee.Trello.LabelColor)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a label color search parameter.
            </summary>
            <param name="labelColor">The label color to search for.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.IsArchived">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only archived items.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.IsOpen">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only unarchived items.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.IsStarred">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only starred items.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.DueWithinDay">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next 24 hours.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.DueWithinWeek">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next week.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.DueWithinMonth">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next month.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.DueWithinDays(System.Int32)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next <paramref name="days"/> hours.
            </summary>
            <param name="days">The number of days.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.Overdue">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items which are overdue.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.CreatedWithinDay">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past 24 hours.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.CreatedWithinWeek">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past week.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.CreatedWithinMonth">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past month.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.CreatedWithinDays(System.Int32)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past <paramref name="days"/> days.
            </summary>
            <param name="days">The number of days.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.EditedWithinDay">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past 24 hours.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.EditedWithinWeek">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past week.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.EditedWithinMonth">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past month.
            </summary>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="M:Manatee.Trello.ISearchQuery.EditedWithinDays(System.Int32)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past <paramref name="days"/> days.
            </summary>
            <param name="days">The number of days.</param>
            <returns>The <see cref="T:Manatee.Trello.ISearchQuery"/> instance.</returns>
        </member>
        <member name="T:Manatee.Trello.ISticker">
            <summary>
            Represents a sticker on a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISticker.Left">
            <summary>
            Gets or sets the position of the left edge.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISticker.Name">
            <summary>
            Gets the name of the sticker.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISticker.Previews">
            <summary>
            Gets the collection of previews.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISticker.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <remarks>
            Rotation is clockwise and in degrees.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.ISticker.Top">
            <summary>
            Gets or sets the position of the top edge.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISticker.ImageUrl">
            <summary>
            Gets the URL for the sticker's image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ISticker.ZIndex">
            <summary>
            Gets or sets the z-index.
            </summary>
        </member>
        <member name="E:Manatee.Trello.ISticker.Updated">
            <summary>
            Raised when data on the sticker is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ISticker.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the sticker.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the sticker from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ISticker.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the sticker data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.IToken">
            <summary>
            Represents a user token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.AppName">
            <summary>
            Gets the name of the application associated with the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.BoardPermissions">
            <summary>
            Gets the permissions on boards granted by the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.CreationDate">
            <summary>
            Gets the creation date of the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.DateCreated">
            <summary>
            Gets the date and time the token was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.DateExpires">
            <summary>
            Gets the date and time the token expires, if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.Member">
            <summary>
            Gets the member for which the token was issued.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.MemberPermissions">
            <summary>
            Gets the permissions on members granted by the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IToken.OrganizationPermissions">
            <summary>
            Gets the permissions on organizations granted by the token.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IToken.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the token.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the token from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IToken.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the token data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ITokenPermission">
            <summary>
            Represents permissions granted by a token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ITokenPermission.CanRead">
            <summary>
            Gets whether a token can read values.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ITokenPermission.CanWrite">
            <summary>
            Gets whether a token can write values.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ITrelloFactory">
            <summary>
            Supports entity creation for dependency-injected applications.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Action(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IAction"/>.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IAction"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Board(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IBoard"/>.
            </summary>
            <param name="id">The board ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IBoard"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Card(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ICard"/>.
            </summary>
            <param name="id">The board ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ICard"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.CheckList(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ICheckList"/>.
            </summary>
            <param name="id">The checklist ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ICheckList"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.List(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IList"/>.
            </summary>
            <param name="id">The list ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IList"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Me(System.Threading.CancellationToken)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IMe"/>.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>An <see cref="T:Manatee.Trello.IMe"/></returns>
            <remarks>
            This performs a call to the API to get the member authorized by <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/>.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Member(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IMember"/>.
            </summary>
            <param name="id">The member ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IMember"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.MemberSearch(System.String,System.Nullable{System.Int32},Manatee.Trello.IBoard,Manatee.Trello.IOrganization,System.Nullable{System.Boolean},Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.IMemberSearch"/> object and performs the search.
            </summary>
            <param name="query">The query.</param>
            <param name="limit">(Optional) The result limit.  Can be a value from 1 to 20. The default is 8.</param>
            <param name="board">(Optional) A board to which the search should be limited.</param>
            <param name="organization">(Optional) An organization to which the search should be limited.</param>
            <param name="restrictToOrganization">(Optional) Restricts the search to only organization members.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided,
            <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Notification(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.INotification"/>.
            </summary>
            <param name="id">The notification ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.INotification"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Organization(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IOrganization"/>.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IOrganization"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.SearchQuery">
            <summary>
            Creates a new empty <see cref="T:Manatee.Trello.ISearchQuery"/>.
            </summary>
            <returns>An <see cref="T:Manatee.Trello.ISearchQuery"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Search(Manatee.Trello.ISearchQuery,System.Nullable{System.Int32},Manatee.Trello.SearchModelType,System.Collections.Generic.IEnumerable{Manatee.Trello.IQueryable},System.Boolean,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ISearch"/>.
            </summary>
            <param name="query">The search query.</param>
            <param name="limit">(Optional) The maximum number of items to return.</param>
            <param name="modelTypes">(Optional) The model types desired.</param>
            <param name="context">(Optional) The context (scope) of the search.</param>
            <param name="isPartial">(Optional) Allow "starts with" matches.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ISearch"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Search(System.String,System.Nullable{System.Int32},Manatee.Trello.SearchModelType,System.Collections.Generic.IEnumerable{Manatee.Trello.IQueryable},System.Boolean,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ISearch"/>.
            </summary>
            <param name="query">The search query.</param>
            <param name="limit">(Optional) The maximum number of items to return.</param>
            <param name="modelTypes">(Optional) The model types desired.</param>
            <param name="context">(Optional) The context (scope) of the search.</param>
            <param name="isPartial">(Optional) Allow "starts with" matches.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ISearch"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Token(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IToken"/>.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IToken"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Webhook``1(``0,System.String,System.String,Manatee.Trello.TrelloAuthorization,System.Threading.CancellationToken)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IWebhook`1"/> and registers a new webhook with Trello.
            </summary>
            <param name="target">The action ID.</param>
            <param name="callBackUrl">A URL that Trello can POST to.</param>
            <param name="description">A description.</param>
            <param name="auth">(Optional) The authorization.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>An <see cref="T:Manatee.Trello.IWebhook`1"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.Webhook``1(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IWebhook`1"/> for an existing webhook.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IWebhook`1"/></returns>
        </member>
        <member name="M:Manatee.Trello.ITrelloFactory.DropDownOption(System.String,Manatee.Trello.LabelColor)">
            <summary>
            Creates a <see cref="M:Manatee.Trello.ITrelloFactory.DropDownOption(System.String,Manatee.Trello.LabelColor)"/>.
            </summary>
            <param name="text">The drop down text.</param>
            <param name="color">(Optional) The drop down color.</param>
            <returns>An <see cref="T:Manatee.Trello.IDropDownOption"/></returns>
        </member>
        <member name="T:Manatee.Trello.IWebhook`1">
            <summary>
            Represents a webhook.
            </summary>
            <typeparam name="T">The type of object to which the webhook is attached.</typeparam>
        </member>
        <member name="P:Manatee.Trello.IWebhook`1.CallBackUrl">
            <summary>
            Gets or sets a callback URL for the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IWebhook`1.CreationDate">
            <summary>
            Gets the creation date of the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IWebhook`1.Description">
            <summary>
            Gets or sets a description for the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IWebhook`1.IsActive">
            <summary>
            Gets or sets whether the webhook is active.
            </summary>
        </member>
        <member name="P:Manatee.Trello.IWebhook`1.Target">
            <summary>
            Gets or sets the webhook's target.
            </summary>
        </member>
        <member name="E:Manatee.Trello.IWebhook`1.Updated">
            <summary>
            Raised when data on the webhook is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.IWebhook`1.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the webhook.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the webhook from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.IWebhook`1.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the webhook data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.CustomField">
            <summary>
            Represents a custom field instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomField.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomField.Definition">
            <summary>
            Gets the custom field definition.
            </summary>
        </member>
        <member name="E:Manatee.Trello.CustomField.Updated">
            <summary>
            Raised when data on the custom field is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CustomField.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the custom field instance data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.CustomField`1">
            <summary>
            Represents a custom field instance.
            </summary>
            <typeparam name="T">The data type of the custom field.</typeparam>
        </member>
        <member name="P:Manatee.Trello.CustomField`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CustomField`1.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.CustomFieldDefinition">
            <summary>
            Represents a custom field definition.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.Board">
            <summary>
            Gets the board on which the field is defined.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.FieldGroup">
            <summary>
            Gets an identifier that groups fields across boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.Name">
            <summary>
            Gets or sets the name of the field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.Options">
            <summary>
            Gets drop down options, if applicable.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.Position">
            <summary>
            Gets or sets the position of the field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldDefinition.Type">
            <summary>
            Gets the data type of the field.
            </summary>
        </member>
        <member name="E:Manatee.Trello.CustomFieldDefinition.Updated">
            <summary>
            Raised when data on the custom field definition is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the field definition.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the custom field definition data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.Nullable{System.Double},System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,Manatee.Trello.IDropDownOption,System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.SetValueForCard(Manatee.Trello.ICard,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Sets a value for a custom field on a card.
            </summary>
            <param name="card">The card on which to set the value.</param>
            <param name="value">The vaue to set.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The custom field instance.</returns>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinition.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.CustomFieldDefinitionCollection">
            <summary>
            A collection of custom field definitions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CustomFieldDefinitionCollection.Add(System.String,Manatee.Trello.CustomFieldType,System.Threading.CancellationToken,Manatee.Trello.IDropDownOption[])">
            <summary>
            Adds a new custom field definition to a board.
            </summary>
            <param name="name">The field's name.</param>
            <param name="type">The field's data type.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <param name="options">(Optional) A collection of drop down options.</param>
            <returns>The <see cref="T:Manatee.Trello.ICustomFieldDefinition"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.CustomFieldsPowerUp">
            <summary>
            Represents the Custom Fields power-up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldsPowerUp.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldsPowerUp.Name">
            <summary>
            Gets the power-up name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CustomFieldsPowerUp.IsPublic">
            <summary>
            Gets whether the power-up is public. (Really, I don't know what this is, and Trello's not talking.)
            </summary>
        </member>
        <member name="M:Manatee.Trello.CustomFieldsPowerUp.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.CustomFieldType">
            <summary>
            Enumerates the types of custom fields available.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CustomFieldType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CustomFieldType.Text">
            <summary>
            Indicates the field data is string text.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CustomFieldType.DropDown">
            <summary>
            Indicates the field data is one of several selectable options.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CustomFieldType.CheckBox">
            <summary>
            Indicates the field data is a boolean value.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CustomFieldType.DateTime">
            <summary>
            Indicates the field data is a date/time value.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CustomFieldType.Number">
            <summary>
            Indicates the field data is numeric.
            </summary>
        </member>
        <member name="T:Manatee.Trello.DateTimeField">
            <summary>
            Represents a custom date/time field instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DateTimeField.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.DropDownField">
            <summary>
            Represents a custom selection field instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DropDownField.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.DropDownOption">
            <summary>
            Represents an option for a custom selection field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DropDownOption.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DropDownOption.Field">
            <summary>
            Gets the custom field definition that defines this option.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DropDownOption.Text">
            <summary>
            Gets the option text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DropDownOption.Color">
            <summary>
            Gets the option color.
            </summary>
        </member>
        <member name="P:Manatee.Trello.DropDownOption.Position">
            <summary>
            Gets the option position.
            </summary>
        </member>
        <member name="M:Manatee.Trello.DropDownOption.Create(System.String,Manatee.Trello.LabelColor)">
            <summary>
            Creates a new drop down option.
            </summary>
            <param name="text">The text.</param>
            <param name="color">(Optional) The label color.</param>
            <returns>A new drop down option.</returns>
            <remarks>This object will not update.  It is intended for adding new options to custom drop down fields.</remarks>
        </member>
        <member name="M:Manatee.Trello.DropDownOption.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the drop down option.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the drop down option from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.DropDownOption.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the drop down option data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.DropDownOption.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.DropDownOptionCollection">
            <summary>
            A collection of custom field drop down options.
            </summary>
        </member>
        <member name="M:Manatee.Trello.DropDownOptionCollection.Add(System.String,Manatee.Trello.Position,System.Nullable{Manatee.Trello.LabelColor},System.Threading.CancellationToken)">
            <summary>
            Adds a new drop down option.
            </summary>
            <param name="text">The option's text.</param>
            <param name="position">The option's position.</param>
            <param name="color">(Optional) the option's color.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IDropDownOption"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.ImagePreview">
            <summary>
            Represents a preview for an image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ImagePreview.CreationDate">
            <summary>
            Gets the creation date of the image preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ImagePreview.Height">
            <summary>
            Gets the preview's height in pixels.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ImagePreview.Id">
            <summary>
            Gets the preview's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ImagePreview.IsScaled">
            <summary>
            Gets whether the attachment was scaled to generate the preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ImagePreview.Url">
            <summary>
            Gets the URI where the preview data is stored.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ImagePreview.Width">
            <summary>
            Gets the preview's width in pixels.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.DefaultJsonFactory">
            <summary>
            Creates instances of JSON interfaces.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.DefaultJsonFactory.Instance">
            <summary>
            Provides a singleton instance.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.DefaultJsonFactory.Create``1">
            <summary>
            Creates an instance of the requested JSON interface.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <returns>An instance of the requested type.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.DefaultJsonSerializer">
            <summary>
            Wrapper class for the Manatee.Json.Serializer for use with RestSharp.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.DefaultJsonSerializer.Instance">
            <summary>
            Provides a singleton instance.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.DefaultJsonSerializer.#ctor">
            <summary>
            Creates and initializes a new instance of the ManateeJsonSerializer class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.DefaultJsonSerializer.Serialize(System.Object)">
            <summary>
            Serializes an object to JSON.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns>An equivalent JSON string.</returns>
        </member>
        <member name="M:Manatee.Trello.Json.DefaultJsonSerializer.Deserialize``1(Manatee.Trello.Rest.IRestResponse{``0})">
            <summary>
            Attempts to deserialize a RESTful response to the indicated type.
            </summary>
            <typeparam name="T">The type of object expected.</typeparam>
            <param name="response">The response object which contains the JSON to deserialize.</param>
            <returns>The requested object, if JSON is valid; null otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Json.DefaultJsonSerializer.Deserialize``1(System.String)">
            <summary>
            Attempts to deserialize a RESTful response to the indicated type.
            </summary>
            <typeparam name="T">The type of object expected.</typeparam>
            <param name="content">A string which contains the JSON to deserialize.</param>
            <returns>The requested object, if JSON is valid; null otherwise.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.IAcceptId">
            <summary>
            Implemented on types that accept both a string ID as well as a full object for deserialization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IAcceptId.ValidForMerge">
            <summary>
            To be set to true when deserializing from an object.
            </summary>
            <remarks>
            This property is neither serialized nor deserialized.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.Json.IDeserializer">
            <summary>
            Defines methods required by the IRestClient to deserialize a response from JSON to an object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.IDeserializer.Deserialize``1(Manatee.Trello.Rest.IRestResponse{``0})">
            <summary>
            Attempts to deserialize a RESTful response to the indicated type.
            </summary>
            <typeparam name="T">The type of object expected.</typeparam>
            <param name="response">The response object which contains the JSON to deserialize.</param>
            <returns>The requested object, if JSON is valid; null otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Json.IDeserializer.Deserialize``1(System.String)">
            <summary>
            Attempts to deserialize a RESTful response to the indicated type.
            </summary>
            <typeparam name="T">The type of object expected.</typeparam>
            <param name="content">A string which contains the JSON to deserialize.</param>
            <returns>The requested object, if JSON is valid; null otherwise.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonAction">
            <summary>
            Defines the JSON structure for the Action object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.MemberCreator">
            <summary>
            Gets or sets the ID of the member who performed the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Data">
            <summary>
            Gets or sets the data associated with the action.  Contents depend upon the action's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Type">
            <summary>
            Gets or sets the action's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Date">
            <summary>
             Gets or sets the date on which the action was performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Text">
            <summary>
            Gets or sets the text for a comment while updating it.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonActionData">
            <summary>
            Defines the JSON structure for the ActionData object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Attachment">
            <summary>
            Gets or sets an attachment associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Board">
            <summary>
            Gets or sets a board associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.BoardSource">
            <summary>
            Gets or sets a board associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.BoardTarget">
            <summary>
            Gets or sets a board associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Card">
            <summary>
            Gets or sets a card associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.CardSource">
            <summary>
            Gets or sets a card associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.CheckItem">
            <summary>
            Gets or sets a check item associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.CheckList">
            <summary>
            Gets or sets a check list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.CustomField">
            <summary>
            Gets or sets a custom field definition associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Label">
            <summary>
            Gets or sets a label associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.DateLastEdited">
            <summary>
            Gets or sets the last date/time that a comment was edited.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.List">
            <summary>
            Gets or sets a list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.ListAfter">
            <summary>
            Gets or sets a destination list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.ListBefore">
            <summary>
            Gets or sets a source list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Member">
            <summary>
            Gets or sets a member associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Org">
            <summary>
            Gets or sets an organization associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Old">
            <summary>
            Gets or sets any previous data associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Plugin">
            <summary>
            Gets or sets plugin data associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Text">
            <summary>
            Gets or sets text associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.Value">
            <summary>
            Gets or sets a custom value associate with the action if any.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonActionOldData">
            <summary>
            Defines the JSON structure for the ActionOldData object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionOldData.Desc">
            <summary>
            Gets or sets an old description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionOldData.List">
            <summary>
            Gets or sets an old list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionOldData.Pos">
            <summary>
            Gets or sets an old position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionOldData.Text">
            <summary>
            Gets or sets old text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionOldData.Closed">
            <summary>
            Gets or sets whether an item was closed.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonAttachment">
            <summary>
            Defines the JSON structure for the Attachment object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Bytes">
            <summary>
             Gets or sets the size of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Date">
            <summary>
            Gets or sets the date on which the attachment was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.EdgeColor">
            <summary>
            Gets or sets the border color of the attachment preview on the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Member">
            <summary>
             Gets or sets the ID of the member who created the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.IsUpload">
            <summary>
             ?
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.MimeType">
            <summary>
             Gets or sets the type of attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Name">
            <summary>
             Gets or sets the name of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Pos">
            <summary>
            Gets or sets the attachment's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Previews">
            <summary>
             Gets or sets a collection of previews for the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Url">
            <summary>
             Gets or sets the attachment storage location.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBadges">
            <summary>
            Defines the JSON structure for the Badges object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Votes">
            <summary>
            Gets or sets the number of votes.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.ViewingMemberVoted">
            <summary>
            Gets or sets whether the member has voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Subscribed">
            <summary>
            Gets or sets whether the member is subscribed to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Fogbugz">
            <summary>
            Gets or sets the FogBugz ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.DueComplete">
            <summary>
            Gets or sets whether the card is complete.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Due">
            <summary>
            Gets or sets the due date, if one exists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Description">
            <summary>
            Gets or sets whether the card has a description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Comments">
            <summary>
            Gets or sets the number of comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.CheckItemsChecked">
            <summary>
            Gets or sets the number of check items which have been checked.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.CheckItems">
            <summary>
            Gets or sets the number of check items.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Attachments">
            <summary>
             Gets or sets the number of attachments.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoard">
            <summary>
            Defines the JSON structure for the Board object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Name">
            <summary>
             Gets or sets the board's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Desc">
            <summary>
             Gets or sets the board's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Closed">
            <summary>
             Gets or sets whether this board is closed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Organization">
            <summary>
            Gets or sets the ID of the organization, if any, to which this board belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Pinned">
            <summary>
            Gets or sets whether the board is pinned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Prefs">
            <summary>
            Gets or sets a set of preferences for the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Url">
            <summary>
             Gets or sets the URL for this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Subscribed">
            <summary>
             Gets or sets whether the user is subscribed to this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.BoardSource">
            <summary>
            Gets or sets a board to be used as a template.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Starred">
            <summary>
            Gets or sets whether the board is starred on the member's dashboard.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.DateLastActivity">
            <summary>
            Gets or sets the date the board last had activity.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.DateLastView">
            <summary>
            Gets or sets the date the board was last viewed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.ShortLink">
            <summary>
            Gets or sets the short link (ID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.ShortUrl">
            <summary>
            Gets or sets the short URL.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Actions">
            <summary>
            Gets or sets a list of actions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Cards">
            <summary>
            Gets or sets a list of cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.CustomFields">
            <summary>
            Gets or sets a list of custom field definitions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Labels">
            <summary>
            Gets or sets a list of labels.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Lists">
            <summary>
            Gets or sets a list of lists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Members">
            <summary>
            Gets or sets a list of members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Memberships">
            <summary>
            Gets or sets a list of memberships.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.PowerUps">
            <summary>
            Gets or sets a list of power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.PowerUpData">
            <summary>
            Gets or sets a list of power-up data.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardBackground">
            <summary>
            Defines the JSON structure for the BoardBackground object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.BottomColor">
            <summary>
            The bottom color of a gradient background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.Brightness">
            <summary>
            Gets the overall brightness of the background.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.Image">
            <summary>
            Gets or sets the url for the image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.ImageScaled">
            <summary>
            Gets or sets a collection of scaled images.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.Tile">
            <summary>
            Gets or sets whether the image should be tiled when displayed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardBackground.TopColor">
            <summary>
            The top color of a gradient background.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardMembership">
            <summary>
            Defines the JSON structure for the BoardMembership object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.Member">
            <summary>
             Gets or sets the ID of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.MemberType">
            <summary>
             Gets or sets the membership type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.Deactivated">
            <summary>
             Gets or sets whether the membership is deactivated.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardPersonalPreferences">
            <summary>
            Defines the JSON structure for the BoardPersonalPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebar">
            <summary>
             Gets or sets whether the side bar (right side of the screen) is shown
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebarMembers">
            <summary>
             Gets or sets whether the members section of the list of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebarBoardActions">
            <summary>
            Gets or sets whether the board actions (Add List/Add Member/Filter Cards) section of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebarActivity">
            <summary>
            Gets or sets whether the activity section of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowListGuide">
            <summary>
             Gets or sets whether the list guide (left side of the screen) is expanded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.EmailPosition">
            <summary>
             Gets or sets the position of new cards when they are added via email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.EmailList">
            <summary>
             Gets or sets the list for new cards when they are added via email.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardPreferences">
            <summary>
            Defines the JSON structure for the BoardPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.PermissionLevel">
            <summary>
            Gets or sets who may view the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Voting">
            <summary>
            Gets or sets who may vote on cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Comments">
            <summary>
            Gets or sets who may comment on cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Invitations">
            <summary>
            Gets or sets who may extend invitations to join the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.SelfJoin">
            <summary>
            Gets or sets whether a Trello member may join the board without an invitation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.CardCovers">
            <summary>
            Gets or sets whether card covers are shown on the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.CalendarFeed">
            <summary>
            Gets or sets whether the calendar feed is enabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.CardAging">
            <summary>
            Gets or sets the style of card aging is used, if the power up is enabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Background">
            <summary>
            Gets or sets the background image of the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardVisibilityRestrict">
            <summary>
            Defines the JSON structure for the BoardVisibilityRestrict object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardVisibilityRestrict.Public">
            <summary>
            Gets or sets the visibility of publicly-visible boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardVisibilityRestrict.Org">
            <summary>
            Gets or sets the visibility of Org-visible boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardVisibilityRestrict.Private">
            <summary>
            Gets or sets the visibility of private boards owned by the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCacheable">
            <summary>
            Defines properties required for TrelloService to cache an item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCacheable.Id">
            <summary>
            Gets or sets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCard">
            <summary>
            Defines the JSON structure for the Card object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Actions">
            <summary>
            Gets or sets a collection of actions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Attachments">
            <summary>
            Gets or sets a collection of attachments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Board">
            <summary>
            Gets or sets the ID of the board which contains the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Badges">
            <summary>
            Gets or set the badges displayed on the card cover.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.CheckLists">
            <summary>
            Gets or sets a collection of checklists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Closed">
            <summary>
            Gets or sets whether a card has been archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Comments">
            <summary>
            Gets or sets a collection of comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.CustomFields">
            <summary>
            Gets or sets a collection of custom field instances.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.DateLastActivity">
            <summary>
            Gets or sets the date of last activity for a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Desc">
            <summary>
            Gets or sets the card's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Due">
            <summary>
            Gets or sets the card's due date.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.DueComplete">
            <summary>
            Gets or sets whether the card is complete.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdShort">
            <summary>
            Gets or sets the card's short ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdAttachmentCover">
            <summary>
            Gets or sets the ID of the attachment cover image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Labels">
            <summary>
            Gets or sets the labels assigned to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.List">
            <summary>
            Gets or sets the ID of the list which contains the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.ManualCoverAttachment">
            <summary>
            Gets or sets whether the cover attachment was manually selected
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Members">
            <summary>
            Gets or sets a collection of members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Name">
            <summary>
            Gets or sets the card's name
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Pos">
            <summary>
            Gets or sets the card's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.PowerUpData">
            <summary>
            Gets or sets a collection of power-up data.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Url">
            <summary>
            Gets or sets the URL for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.ShortUrl">
            <summary>
            Gets or sets the short URL for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Subscribed">
            <summary>
            Gets or sets whether the current member is subscribed to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.CardSource">
            <summary>
            Gets or sets a card to be used as a template during creation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.UrlSource">
            <summary>
            Gets or sets a URL to be imported during creation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.ForceDueDate">
            <summary>
            Gets or sets whether the due date should be serialized, even if it is null.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdMembers">
            <summary>
            Gets or sets a comma-delimited list of member IDs. Used during card creation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdLabels">
            <summary>
            Gets or sets a comma-delimited list of label IDs. Used during card creation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Stickers">
            <summary>
            Gets or sets a collection of stickers.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.MembersVoted">
            <summary>
            Gets or sets a collection of members who have voted for the card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCheckItem">
            <summary>
            Defines the JSON structure for the CheckItem object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.CheckList">
            <summary>
            Gets or sets the check list for the check item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.State">
            <summary>
            Gets or sets the check state of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.Name">
            <summary>
            Gets or sets the name of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.Pos">
            <summary>
            Gets or sets the position of the checklist item.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCheckList">
            <summary>
            Defines the JSON structure for the CheckList object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.Name">
            <summary>
            Gets or sets the name of this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.Board">
            <summary>
            Gets or sets the ID of the board which contains this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.Card">
            <summary>
            Gets or sets the ID of the card which contains this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.CheckItems">
            <summary>
            Gets or sets the collection of items in this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.Pos">
            <summary>
            Gets or sets the position of this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.CheckListSource">
            <summary>
            Gets or sets a checklist to copy during creation.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCustomDropDownOption">
            <summary>
            Defines the JSON structure for a custom field drop down option.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomDropDownOption.Field">
            <summary>
            Gets or sets the custom field definition.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomDropDownOption.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomDropDownOption.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomDropDownOption.Pos">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCustomField">
            <summary>
            Defines the JSON structure for a custom field instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Definition">
            <summary>
            Gets or sets the custom field definition.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Number">
            <summary>
            Gets or sets the number.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Date">
            <summary>
            Gets or sets the date.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Checked">
            <summary>
            Gets or sets the checked.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Selected">
            <summary>
            Gets or sets the selected drop down option.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.Type">
            <summary>
            Gets or sets the data type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomField.UseForClear">
            <summary>
            Used to signal the value should be cleared.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCustomFieldDefinition">
            <summary>
            Defines the JSON structure for a custom field definition.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomFieldDefinition.Board">
            <summary>
            Gets or sets the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomFieldDefinition.FieldGroup">
            <summary>
            Gets or sets the field group.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomFieldDefinition.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomFieldDefinition.Pos">
            <summary>
            Gets or sets the position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomFieldDefinition.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCustomFieldDefinition.Options">
            <summary>
            Gets or sets any drop down options.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonFactory">
            <summary>
            Creates instances of JSON interfaces.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonFactory.Create``1">
            <summary>
            Creates an instance of the requested JSON interface.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <returns>An instance of the requested type.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonImagePreview">
            <summary>
            Defines the JSON structure for the AttachmentPreview object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonImagePreview.Width">
            <summary>
             Gets or sets the width in pixels of the attachment preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonImagePreview.Height">
            <summary>
             Gets or sets the height in pixels of the attachment preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonImagePreview.Url">
            <summary>
             Gets or sets the attachment storage location.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonImagePreview.Scaled">
            <summary>
            Gets or sets whether the attachment was scaled to produce the preview.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonLabel">
            <summary>
            Defines the JSON structure for the Label object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.Board">
            <summary>
            Gets and sets the board on which the label is defined.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.Color">
            <summary>
            Gets and sets the color of the label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.ForceNullColor">
            <summary>
            Determines if the color property should be submitted even if it is null.
            </summary>
            <remarks>
            This property is not part of the JSON structure.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.Name">
            <summary>
            Gets and sets the name of the label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.Uses">
            <summary>
            Gets and sets how many cards use this label.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonList">
            <summary>
            Defines the JSON structure for the List object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Name">
            <summary>
            Gets or sets the name of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Closed">
            <summary>
            Gets or sets whether the list is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Board">
            <summary>
            Gets or sets the ID of the board which contains the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Pos">
            <summary>
            Gets or sets the position of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Subscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Actions">
            <summary>
            Gets or sets a collection of actions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Cards">
            <summary>
            Gets or sets a collection of cards.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonMember">
            <summary>
            Defines the JSON structure for the Member object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.AvatarHash">
            <summary>
            Gets or sets the member's avatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Bio">
            <summary>
            Gets or sets the bio of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.FullName">
            <summary>
            Gets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.MemberType">
            <summary>
            Gets or sets the type of member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Status">
            <summary>
            Gets or sets the member's activity status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Url">
            <summary>
            Gets or sets the URL to the member's profile.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Username">
            <summary>
            Gets or sets the member's username.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.AvatarSource">
            <summary>
            Gets or sets the source URL for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Confirmed">
            <summary>
            Gets or sets whether the member is confirmed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Email">
            <summary>
            Gets or sets the member's registered email address.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.GravatarHash">
            <summary>
            Gets or sets the member's Gravatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.LoginTypes">
            <summary>
            Gets or sets the login types for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Trophies">
            <summary>
            Gets or sets the trophies obtained by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.UploadedAvatarHash">
            <summary>
            Gets or sets the user's uploaded avatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.OneTimeMessagesDismissed">
            <summary>
            Gets or sets the types of message which are dismissed for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Similarity">
            <summary>
            Gets or sets the similarity of the member to a search query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Prefs">
            <summary>
            Gets or sets a set of preferences for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Actions">
            <summary>
            Gets or sets a collection of actions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Boards">
            <summary>
            Gets or sets a collection of boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Cards">
            <summary>
            Gets or sets a collection of cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Notifications">
            <summary>
            Gets or sets a collection of notifications.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Organizations">
            <summary>
            Gets or sets a collection of organizations.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonMemberPreferences">
            <summary>
            Defines the JSON structure for the MemberPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberPreferences.MinutesBetweenSummaries">
            <summary>
            Gets or sets the number of minutes between summary emails.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberPreferences.ColorBlind">
            <summary>
            Enables/disables color-blind mode.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonMemberSearch">
            <summary>
            Defines the JSON structure for a member search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSearch.Members">
            <summary>
            Gets or sets a list of members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSearch.Board">
            <summary>
            Gets or sets a board within which the search should run.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSearch.Limit">
            <summary>
            Gets or sets the number of results to return.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSearch.OnlyOrgMembers">
            <summary>
            Gets or sets whether only organization members should be returned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSearch.Organization">
            <summary>
            Gets or sets an organization within which the search should run.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSearch.Query">
            <summary>
            Gets or sets the search query.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonNotification">
            <summary>
            Defines the JSON structure for the Notification object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Unread">
            <summary>
            Gets or sets whether the notification has been read.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Type">
            <summary>
            Gets or sets the notification's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Date">
            <summary>
             Gets or sets the date on which the notification was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Data">
            <summary>
            Gets or sets the data associated with the notification.  Contents depend upon the notification's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.MemberCreator">
            <summary>
            Gets or sets the ID of the member whose action spawned the notification.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonNotificationData">
            <summary>
            Defines the JSON structure for the NotificationData object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Attachment">
            <summary>
            Gets or sets an attachment associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Board">
            <summary>
            Gets or sets a board associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.BoardSource">
            <summary>
            Gets or sets a board associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.BoardTarget">
            <summary>
            Gets or sets a board associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Card">
            <summary>
            Gets or sets a card associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.CardSource">
            <summary>
            Gets or sets a card associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.CheckItem">
            <summary>
            Gets or sets a check item associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.CheckList">
            <summary>
            Gets or sets a check list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.List">
            <summary>
            Gets or sets a list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.ListAfter">
            <summary>
            Gets or sets a destination list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.ListBefore">
            <summary>
            Gets or sets a source list associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Member">
            <summary>
            Gets or sets a member associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Org">
            <summary>
            Gets or sets an organization associated with the action if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Old">
            <summary>
            Gets or sets any previous data associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.Text">
            <summary>
            Gets or sets text associated with the action if any.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonNotificationOldData">
            <summary>
            Defines the JSON structure for the ActionOldData object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationOldData.Desc">
            <summary>
            Gets or sets an old description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationOldData.List">
            <summary>
            Gets or sets an old list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationOldData.Pos">
            <summary>
            Gets or sets an old position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationOldData.Text">
            <summary>
            Gets or sets old text.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationOldData.Closed">
            <summary>
            Gets or sets whether an item was closed.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonOrganization">
            <summary>
            Defines the JSON structure for the Organization object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Name">
            <summary>
            Gets or sets the name of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.DisplayName">
            <summary>
            Gets or sets the name to be displayed for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Desc">
            <summary>
            Gets or sets the description for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Url">
            <summary>
            Gets or sets the URL to the organization's profile.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Website">
            <summary>
            Gets or sets the organization's website.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.LogoHash">
            <summary>
            Gets or sets the organization's logo hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PowerUps">
            <summary>
            Enumerates the powerups obtained by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PaidAccount">
            <summary>
            Gets or sets whether the organization is a paid account.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Prefs">
            <summary>
            Gets or sets a set of preferences for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PremiumFeatures">
            <summary>
            Gets or sets a collection of premium features available to the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Actions">
            <summary>
            Gets or sets a collection of actions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Boards">
            <summary>
            Gets or sets a collection of boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Members">
            <summary>
            Gets or sets a collection of members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Memberships">
            <summary>
            Gets or sets a collection of memberships.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PowerUpData">
            <summary>
            Gets or sets a collection of power-up data.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonOrganizationMembership">
            <summary>
            Defines the JSON structure for the OrganizationMembership object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.Member">
            <summary>
             Gets or sets the ID of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.MemberType">
            <summary>
             Gets or sets the membership type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.Unconfirmed">
            <summary>
             Gets or sets whether the membership is unconfirmed.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonOrganizationPreferences">
            <summary>
            Defines the JSON structure for the OrganizationPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.PermissionLevel">
            <summary>
            Gets or sets the permission level.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.OrgInviteRestrict">
            <summary>
            Gets or sets organization invitation restrictions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.ExternalMembersDisabled">
            <summary>
            Gets or sets whether external members are disabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.AssociatedDomain">
            <summary>
            Gets or sets the Google Apps domain.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.BoardVisibilityRestrict">
            <summary>
            Gets or sets the visibility of boards owned by the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonParameter">
            <summary>
            Defines the JSON structure for a single-value parameter.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonParameter.String">
            <summary>
            Gets or sets a string parameter value.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonParameter.Boolean">
            <summary>
            Gets or sets a boolean parameter value.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonParameter.Object">
            <summary>
            Gets or sets an object parameter value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonPosition">
            <summary>
            Defines the JSON structure for the Position object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPosition.Explicit">
            <summary>
            Gets or sets an explicit numeric value for the position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPosition.Named">
            <summary>
            Gets or sets a named value for the position.
            </summary>
            <remarks>
            Valid values are "top" and "bottom".
            </remarks>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonPowerUp">
            <summary>
            Defines the JSON structure for the PowerUp object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPowerUp.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPowerUp.Public">
            <summary>
            Gets or sets whether the power-up is public.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPowerUp.Url">
            <summary>
            Gets or sets the URL for more information about the power-up.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonPowerUpData">
            <summary>
            Defines the JSON structure for the PowerUpData object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPowerUpData.PluginId">
            <summary>
            Gets or sets the power-up ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonPowerUpData.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonSearch">
            <summary>
            Defines the JSON structure for the Search object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Actions">
            <summary>
            Lists the IDs of actions which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Boards">
            <summary>
            Lists the IDs of boards which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Cards">
            <summary>
            Lists the IDs of cards which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Members">
            <summary>
            Lists the IDs of members which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Organizations">
            <summary>
            Lists the IDs of organizations which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Query">
            <summary>
            Gets or sets the search query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Context">
            <summary>
            Gets or sets a collection of boards, cards, and organizations within which the search should run.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Types">
            <summary>
            Gets or sets which types of objects should be returned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Limit">
            <summary>
            Gets or sets how many results to return;
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearch.Partial">
            <summary>
            Gets or sets whether the search should match on partial words.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonSticker">
            <summary>
            Defines the JSON structure for the Sticker object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.Left">
            <summary>
            Gets or sets the position of the left edge of the sticker.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.Name">
            <summary>
            Gets or sets the name of the sticker.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.Previews">
            <summary>
             Gets or sets a collection of previews for the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.Rotation">
            <summary>
            Gets or sets the rotation angle of the sticker in degrees.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.Top">
            <summary>
            Gets or sets the position of the top edge of the sticker.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.Url">
            <summary>
            Gets or sets the image's URL.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSticker.ZIndex">
            <summary>
            Gets or sets the sticker's z-index.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonToken">
            <summary>
            Defines the JSON structure for the Token object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.Identifier">
            <summary>
            Gets or sets the identifier of the application which requested the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.Member">
            <summary>
            Gets or sets the ID of the member who issued the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.DateCreated">
            <summary>
            Gets or sets the date the token was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.DateExpires">
            <summary>
            Gets or sets the date the token will expire, if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.Permissions">
            <summary>
            Gets or sets the collection of permissions granted by the token.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonTokenPermission">
            <summary>
            Defines the JSON structure for the TokenPermission object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.IdModel">
            <summary>
            Gets or sets the ID of the model to which a token grants permissions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.ModelType">
            <summary>
            Gets or sets the type of the model.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.Read">
            <summary>
            Gets or sets whether a token grants read permissions to the model.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.Write">
            <summary>
            Gets or sets whether a token grants write permissions to the model.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonWebhook">
            <summary>
            Defines the JSON structure for the Webhook object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.Description">
            <summary>
            Gets or sets the description of the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.IdModel">
            <summary>
            Gets or sets the ID of the entity which the webhook monitors.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.CallbackUrl">
            <summary>
            Gets or sets the URL which receives notification messages.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.Active">
            <summary>
            Gets or sets whether the webhook is active.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonWebhookNotification">
            <summary>
            Defines the JSON structure for the WebhookNotification object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhookNotification.Action">
            <summary>
            Gets or sets the action associated with the notification.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.ISerializer">
            <summary>
            Defines methods required by the IRestClient to serialize an object to JSON.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.ISerializer.Serialize(System.Object)">
            <summary>
            Serializes an object to JSON.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns>An equivalent JSON string.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.JsonDeserializeAttribute">
            <summary>
            Declares that the JSON property should be deserialized.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.JsonSerializeAttribute">
            <summary>
            Declares that the JSON property should be serialized and whether it is optional or required.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.JsonSerializeAttribute.IsRequired">
            <summary>
            Gets or sets whether this property is required by the Trello API.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.JsonSpecialSerializationAttribute">
            <summary>
            Declares that the JSON property has a special serialization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Label">
            <summary>
            A label.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Label.Fields">
            <summary>
            Enumerates the data which can be pulled for labels.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Label.Fields.Board">
            <summary>
            Indicates the Board property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Label.Fields.Color">
            <summary>
            Indicates the Color property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Label.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Label.Fields.Uses">
            <summary>
            Indicates the Uses property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Board">
            <summary>
            Gets the board on which the label is defined.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Color">
            <summary>
            Gets and sets the color.  Use null for no color.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.CreationDate">
            <summary>
            Gets the creation date of the label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Id">
            <summary>
            Gets the label's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Name">
            <summary>
            Gets and sets the label's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Uses">
            <summary>
            Gets the number of cards which use this label.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Label.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the label.  All usages of the label will also be removed.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the label from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Label.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the label data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Label.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.LabelColor">
            <summary>
            Enumerates label colors for a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.None">
            <summary>
            Indicates a colorless label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Green">
            <summary>
            Indicates a green label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Yellow">
            <summary>
            Indicates a yellow label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Orange">
            <summary>
            Indicates an orange label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Red">
            <summary>
            Indicates a red label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Purple">
            <summary>
            Indicates a purple label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Blue">
            <summary>
            Indicates a blue label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Pink">
            <summary>
            Indicates a blue label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Sky">
            <summary>
            Indicates a blue label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Lime">
            <summary>
            Indicates a blue label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Black">
            <summary>
            Indicates a blue label.
            </summary>
        </member>
        <member name="T:Manatee.Trello.License">
            <summary>
            Manages the license used with Manatee.Trello. Please see https://github.com/gregsdennis/Manatee.Trello/wiki/Licensing-3 for information on purchasing a license.
            </summary>
        </member>
        <member name="M:Manatee.Trello.License.RegisterLicense(System.String)">
            <summary>
            Register the specified license with Manatee.Trello. Please see https://github.com/gregsdennis/Manatee.Trello/wiki/Licensing-3 for information on purchasing a license.
            </summary>
            <param name="license">The license text to register.</param>
            <remarks> 
            The recommended way to register the license key is to call <see cref="M:Manatee.Trello.License.RegisterLicense(System.String)"/> once during application start up. In ASP.NET web applications it can be placed in the <c>Startup.cs</c> or <c>Global.asax.cs</c>, in WPF applications it can be placed in the <c>Application.Startup</c> event, and in Console applications it can be placed in the <c>static void Main(string[] args)</c> meethod.
            </remarks>
            <example> 
            This sample shows how to register a Manatee.Trello license with the <see cref="M:Manatee.Trello.License.RegisterLicense(System.String)"/> method.
            <code>
            // replace with your license key
            string licenseKey = "manatee-json-license-key";
            License.RegisterLicense(licenseKey);
            </code>
            </example>
        </member>
        <member name="T:Manatee.Trello.LicenseException">
            <summary>
            Thrown when an invalid license is registered.
            </summary>
        </member>
        <member name="T:Manatee.Trello.List">
            <summary>
            Represents a list.
            </summary>
        </member>
        <member name="T:Manatee.Trello.List.Fields">
            <summary>
            Enumerates the data which can be pulled for lists.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.IsClosed">
            <summary>
            Indicates the IsClosed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.Board">
            <summary>
            Indicates the Board property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.Position">
            <summary>
            Indicates the Position property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.IsSubscribed">
            <summary>
            Indicates the Susbcribed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.Actions">
            <summary>
            Indicates the actions will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.List.Fields.Cards">
            <summary>
            Indicates the cards will be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Actions">
            <summary>
            Gets the collection of actions performed on the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Board">
            <summary>
            Gets or sets the board on which the list belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Cards">
            <summary>
            Gets the collection of cards contained in the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.CreationDate">
            <summary>
            Gets the creation date of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Id">
            <summary>
            Gets the list's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.IsArchived">
            <summary>
            Gets or sets whether the list is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Name">
            <summary>
            Gets the list's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Position">
            <summary>
            Gets the list's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Item(System.String)">
            <summary>
            Retrieves a card which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching card, or null if none found.</returns>
            <remarks>
            Matches on card ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.List.Item(System.Int32)">
            <summary>
            Retrieves the card at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The card.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="E:Manatee.Trello.List.Updated">
            <summary>
            Raised when data on the list is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.List.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.List"/> object.
            </summary>
            <param name="id">The list's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.List.ApplyAction(Manatee.Trello.IAction)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.List.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the label data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.List.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.ListCollection">
            <summary>
            A collection of lists.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ListCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new list.
            </summary>
            <param name="name">The name of the list to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IList"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.ListFilter">
            <summary>
            Enumerates the filter options for list collections.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ListFilter.Open">
            <summary>
            Filters to only unarchived lists.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ListFilter.Closed">
            <summary>
            Filters to only archived lists.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ListFilter.All">
            <summary>
            Indicates that all lists should be returned.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Me">
            <summary>
            Represents the current member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.AvatarSource">
            <summary>
            Gets or sets the source type for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Bio">
            <summary>
            Gets or sets the member's bio.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Boards">
            <summary>
            Gets the collection of boards owned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Email">
            <summary>
            Gets or sets the member's email.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.FullName">
            <summary>
            Gets or sets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Notifications">
            <summary>
            Gets the collection of notificaitons for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Organizations">
            <summary>
            Gets the collection of organizations to which the member belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Preferences">
            <summary>
            Gets the set of preferences for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.UserName">
            <summary>
            Gets or sets the member's username.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Member">
            <summary>
            Represents a member.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Member.Fields">
            <summary>
            Enumerates the data which can be pulled for members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.AvatarHash">
            <summary>
            Indicates the AvatarHash property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.AvatarSource">
            <summary>
            Indicates the AvatarSource property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Bio">
            <summary>
            Indicates the Bio property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.IsConfirmed">
            <summary>
            Indicates the IsConfirmed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Email">
            <summary>
            Indicates the Email property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.FullName">
            <summary>
            Indicates the FullName property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.GravatarHash">
            <summary>
            Indicates the GravatarHash property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Initials">
            <summary>
            Indicates the Initials property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.LoginTypes">
            <summary>
            Indicates the LoginTypes property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.MemberType">
            <summary>
            Indicates the MemberType property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.OneTimeMessagesDismissed">
            <summary>
            Indicates the OneTimeMessagesDismissed property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Preferencess">
            <summary>
            Indicates the Preferencess property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Status">
            <summary>
            Indicates the Status property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Trophies">
            <summary>
            Indicates the Trophies property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.UploadedAvatarHash">
            <summary>
            Indicates the UploadedAvatarHash property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Url">
            <summary>
            Indicates the Url property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Username">
            <summary>
            Indicates the Username property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Actions">
            <summary>
            Indicates the actions will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Boards">
            <summary>
            Indicates the boards will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Organizations">
            <summary>
            Indicates the organizations will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Cards">
            <summary>
            Indicates the cards will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Member.Fields.Notifications">
            <summary>
            Indicates the notifications will be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Actions">
            <summary>
            Gets the collection of actions performed by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.AvatarSource">
            <summary>
            Gets the source type for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.AvatarUrl">
            <summary>
            Gets the URL to the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Bio">
            <summary>
            Gets the member's bio.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Boards">
            <summary>
            Gets the collection of boards owned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Cards">
            <summary>
            Gets the collection of cards assigned to the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.CreationDate">
            <summary>
            Gets the creation date of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.FullName">
            <summary>
            Gets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Id">
            <summary>
            Gets the member's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.IsConfirmed">
            <summary>
            Gets whether the member has actually join or has merely been invited (ghost).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Mention">
            <summary>
            Gets a string which can be used in comments or descriptions to mention another user.  The user will receive notification that they've been mentioned.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Organizations">
            <summary>
            Gets the collection of organizations to which the member belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Status">
            <summary>
            Gets the member's online status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Trophies">
            <summary>
            Gets the collection of trophies earned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Url">
            <summary>
            Gets the member's URL.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.UserName">
            <summary>
            Gets the member's username.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Member.Updated">
            <summary>
            Raised when data on the member is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Member.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Member"/> object.
            </summary>
            <param name="id">The member's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <remarks>
            The supplied ID can be either the full ID or the username.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Member.ApplyAction(Manatee.Trello.IAction)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.Member.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the member data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Member.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Manatee.Trello.MemberCollection">
            <summary>
            A collection of members.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberCollection.Add(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Adds a member to the collection.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <param name="member">The member to add.</param>
        </member>
        <member name="M:Manatee.Trello.MemberCollection.Remove(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <param name="member">The member to remove.</param>
        </member>
        <member name="T:Manatee.Trello.MemberExtensions">
            <summary>
            Extension methods for members.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberExtensions.Cards(Manatee.Trello.IMember)">
            <summary>
            Gets all open cards for a member.
            </summary>
            <param name="member">The member.</param>
            <returns>A <see cref="T:Manatee.Trello.ReadOnlyCardCollection"/> containing the member's cards.</returns>
        </member>
        <member name="T:Manatee.Trello.MemberFilter">
            <summary>
            Enumerates the filter options for member collections.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberFilter.Normal">
            <summary>
            Filters to only normal members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberFilter.Admins">
            <summary>
            Filters to only admins.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberFilter.Owners">
            <summary>
            Filters to only owners.
            </summary>
            <remarks>
            Per @doug at Trello regarding <see cref="F:Manatee.Trello.MemberFilter.Admins"/> == <see cref="F:Manatee.Trello.MemberFilter.Owners"/>: "Turns out owners was once used by the iOS app and we only have it there for backwards compatibility. They are the same."
            </remarks>
        </member>
        <member name="T:Manatee.Trello.MemberPreferences">
            <summary>
            Represents preferences for a member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.EnableColorBlindMode">
            <summary>
            Gets or sets whether color-blind mode is enabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.MinutesBetweenSummaries">
            <summary>
            Gets or sets the time between email summaries.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MemberSearch">
            <summary>
            Performs a search for members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSearch.Results">
            <summary>
            Gets the collection of results returned by the search.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberSearch.#ctor(System.String,System.Nullable{System.Int32},Manatee.Trello.IBoard,Manatee.Trello.IOrganization,System.Nullable{System.Boolean},Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.MemberSearch"/> object and performs the search.
            </summary>
            <param name="query">The query.</param>
            <param name="limit">(Optional) The result limit.  Can be a value from 1 to 20. The default is 8.</param>
            <param name="board">(Optional) A board to which the search should be limited.</param>
            <param name="organization">(Optional) An organization to which the search should be limited.</param>
            <param name="restrictToOrganization">(Optional) Restricts the search to only organization members.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided,
            <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.MemberSearch.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the search results.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.MemberSearchResult">
            <summary>
            Represents a result from a member search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSearchResult.Member">
            <summary>
            Gets the returned member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSearchResult.Similarity">
            <summary>
            Gets a value indicating the similarity of the member to the search query.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MembershipFilter">
            <summary>
            Enumerates the filter options for membership collections.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MembershipFilter.Me">
            <summary>
            Filters to only the owner of the user token.
            </summary>
            <remarks>
            Get the board/organization membership information in addition to the member's profile.
            </remarks>
        </member>
        <member name="F:Manatee.Trello.MembershipFilter.Normal">
            <summary>
            Filters to only normal members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MembershipFilter.Admin">
            <summary>
            Filters to only admins.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MembershipFilter.Active">
            <summary>
            Filters to only active members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MembershipFilter.Deactivated">
            <summary>
            Filters to only deactivated members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MembershipFilter.All">
            <summary>
            Filters to all members.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MemberStatus">
            <summary>
            Enumerates known values for a member's activity status.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatus.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatus.Disconnected">
            <summary>
            Indicates the member is not connected to the website.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatus.Idle">
            <summary>
            Indicates the member is connected to the website but inactive.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatus.Active">
            <summary>
            Indicates the member is actively using the website.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MemberStickerCollection">
            <summary>
            A collection of <see cref="T:Manatee.Trello.ISticker"/>s.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberStickerCollection.Add(System.Byte[],System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a <see cref="T:Manatee.Trello.ISticker"/> to a <see cref="T:Manatee.Trello.IMember"/>'s custom sticker set by uploading data.
            </summary>
            <param name="data">The byte data of the file to attach.</param>
            <param name="name">A name for the sticker.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.ISticker"/> generated by Trello.</returns>
        </member>
        <member name="T:Manatee.Trello.Notification">
            <summary>
            Represents a notification.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Notification.Fields">
            <summary>
            Enumerates the data which can be pulled for notifications.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Notification.Fields.Creator">
            <summary>
            Indicates the Creator property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Notification.Fields.Data">
            <summary>
            Indicates the Data property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Notification.Fields.IsUnread">
            <summary>
            Indicates the IsUnread property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Notification.Fields.Type">
            <summary>
            Indicates the Type property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Notification.Fields.Date">
            <summary>
            Indicates the Date property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.CreationDate">
            <summary>
            Gets the creation date of the notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Creator">
            <summary>
            Gets the member who performed the action which created the notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Data">
            <summary>
            Gets any data associated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Date">
            <summary>
            Gets the date and time at which the notification was issued.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Id">
            <summary>
            Gets the notification's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.IsUnread">
            <summary>
            Gets or sets whether the notification has been read.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Type">
            <summary>
            Gets the type of notification.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Notification.Updated">
            <summary>
            Raised when data on the notification is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Notification.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.Notification"/> object.
            </summary>
            <param name="id">The notification's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided,
            <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.Notification.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the notification data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Notification.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Manatee.Trello.NotificationData">
            <summary>
            Exposes any data associated with a notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NotificationData.Attachment">
            <summary>
            Gets an assocated attachment.
            </summary>
            <associated-notification-types>
            - AddedAttachmentToCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.Board">
            <summary>
            Gets an assocated board.
            </summary>
            <associated-notification-types>
            - AddedToBoard
            - AddAdminToBoard
            - CloseBoard
            - RemovedFromBoard
            - MakeAdminOfBoard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.BoardSource">
            <summary>
            Gets an assocated board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NotificationData.BoardTarget">
            <summary>
            Gets an assocated board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NotificationData.Card">
            <summary>
            Gets an assocated card.
            </summary>
            <associated-notification-types>
            - AddedAttachmentToCard
            - AddedToCard
            - AddedMemberToCard
            - ChangeCard
            - CommentCard
            - CreatedCard
            - RemovedFromCard
            - RemovedMemberFromCard
            - MentionedOnCard
            - UpdateCheckItemStateOnCard
            - CardDueSoon
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.CardSource">
            <summary>
            Gets an assocated card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NotificationData.CheckItem">
            <summary>
            Gets an assocated checklist item.
            </summary>
            <associated-notification-types>
            - UpdateCheckItemStateOnCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.CheckList">
            <summary>
            Gets an assocated checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NotificationData.List">
            <summary>
            Gets an assocated list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NotificationData.ListAfter">
            <summary>
            Gets the current list.
            </summary>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.NotificationData.List"/> or <see cref="P:Manatee.Trello.NotificationData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.NotificationData.ListBefore">
            <summary>
            Gets the previous list.
            </summary>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.NotificationData.List"/> or <see cref="P:Manatee.Trello.NotificationData.OldList"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.NotificationData.Member">
            <summary>
            Gets an assocated member.
            </summary>
            <associated-notification-types>
            - AddedMemberToCard
            - RemovedMemberFromCard
            - MentionedOnCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.OldDescription">
            <summary>
            Gets the previous description.
            </summary>
            <associated-notification-types>
            - ChangeCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.OldList">
            <summary>
            Gets the previous list.
            </summary>
            <remarks>
            For some action types, this information may be in the <see cref="P:Manatee.Trello.NotificationData.ListAfter"/> or <see cref="P:Manatee.Trello.NotificationData.ListBefore"/> properties.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.NotificationData.OldPosition">
            <summary>
            Gets the previous position.
            </summary>
            <associated-notification-types>
            - ChangeCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.OldText">
            <summary>
            Gets the previous text value. 
            </summary>
            <associated-notification-types>
            - CommentCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.Organization">
            <summary>
            Gets an assocated organization.
            </summary>
            <associated-notification-types>
            - AddedToOrganization
            - AddAdminToOrganization
            - RemovedFromOrganization
            - MakeAdminOfOrganization
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.Text">
            <summary>
            Gets assocated text.
            </summary>
            <associated-notification-types>
            - CommentCard
            </associated-notification-types>
        </member>
        <member name="P:Manatee.Trello.NotificationData.WasArchived">
            <summary>
            Gets whether the object was previously archived.
            </summary>
            <associated-notification-types>
            - ChangeCard
            - CloseBoard
            </associated-notification-types>
        </member>
        <member name="T:Manatee.Trello.NotificationType">
            <summary>
             Enumerates known types of notifications.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedAttachmentToCard">
            <summary>
            Indicates an attachment was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedToBoard">
            <summary>
            Indicates the current member was added to a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedToCard">
            <summary>
            Indicates the current member was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedToOrganization">
            <summary>
            Indicates the current member was added to an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedMemberToCard">
            <summary>
            Indicates another member was added to an card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddAdminToBoard">
            <summary>
            Indicates the current member was added to a board as an admin.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddAdminToOrganization">
            <summary>
            Indicates the current member was added to an organization as an admin.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.ChangeCard">
            <summary>
            Indicates a card was changed.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CloseBoard">
            <summary>
            Indicates a board was closed.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CommentCard">
            <summary>
            Indicates another member commented on a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CreatedCard">
            <summary>
            Indicates another member created a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedFromBoard">
            <summary>
            Indicates the current member was removed from a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedFromCard">
            <summary>
            Indicates the current member was removed from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedMemberFromCard">
            <summary>
            Indicates another member was removed from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedFromOrganization">
            <summary>
            Indicates the current member was removed from an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.MentionedOnCard">
            <summary>
            Indicates the current member was mentioned on a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.UpdateCheckItemStateOnCard">
            <summary>
            Indicates a checklist item was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.MakeAdminOfBoard">
            <summary>
            Indicates the current member was made an admin of a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.MakeAdminOfOrganization">
            <summary>
            Indicates the current member was made an admin of an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CardDueSoon">
            <summary>
            Indicates a card due date is approaching.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.All">
            <summary>
            Indicates all notification types.
            </summary>
        </member>
        <member name="T:Manatee.Trello.NumberField">
            <summary>
            Represents a custom numeric field.
            </summary>
        </member>
        <member name="P:Manatee.Trello.NumberField.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Organization">
            <summary>
            Represents an organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Organization.Fields">
            <summary>
            Enumerates the data which can be pulled for organizations (teams).
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Description">
            <summary>
            Indicates the Description property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.DisplayName">
            <summary>
            Indicates the DisplayName property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.LogoHash">
            <summary>
            Indicates the LogoHash property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Preferences">
            <summary>
            Indicates the Preferences property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Url">
            <summary>
            Indicates the Url property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Website">
            <summary>
            Indicates the Website property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Actions">
            <summary>
            Indicates the actions will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Boards">
            <summary>
            Indicates the boards will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Members">
            <summary>
            Indicates the members will be downloaded. Not included by default.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.Memberships">
            <summary>
            Indicates the memberships will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Organization.Fields.PowerUpData">
            <summary>
            Indicates the power-up data will be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Actions">
            <summary>
            Gets the collection of actions performed on the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Boards">
            <summary>
            Gets the collection of boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.CreationDate">
            <summary>
            Gets the creation date of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Description">
            <summary>
            Gets or sets the organization's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.DisplayName">
            <summary>
            Gets or sets the organization's display name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Id">
            <summary>
            Gets the organization's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.IsBusinessClass">
            <summary>
            Gets whether the organization has business class status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Members">
            <summary>
            Gets the collection of members who belong to the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Memberships">
            <summary>
            Gets the collection of members and their priveledges on this organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Name">
            <summary>
            Gets the organization's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.PowerUpData">
            <summary>
            Gets specific data regarding power-ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Preferences">
            <summary>
            Gets the set of preferences for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Url">
            <summary>
            Gets the organization's URL.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Website">
            <summary>
            Gets or sets the organization's website.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Organization.Updated">
            <summary>
            Raised when data on the organization is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Organization.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Organization"/> object.
            </summary>
            <param name="id">The organization's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <remarks>
            The supplied ID can be either the full ID or the organization's name.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Organization.ApplyAction(Manatee.Trello.IAction)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.Organization.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the organization.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the organization from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Organization.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the organization data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Organization.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.OrganizationBoardVisibility">
            <summary>
            Enumerates known visibility levels for board in orgainzations.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationBoardVisibility.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationBoardVisibility.None">
            <summary>
            Indicates that a board within an organization will not be visible.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationBoardVisibility.Admin">
            <summary>
            Indicates that a board within an organization will be visible to the organization admins.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationBoardVisibility.Org">
            <summary>
            Indicates that a board within an organization will be visible to the organization members.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationCollection">
            <summary>
            A collection of organizations.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationCollection.Add(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new organization.
            </summary>
            <param name="displayName">The display name of the organization to add.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IOrganization"/> generated by Trello.</returns>
            <remarks>The organization's name will be derived from the display name and can be changed later.</remarks>
        </member>
        <member name="T:Manatee.Trello.OrganizationFilter">
            <summary>
            Enumerates the filter options for organization collections.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationFilter.Members">
            <summary>
            Filters to organizations that only members can access.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationFilter.Public">
            <summary>
            Filters to organizations that are publicly accessible.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationMembership">
            <summary>
            Represents the permission level a member has on an organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.CreationDate">
            <summary>
            Gets the creation date of the membership.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.Id">
            <summary>
            Gets the membership definition's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.IsUnconfirmed">
            <summary>
            Gets whether the member has accepted the invitation to join Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.Member">
            <summary>
            Gets the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.MemberType">
            <summary>
            Gets the membership's permission level.
            </summary>
        </member>
        <member name="E:Manatee.Trello.OrganizationMembership.Updated">
            <summary>
            Raised when data on the membership is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the organization membership data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.OrganizationMembershipCollection">
            <summary>
            A collection of organization memberships.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembershipCollection.Add(Manatee.Trello.IMember,Manatee.Trello.OrganizationMembershipType,System.Threading.CancellationToken)">
            <summary>
            Adds a member to an organization with specified privileges.
            </summary>
            <param name="member">The member to add.</param>
            <param name="membership">The membership type.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The <see cref="T:Manatee.Trello.IOrganizationMembership"/> generated by Trello.</returns>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembershipCollection.Remove(Manatee.Trello.IMember,System.Threading.CancellationToken)">
            <summary>
            Removes a member from an organization.
            </summary>
            <param name="member">The member to remove.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.OrganizationMembershipType">
            <summary>
             Enumerates known board membership types.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Admin">
            <summary>
            Indicates the member is an admin of the organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Normal">
            <summary>
            Indicates the member is a normal member of the organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Observer">
            <summary>
            Indicates the member is may only view the organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Ghost">
            <summary>
            Indicates the member has been invited, but has not yet joined Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationPermissionLevel">
            <summary>
             Enumerates known values for organization permission levels
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationPermissionLevel.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationPermissionLevel.Private">
            <summary>
            Indicates that the organization can only be viewed by its members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationPermissionLevel.Public">
            <summary>
            Indicates that anyone (even non-Trello users) may view the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationPreferences">
            <summary>
            Represents the preferences for an organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.PermissionLevel">
            <summary>
            Gets or sets the general visibility of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.ExternalMembersDisabled">
            <summary>
            Gets or sets whether external members are disabled.
            </summary>
            <remarks>
            Still researching what this means.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.AssociatedDomain">
            <summary>
            Gets or sets a domain to associate with the organization.
            </summary>
            <remarks>
            Still researching what this means.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.PublicBoardVisibility">
            <summary>
            Gets or sets the visibility of public-viewable boards owned by the organizations.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.OrganizationBoardVisibility">
            <summary>
            Gets or sets the visibility of organization-viewable boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.PrivateBoardVisibility">
            <summary>
            Gets or sets the visibility of private-viewable boards owned by the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Position">
            <summary>
            Represents the position of a checklist in a card, a card in a list, or list in a board
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.Top">
            <summary>
            Represents the top position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.Bottom">
            <summary>
            Represents the bottom position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.Unknown">
            <summary>
            Represents an invalid position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.IsValid">
            <summary>
            Gets whether the position is valid.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.Value">
            <summary>
            Gets the internal numeric position value.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Position.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Position"/> class.
            </summary>
            <param name="value">A positive integer.</param>
        </member>
        <member name="M:Manatee.Trello.Position.Between(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.Position"/> object between two others.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/>.</param>
            <param name="b">Another <see cref="T:Manatee.Trello.Position"/>.</param>
            <returns>The new <see cref="T:Manatee.Trello.Position"/>.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.CompareTo(Manatee.Trello.Position)">
            <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. </summary>
            <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="other" /> in the sort order.  Zero This instance occurs in the same position in the sort order as <paramref name="other" />. Greater than zero This instance follows <paramref name="other" /> in the sort order. </returns>
            <param name="other">An object to compare with this instance. </param>
        </member>
        <member name="M:Manatee.Trello.Position.CompareTo(System.Object)">
            <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
            <returns>A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="obj" /> in the sort order. Zero This instance occurs in the same position in the sort order as <paramref name="obj" />. Greater than zero This instance follows <paramref name="obj" /> in the sort order. </returns>
            <param name="obj">An object to compare with this instance. </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="obj" /> is not the same type as this instance. </exception>
        </member>
        <member name="M:Manatee.Trello.Position.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Implicit(System.Double)~Manatee.Trello.Position">
            <summary>
            Implicitly casts a PositionValue to a <see cref="T:Manatee.Trello.Position"/>.
            </summary>
            <param name="value">The PositionValue value.</param>
            <returns>The Position object.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Implicit(System.Int32)~Manatee.Trello.Position">
            <summary>
            Implicitly casts an int to a <see cref="T:Manatee.Trello.Position"/>.
            </summary>
            <param name="value">a positive integer.</param>
            <returns>The Position object.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Explicit(Manatee.Trello.Position)~System.Double">
            <summary>
            Explicitly casts a <see cref="T:Manatee.Trello.Position"/> to a double.
            </summary>
            <param name="position">The Position object.</param>
            <returns>The PositionValue value.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Explicit(Manatee.Trello.Position)~System.Int32">
            <summary>
            Explicitly casts a <see cref="T:Manatee.Trello.Position"/> to an int.
            </summary>
            <param name="position">The Position object.</param>
            <returns>The int value.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Equality(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> objects by examining their content.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <param name="b">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>True if equivalent, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Inequality(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> objects by examining their content.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <param name="b">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>False if equivalent, true otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_LessThan(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> values for linear order.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <param name="b">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>True if the first operand is less than the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_GreaterThan(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> values for linear order.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <param name="b">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>True if the first operand is greater than the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_LessThanOrEqual(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> values for linear order.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <param name="b">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>True if the first operand is less than or equal to the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_GreaterThanOrEqual(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> values for linear order.
            </summary>
            <param name="a">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <param name="b">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>True if the first operand is greater than or equal to the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.Equals(Manatee.Trello.Position)">
            <summary>
            Compares two <see cref="T:Manatee.Trello.Position"/> object by examining their content.
            </summary>
            <param name="other">A <see cref="T:Manatee.Trello.Position"/> object.</param>
            <returns>True if equivalent, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Position.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Manatee.Trello.PowerUpBase">
            <summary>
            Provides a base implementation for Trello Power-Ups.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpBase.AdditionalInfo">
            <summary>
            Gets a URI that provides JSON-formatted data about the plugin.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpBase.Id">
            <summary>
            Gets the power-up's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpBase.IsPublic">
            <summary>
            Gets or sets whether this power-up is closed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpBase.Name">
            <summary>
            Gets the name of the power-up.
            </summary>
        </member>
        <member name="M:Manatee.Trello.PowerUpBase.#ctor(Manatee.Trello.Json.IJsonPowerUp,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Initializes a power-up.
            </summary>
        </member>
        <member name="M:Manatee.Trello.PowerUpBase.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.PowerUpBase.ToString">
            <summary>Returns the <see cref="P:Manatee.Trello.PowerUpBase.Name"/></summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.PowerUpCollection">
            <summary>
            A collection of power-ups.
            </summary>
        </member>
        <member name="M:Manatee.Trello.PowerUpCollection.EnablePowerUp(Manatee.Trello.IPowerUp,System.Threading.CancellationToken)">
            <summary>
            Enables a power-up for a board.
            </summary>
            <param name="powerUp">The power-up to enable.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.PowerUpCollection.DisablePowerUp(Manatee.Trello.IPowerUp,System.Threading.CancellationToken)">
            <summary>
            Disables a power-up for a board.
            </summary>
            <param name="powerUp">The power-up to disble.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.PowerUpData">
            <summary>
            Represents the data associated with a plugin.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpData.Id">
            <summary>
            Gets the ID associated with this particular data instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpData.PluginId">
            <summary>
            Gets the ID for the power-up with which this data is associated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.PowerUpData.Value">
            <summary>
            Gets the data as a string.  This data will be JSON-encoded.
            </summary>
        </member>
        <member name="M:Manatee.Trello.PowerUpData.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data... data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyAttachmentCollection">
            <summary>
            A read-only collection of attachments.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyAttachmentCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyAttachmentPreviewCollection">
            <summary>
            A read-only collection of image previews for attachments.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyAttachmentPreviewCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyBoardBackgroundScalesCollection">
            <summary>
            A read-only collection of scaled versions of board backgrounds.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyBoardBackgroundScalesCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyBoardCollection">
            <summary>
            A read-only collectin of boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyBoardCollection.Item(System.String)">
            <summary>
            Retrieves a board which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching board, or null if none found.</returns>
            <remarks>
            Matches on board ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyBoardCollection.Filter(Manatee.Trello.BoardFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyBoardCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyBoardMembershipCollection">
            <summary>
            A read-only collection of board memberships.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyBoardMembershipCollection.Item(System.String)">
            <summary>
            Retrieves a membership which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching membership, or null if none found.</returns>
            <remarks>
            Matches on membership ID, member ID, BoardMembership. member full name, and member username. Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyBoardMembershipCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyBoardMembershipCollection.Filter(Manatee.Trello.MembershipFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="membership">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyBoardMembershipCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.MembershipFilter})">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="memberships">The filter values.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyCardCollection">
            <summary>
            A read-only collection of cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyCardCollection.Item(System.String)">
            <summary>
            Retrieves a card which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching card, or null if none found.</returns>
            <remarks>
            Matches on card ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCardCollection.Filter(Manatee.Trello.CardFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCardCollection.Filter(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Adds a filter to the collection based on start and end date.
            </summary>
            <param name="start">The start date.</param>
            <param name="end">The end date.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCardCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyCheckItemCollection">
            <summary>
            A read-only collection of checklist items.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyCheckItemCollection.Item(System.String)">
            <summary>
            Retrieves a check list item which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list item, or null if none found.</returns>
            <remarks>
            Matches on check item ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCheckItemCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyCheckListCollection">
            <summary>
            A read-only collection of checklists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyCheckListCollection.Item(System.String)">
            <summary>
            Retrieves a check list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching check list, or null if none found.</returns>
            <remarks>
            Matches on checklist ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCheckListCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyCollection`1">
            <summary>
            Provides base functionality for a read-only collection.
            </summary>
            <typeparam name="T">The type of object contained by the collection.</typeparam>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyCollection`1.Limit">
            <summary>
            Indicates the maximum number of items to return.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyCollection`1.Item(System.Int32)">
            <summary>
            Retrieves the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The item.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is less than 0 or greater than or equal to the number of elements in the collection.
            </exception>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCollection`1.#ctor(System.Func{System.String},Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.ReadOnlyCollection`1"/> object.
            </summary>
            <param name="getOwnerId"></param>
            <param name="auth"></param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCollection`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCollection`1.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCollection`1.IncorporateLimit">
            <summary>
            Adds <see cref="P:Manatee.Trello.ReadOnlyCollection`1.Limit"/> to a list of additional parameters.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyCustomFieldCollection">
            <summary>
            A read-only collection of custom fields.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCustomFieldCollection.#ctor(System.Func{System.String},Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.ReadOnlyCustomFieldCollection"/> class.
            </summary>
            <param name="getOwnerId"></param>
            <param name="auth"></param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCustomFieldCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyCustomFieldDefinitionCollection">
            <summary>
            A read-only collection of custom field definitions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCustomFieldDefinitionCollection.#ctor(System.Func{System.String},Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.ReadOnlyCustomFieldDefinitionCollection"/> class.
            </summary>
            <param name="getOwnerId"></param>
            <param name="auth"></param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyCustomFieldDefinitionCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyDropDownOptionCollection">
            <summary>
            A read-only collection of custom drop down options.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyDropDownOptionCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyListCollection">
            <summary>
            A read-only collection of lists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyListCollection.Item(System.String)">
            <summary>
            Retrieves a list which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching list, or null if none found.</returns>
            <remarks>
            Matches on list ID and name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyListCollection.Filter(Manatee.Trello.ListFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyListCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyMemberCollection">
            <summary>
            A read-only collection of members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyMemberCollection.Item(System.String)">
            <summary>
            Retrieves a member which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching member, or null if none found.</returns>
            <remarks>
            Matches on member ID, full name, and username.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyMemberCollection.Filter(Manatee.Trello.MemberFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyMemberCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.MemberFilter})">
            <summary>
            Adds a set of filters to the collection.
            </summary>
            <param name="filters">The filter values.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyMemberCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyNotificationCollection">
            <summary>
            A read-only collection of actions.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyNotificationCollection.Filter(Manatee.Trello.NotificationType)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter type.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyNotificationCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.NotificationType})">
            <summary>
            Adds a set of filters to the collection.
            </summary>
            <param name="filters">A collection of filters.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyNotificationCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyOrganizationCollection">
            <summary>
            A read-only collection of organizations.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyOrganizationCollection.Item(System.String)">
            <summary>
            Retrieves a organization which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching organization, or null if none found.</returns>
            <remarks>
            Matches on organization ID, name, and display name.  Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyOrganizationCollection.Filter(Manatee.Trello.OrganizationFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyOrganizationCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyOrganizationMembershipCollection">
            <summary>
            A read-only collection of organization memberships.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ReadOnlyOrganizationMembershipCollection.Item(System.String)">
            <summary>
            Retrieves a membership which matches the supplied key.
            </summary>
            <param name="key">The key to match.</param>
            <returns>The matching list, or null if none found.</returns>
            <remarks>
            Matches on membership ID, member ID, member full name, and member username. Comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyOrganizationMembershipCollection.Filter(Manatee.Trello.MembershipFilter)">
            <summary>
            Adds a filter to the collection.
            </summary>
            <param name="filter">The filter value.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyOrganizationMembershipCollection.Filter(System.Collections.Generic.IEnumerable{Manatee.Trello.MembershipFilter})">
            <summary>
            Adds a set of filters to the collection.
            </summary>
            <param name="filters">The filter values.</param>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyOrganizationMembershipCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyPowerUpCollection">
            <summary>
            A read-only collection of power-ups.
            </summary>
            <remarks>
            If a power-up hasn't been registered, it will be instantiated using <see cref="T:Manatee.Trello.UnknownPowerUp"/>.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyPowerUpCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyPowerUpDataCollection">
            <summary>
            A read-only collection of power-up data.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyPowerUpDataCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyStickerCollection">
            <summary>
            A read-only collection of attachments.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyStickerCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.ReadOnlyStickerPreviewCollection">
            <summary>
            A read-only collection of image previews for attachments.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ReadOnlyStickerPreviewCollection.Refresh(System.Threading.CancellationToken)">
            <summary>
            Manually updates the collection's data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.Rest.DefaultRestClientProvider">
            <summary>
            Implements <see cref="T:Manatee.Trello.Rest.IRestClientProvider"/> using ASP.Net's <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.DefaultRestClientProvider.Instance">
            <summary>
            Singleton instance of <see cref="T:Manatee.Trello.Rest.DefaultRestClientProvider"/>.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.DefaultRestClientProvider.RequestProvider">
            <summary>
            Creates requests for the client.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.DefaultRestClientProvider.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Rest.DefaultRestClientProvider"/> class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.DefaultRestClientProvider.Finalize">
            <summary>
            Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.DefaultRestClientProvider.CreateRestClient(System.String)">
            <summary>
            Creates an instance of <see cref="T:Manatee.Trello.Rest.IRestClient"/>.
            </summary>
            <param name="apiBaseUrl">The base URL to be used by the client</param>
            <returns>An instance of <see cref="T:Manatee.Trello.Rest.IRestClient"/>.</returns>
        </member>
        <member name="M:Manatee.Trello.Rest.DefaultRestClientProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestClient">
            <summary>
            Defines methods required to make RESTful calls.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestClient.Execute(Manatee.Trello.Rest.IRestRequest,System.Threading.CancellationToken)">
            <summary>
            Makes a RESTful call and ignores any return data.
            </summary>
            <param name="request">The request.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestClient.Execute``1(Manatee.Trello.Rest.IRestRequest,System.Threading.CancellationToken)">
            <summary>
            Makes a RESTful call and expects a single object to be returned.
            </summary>
            <typeparam name="T">The expected type of object to receive in response.</typeparam>
            <param name="request">The request.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestClientProvider">
            <summary>
            Defines methods required to create an instance of IRestClient.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestClientProvider.RequestProvider">
            <summary>
            Creates requests for the client.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestClientProvider.CreateRestClient(System.String)">
            <summary>
            Creates an instance of IRestClient.
            </summary>
            <param name="apiBaseUrl">The base URL to be used by the client</param>
            <returns>An instance of IRestClient.</returns>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestRequest">
            <summary>
            Defines properties and methods required to make RESTful requests.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestRequest.Method">
            <summary>
            Gets and sets the method to be used in the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestRequest.Resource">
            <summary>
            Gets the URI enpoint for the request.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequest.AddParameter(System.String,System.Object)">
            <summary>
            Explicitly adds a parameter to the request.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequest.AddBody(System.Object)">
            <summary>
            Adds a body to the request.
            </summary>
            <param name="body">The body.</param>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestRequestProvider">
            <summary>
            Defines methods to generate IRequest objects used to make RESTful calls.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequestProvider.Create(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a general request using a collection of objects and an additional parameter to generate the resource string and an object to supply additional parameters.
            </summary>
            <param name="endpoint">The method endpoint the request calls.</param>
            <param name="parameters">A list of paramaters to include in the request.</param>
            <returns>An IRestRequest instance which can be sent to an IRestClient.</returns>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestResponse">
            <summary>
            Defines properties required for objects returned by RESTful calls.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse.Content">
            <summary>
            The JSON content returned by the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse.Exception">
            <summary>
            Gets any exception that was thrown during the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse.StatusCode">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestResponse`1">
            <summary>
            Defines required properties returned by RESTful calls.
            </summary>
            <typeparam name="T">The type expected to be returned by the call.</typeparam>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse`1.Data">
            <summary>
            The deserialized data.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.RestFile">
            <summary>
            Defines a file to be included in a REST request.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestFile.ParameterKey">
            <summary>
            Defines a key to be used when attaching a file to a REST request.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.RestFile.FileName">
            <summary>
            The file name to use for the uploaded file
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.RestFile.ContentBytes">
            <summary>
            The file data
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.RestMethod">
            <summary>
            Enumerates the RESTful call methods required by TrelloService.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Get">
            <summary>
             Indicates an HTTP GET operation.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Put">
            <summary>
             Indicates an HTTP PUT operation.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Post">
            <summary>
             Indicates an HTTP POST operation.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Delete">
            <summary>
             Indicates an HTTP DELETE operation.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.WebApiRequestProvider">
            <summary>
            Implements IRestRequestProvider for WebApi.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.WebApiRequestProvider.Create(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a general request using a collection of objects and an additional parameter to
            generate the resource string and an object to supply additional parameters.
            </summary>
            <param name="endpoint">The method endpoint the request calls.</param>
            <param name="parameters">A list of paramaters to include in the request.</param>
            <returns>An IRestRequest instance which can be sent to an IRestClient.</returns>
        </member>
        <member name="T:Manatee.Trello.Rest.WebApiRestResponse">
            <summary>
            Implements <see cref="T:Manatee.Trello.Rest.IRestResponse"/> for WebApi.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.WebApiRestResponse.Content">
            <summary>
            The JSON content returned by the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.WebApiRestResponse.Exception">
            <summary>
            Gets any exception that was thrown during the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.WebApiRestResponse.StatusCode">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.WebApiRestResponse`1">
            <summary>
            Implements <see cref="T:Manatee.Trello.Rest.IRestResponse`1"/> for WebApi.
            </summary>
            <typeparam name="T">The type expected to be returned by the call.</typeparam>
        </member>
        <member name="P:Manatee.Trello.Rest.WebApiRestResponse`1.Data">
            <summary>
            The deserialized data.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Search">
            <summary>
            Performs a search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Search.Actions">
            <summary>
            Gets the collection of actions returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Search.Boards">
            <summary>
            Gets the collection of boards returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Search.Cards">
            <summary>
            Gets the collection of cards returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Search.Members">
            <summary>
            Gets the collection of members returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Search.Organizations">
            <summary>
            Gets the collection of organizations returned by the search.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Search.Query">
            <summary>
            Gets the query.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Search.#ctor(Manatee.Trello.ISearchQuery,System.Nullable{System.Int32},Manatee.Trello.SearchModelType,System.Collections.Generic.IEnumerable{Manatee.Trello.IQueryable},Manatee.Trello.TrelloAuthorization,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Search"/> object and performs the search.
            </summary>
            <param name="query">The query.</param>
            <param name="limit">The maximum number of results to return.</param>
            <param name="modelTypes">(Optional) The desired model types to return.  Can be joined using the | operator.  Default is All.</param>
            <param name="context">(Optional) A collection of queryable items to serve as a context in which to search.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided,
            <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <param name="isPartial">(Optional) Indicates whether to include matches that <em>start with</em> the query text.  Default is false.</param>
        </member>
        <member name="M:Manatee.Trello.Search.#ctor(System.String,System.Nullable{System.Int32},Manatee.Trello.SearchModelType,System.Collections.Generic.IEnumerable{Manatee.Trello.IQueryable},Manatee.Trello.TrelloAuthorization,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Search"/> object and performs the search.
            </summary>
            <param name="query">The query.</param>
            <param name="limit">The maximum number of results to return.</param>
            <param name="modelTypes">(Optional) The desired model types to return.  Can be joined using the | operator.  Default is All.</param>
            <param name="context">(Optional) A collection of queryable items to serve as a context in which to search.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided,
            <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <param name="isPartial">(Optional) Indicates whether to include matches that <em>start with</em> the query text.  Default is false.</param>
        </member>
        <member name="M:Manatee.Trello.Search.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the search results.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.SearchModelType">
            <summary>
            Enumerates the model types for which one can search.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Actions">
            <summary>
            Indicates the search should return actions.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Boards">
            <summary>
            Indicates the search should return boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Cards">
            <summary>
            Indicates the search should return cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Members">
            <summary>
            Indicates the search should return members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Organizations">
            <summary>
            Indicates the search should return organizations.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.All">
            <summary>
            Indicates the search should return all model types.
            </summary>
        </member>
        <member name="T:Manatee.Trello.SearchQuery">
            <summary>
            Provides an easy mechanism to build search queries.
            </summary>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.Text(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter.
            </summary>
            <param name="text">The text to search for.</param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.TextInName(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to card names.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.TextInDescription(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to card descriptions.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.TextInComments(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to card comments.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.TextInCheckLists(System.String)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a text search parameter specific to check lists.
            </summary>
            <param name="text">The text to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.Member(Manatee.Trello.IMember)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a member search parameter.
            </summary>
            <param name="member">The member to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.Label(Manatee.Trello.ILabel)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a label search parameter.
            </summary>
            <param name="label">The label to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.Label(Manatee.Trello.LabelColor)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a label color search parameter.
            </summary>
            <param name="labelColor">The label color to search for.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.IsArchived">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only archived items.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.IsOpen">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only unarchived items.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.IsStarred">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only starred items.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.DueWithinDay">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next 24 hours.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.DueWithinWeek">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next week.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.DueWithinMonth">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next month.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.DueWithinDays(System.Int32)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the next <paramref name="days"/> hours.
            </summary>
            <param name="days">The number of days.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.Overdue">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items which are overdue.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.CreatedWithinDay">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past 24 hours.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.CreatedWithinWeek">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past week.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.CreatedWithinMonth">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past month.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.CreatedWithinDays(System.Int32)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past <paramref name="days"/> days.
            </summary>
            <param name="days">The number of days.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.EditedWithinDay">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past 24 hours.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.EditedWithinWeek">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past week.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.EditedWithinMonth">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past month.
            </summary>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.EditedWithinDays(System.Int32)">
            <summary>
            Creates a new <see cref="T:Manatee.Trello.ISearchQuery"/> specifying a search parameter to restrict to only items due in the past <paramref name="days"/> days.
            </summary>
            <param name="days">The number of days.</param>
            <returns>A new <see cref="T:Manatee.Trello.ISearchQuery"/> parameter list.</returns>
        </member>
        <member name="M:Manatee.Trello.SearchQuery.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Manatee.Trello.Sticker">
            <summary>
            Represents a sticker on a card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Sticker.Fields">
            <summary>
            Enumerates the data which can be pulled for stickers.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.Left">
            <summary>
            Indicates the Left property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.Name">
            <summary>
            Indicates the Name property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.Previews">
            <summary>
            Indicates the previews will be downloaded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.Rotation">
            <summary>
            Indicates the Rotation property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.Top">
            <summary>
            Indicates the Top property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.Url">
            <summary>
            Indicates the Url property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Fields.ZIndex">
            <summary>
            Indicates the ZIndex property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Check">
            <summary>
            Represents the stock Check sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Heart">
            <summary>
            Represents the stock Heart sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Warning">
            <summary>
            Represents the stock Warning sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Clock">
            <summary>
            Represents the stock Clock sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Smile">
            <summary>
            Represents the stock Smile sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Laugh">
            <summary>
            Represents the stock Laugh sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Huh">
            <summary>
            Represents the stock Huh sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Frown">
            <summary>
            Represents the stock Frown sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.ThumbsUp">
            <summary>
            Represents the stock ThumbsUp sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.ThumbsDown">
            <summary>
            Represents the stock ThumbsDown sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.Star">
            <summary>
            Represents the stock Star sticker.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Sticker.RocketShip">
            <summary>
            Represents the stock RocketShip sticker.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.Id">
            <summary>
            Gets the checklist's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.Left">
            <summary>
            Gets or sets the position of the left edge.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.Name">
            <summary>
            Gets the name of the sticker.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.Previews">
            <summary>
            Gets the collection of previews.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <remarks>
            Rotation is clockwise and in degrees.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Sticker.Top">
            <summary>
            Gets or sets the position of the top edge.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.ImageUrl">
            <summary>
            Gets the URL for the sticker's image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Sticker.ZIndex">
            <summary>
            Gets or sets the z-index.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Sticker.Updated">
            <summary>
            Raised when data on the attachment is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Sticker.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the sticker.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the sticker from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Sticker.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the sticker data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Sticker.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.TextField">
            <summary>
            Represents a custom text field instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TextField.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Token">
            <summary>
            Represents a user token.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Token.Fields">
            <summary>
            Enumerates the data which can be pulled for tokens.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Token.Fields.Id">
            <summary>
            Indicates the Id property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Token.Fields.Member">
            <summary>
            Indicates the Member property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Token.Fields.DateCreated">
            <summary>
            Indicates the DateCreated property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Token.Fields.DateExpires">
            <summary>
            Indicates the DateExpires property should be populated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Token.Fields.Permissions">
            <summary>
            Indicates the Permissions property should be populated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.DownloadedFields">
            <summary>
            Specifies which fields should be downloaded.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.AppName">
            <summary>
            Gets the name of the application associated with the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.BoardPermissions">
            <summary>
            Gets the permissions on boards granted by the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.CreationDate">
            <summary>
            Gets the creation date of the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.DateCreated">
            <summary>
            Gets the date and time the token was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.DateExpires">
            <summary>
            Gets the date and time the token expires, if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.Id">
            <summary>
            Gets the token's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.Member">
            <summary>
            Gets the member for which the token was issued.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.MemberPermissions">
            <summary>
            Gets the permissions on members granted by the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.OrganizationPermissions">
            <summary>
            Gets the permissions on organizations granted by the token.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Token.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Token"/> object.
            </summary>
            <param name="id">The token's ID.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <remarks>
            The supplied ID can be either the full ID or the token itself.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Token.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the token.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the token from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Token.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the token data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Token.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Manatee.Trello.TokenModelType">
            <summary>
            Enumerates the model types to which a user token may grant access.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Unknown">
            <summary>
            Assigned when the model type is not recognized.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Member">
            <summary>
            Indicates the model is one or more Members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Board">
            <summary>
            Indicates the model is one or more Boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Organization">
            <summary>
            Indicates the model is one or more Organizations.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TokenPermission">
            <summary>
            Represents permissions granted by a token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TokenPermission.CanRead">
            <summary>
            Gets whether a token can read values.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TokenPermission.CanWrite">
            <summary>
            Gets whether a token can write values.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TrelloAuthorization">
            <summary>
            Contains authorization tokens needed to connect to Trello's API.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloAuthorization.Default">
            <summary>
            Gets the default authorization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloAuthorization.AppKey">
            <summary>
            The token which identifies the application attempting to connect.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloAuthorization.UserToken">
            <summary>
            The token which identifies special permissions as granted by a specific user.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TrelloConfiguration">
            <summary>
            Exposes a set of run-time options for Manatee.Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.Serializer">
            <summary>
            Specifies the serializer for the REST client.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.Deserializer">
            <summary>
            Specifies the deserializer for the REST client.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.RestClientProvider">
            <summary>
            Specifies the REST client provider.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.Cache">
            <summary>
            Provides a cache to manage all Trello objects.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.RemoveDeletedItemsFromCache">
            <summary>
            Specifies whether deleted items should be removed from the cache.  The default is true.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.Log">
            <summary>
            Provides logging for Manatee.Trello.  The default log writes to the Console window.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.JsonFactory">
            <summary>
            Provides a factory which is used to create instances of JSON objects.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.ThrowOnTrelloError">
            <summary>
            Specifies whether the service should throw an exception when an error is received from Trello.  Default is true.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.ChangeSubmissionTime">
            <summary>
            Specifies a length of time an object holds changes before it submits them.  The timer is reset with every change.  Default is 100 ms.
            </summary>
            <remarks>
            Setting a value of 0 ms will result in instant upload of changes, dramatically increasing call volume and slowing performance.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.RefreshThrottle">
            <summary>
            Specifies a length of time during which a single entity can only be refreshed once.  Default is 5 seconds.
            </summary>
            <remarks>
            Setting a value of 0 will result in immediately consecutive or parallel calls both going through to Trello.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.RetryStatusCodes">
            <summary>
            Specifies which HTTP response status codes should trigger an automatic retry.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.MaxRetryCount">
            <summary>
            Specifies a maximum number of retries allowed before an error is thrown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.DelayBetweenRetries">
            <summary>
            Specifies a delay between retry attempts.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloConfiguration.RetryPredicate">
             <summary>
             Specifies a predicate to execute to determine if a retry should be attempted.  The default simply uses <see cref="P:Manatee.Trello.TrelloConfiguration.MaxRetryCount"/> and <see cref="P:Manatee.Trello.TrelloConfiguration.DelayBetweenRetries"/>.
             </summary>
             <remarks>
             Parameters:
             
             - <see cref="T:Manatee.Trello.Rest.IRestResponse"/> - The response object from the REST provider.  Will need to be cast to the appropriate type.
             - <see cref="T:System.Int32"/> - The number of retries attempted.
            
             Return value:
            
             - <see cref="T:System.Boolean"/> - True if the call should be retried; false otherwise.
             </remarks>
        </member>
        <member name="M:Manatee.Trello.TrelloConfiguration.RegisterPowerUp(System.String,System.Func{Manatee.Trello.Json.IJsonPowerUp,Manatee.Trello.TrelloAuthorization,Manatee.Trello.IPowerUp})">
            <summary>
            Registers a new power-up implementation.
            </summary>
            <param name="id">The Trello ID of the power-up.</param>
            <param name="factory">A factory function that creates instances of the power-up implementation.</param>
        </member>
        <member name="T:Manatee.Trello.TrelloFactory">
            <summary>
            Supports entity creation for dependency-injected applications.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Action(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IAction"/>.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IAction"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Board(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IBoard"/>.
            </summary>
            <param name="id">The board ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IBoard"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Card(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ICard"/>.
            </summary>
            <param name="id">The board ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ICard"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.CheckList(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ICheckList"/>.
            </summary>
            <param name="id">The checklist ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ICheckList"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.DropDownOption(System.String,Manatee.Trello.LabelColor)">
            <summary>
            Creates a <see cref="M:Manatee.Trello.ITrelloFactory.DropDownOption(System.String,Manatee.Trello.LabelColor)"/>.
            </summary>
            <param name="text">The drop down text.</param>
            <param name="color">(Optional) The drop down color.</param>
            <returns>An <see cref="T:Manatee.Trello.IDropDownOption"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.List(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IList"/>.
            </summary>
            <param name="id">The list ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IList"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Me(System.Threading.CancellationToken)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IMe"/>.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>An <see cref="T:Manatee.Trello.IMe"/></returns>
            <remarks>
            This performs a call to the API to get the member authorized by <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/>.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Member(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IMember"/>.
            </summary>
            <param name="id">The member ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IMember"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.MemberSearch(System.String,System.Nullable{System.Int32},Manatee.Trello.IBoard,Manatee.Trello.IOrganization,System.Nullable{System.Boolean},Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.IMemberSearch"/> object and performs the search.
            </summary>
            <param name="query">The query.</param>
            <param name="limit">(Optional) The result limit.  Can be a value from 1 to 20. The default is 8.</param>
            <param name="board">(Optional) A board to which the search should be limited.</param>
            <param name="organization">(Optional) An organization to which the search should be limited.</param>
            <param name="restrictToOrganization">(Optional) Restricts the search to only organization members.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided,
            <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Notification(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.INotification"/>.
            </summary>
            <param name="id">The notification ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.INotification"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Organization(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IOrganization"/>.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IOrganization"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.SearchQuery">
            <summary>
            Creates a new empty <see cref="T:Manatee.Trello.ISearchQuery"/>.
            </summary>
            <returns>An <see cref="T:Manatee.Trello.ISearchQuery"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Search(Manatee.Trello.ISearchQuery,System.Nullable{System.Int32},Manatee.Trello.SearchModelType,System.Collections.Generic.IEnumerable{Manatee.Trello.IQueryable},System.Boolean,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ISearch"/>.
            </summary>
            <param name="query">The search query.</param>
            <param name="limit">(Optional) The maximum number of items to return.</param>
            <param name="modelTypes">(Optional) The model types desired.</param>
            <param name="context">(Optional) The context (scope) of the search.</param>
            <param name="isPartial">(Optional) Allow "starts with" matches.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ISearch"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Search(System.String,System.Nullable{System.Int32},Manatee.Trello.SearchModelType,System.Collections.Generic.IEnumerable{Manatee.Trello.IQueryable},System.Boolean,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.ISearch"/>.
            </summary>
            <param name="query">The search query.</param>
            <param name="limit">(Optional) The maximum number of items to return.</param>
            <param name="modelTypes">(Optional) The model types desired.</param>
            <param name="context">(Optional) The context (scope) of the search.</param>
            <param name="isPartial">(Optional) Allow "starts with" matches.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.ISearch"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Token(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IToken"/>.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IToken"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Webhook``1(``0,System.String,System.String,Manatee.Trello.TrelloAuthorization,System.Threading.CancellationToken)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IWebhook`1"/> and registers a new webhook with Trello.
            </summary>
            <param name="target">The action ID.</param>
            <param name="callBackUrl">A URL that Trello can POST to.</param>
            <param name="description">A description.</param>
            <param name="auth">(Optional) The authorization.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <returns>An <see cref="T:Manatee.Trello.IWebhook`1"/></returns>
        </member>
        <member name="M:Manatee.Trello.TrelloFactory.Webhook``1(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates an <see cref="T:Manatee.Trello.IWebhook`1"/> for and existing webhook.
            </summary>
            <param name="id">The action ID.</param>
            <param name="auth">(Optional) The authorization.</param>
            <returns>An <see cref="T:Manatee.Trello.IWebhook`1"/></returns>
        </member>
        <member name="T:Manatee.Trello.TrelloInteractionException">
            <summary>
            Thrown when Trello reports an error with a request.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloInteractionException.#ctor(System.Exception)">
            <summary>
            Creates a new instance of the TrelloInteractionException class.
            </summary>
            <param name="innerException">The exception which occurred during the call.</param>
        </member>
        <member name="M:Manatee.Trello.TrelloInteractionException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of the TrelloInteractionException class.
            </summary>
            <param name="message">A custom message.</param>
            <param name="innerException">The exception which occurred during the call.</param>
        </member>
        <member name="T:Manatee.Trello.TrelloProcessor">
            <summary>
            Provides options and control for the internal request queue processor.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloProcessor.Flush">
            <summary>
            Signals the processor that the application is shutting down.  The processor will perform a "last call" for pending requests.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloProcessor.ProcessNotification(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Processes webhook notification content.
            </summary>
            <param name="content">The string content of the notification.</param>
            <param name="auth">The <see cref="T:Manatee.Trello.TrelloAuthorization"/> under which the notification should be processed</param>
        </member>
        <member name="T:Manatee.Trello.UnknownPowerUp">
            <summary>
            Provides an implementation for an unknown power-up.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ValidationException`1">
            <summary>
            Thrown when validation fails on a Trello object property.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ValidationException`1.Errors">
            <summary>
            Gets a collection of errors that occurred while validating the value.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ValidationException`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.ValidationException`1"/> object.
            </summary>
            <param name="value">The value that was passed.</param>
            <param name="errors">The reasons the value did not pass validation.</param>
        </member>
        <member name="T:Manatee.Trello.VotingPowerUp">
            <summary>
            Represents the Voting power-up.
            </summary>
        </member>
        <member name="P:Manatee.Trello.VotingPowerUp.Id">
            <summary>
            Gets an ID on which matching can be performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.VotingPowerUp.Name">
            <summary>
            Gets the power-up name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.VotingPowerUp.IsPublic">
            <summary>
            Gets whether the power-up is public. (Really, I don't know what this is, and Trello's not talking.)
            </summary>
        </member>
        <member name="M:Manatee.Trello.VotingPowerUp.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the power-up data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="T:Manatee.Trello.WebColor">
            <summary>
            Defines a color in the RGB space.
            </summary>
        </member>
        <member name="P:Manatee.Trello.WebColor.Red">
            <summary>
            Gets the red component.
            </summary>
        </member>
        <member name="P:Manatee.Trello.WebColor.Green">
            <summary>
            Gets the green component.
            </summary>
        </member>
        <member name="P:Manatee.Trello.WebColor.Blue">
            <summary>
            Gets the blue component.
            </summary>
        </member>
        <member name="M:Manatee.Trello.WebColor.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.WebColor"/> class.
            </summary>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
        </member>
        <member name="M:Manatee.Trello.WebColor.#ctor(System.String)">
            <summary>
            Creates a new isntance of the <see cref="T:Manatee.Trello.WebColor"/> class.
            </summary>
            <param name="serialized">A string representation of RGB values in the format "#RRGGBB".</param>
        </member>
        <member name="M:Manatee.Trello.WebColor.ToString">
            <summary>
            Returns an HTML-compatible color code.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Manatee.Trello.Webhook`1">
            <summary>
            Represents a webhook.
            </summary>
            <typeparam name="T">The type of object to which the webhook is attached.</typeparam>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.CallBackUrl">
            <summary>
            Gets or sets a callback URL for the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.CreationDate">
            <summary>
            Gets the creation date of the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.Description">
            <summary>
            Gets or sets a description for the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.Id">
            <summary>
            Gets the webhook's ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.IsActive">
            <summary>
            Gets or sets whether the webhook is active.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.Target">
            <summary>
            Gets or sets the webhook's target.
            </summary>
        </member>
        <member name="E:Manatee.Trello.Webhook`1.Updated">
            <summary>
            Raised when data on the webhook is updated.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.#ctor(System.String,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Webhook`1"/> object for a webhook which has already been registered with Trello.
            </summary>
            <param name="id">The id.</param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.Create(`0,System.String,System.String,Manatee.Trello.TrelloAuthorization,System.Threading.CancellationToken)">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Webhook`1"/> object and registers a webhook with Trello.
            </summary>
            <param name="target"></param>
            <param name="description"></param>
            <param name="callBackUrl"></param>
            <param name="auth">(Optional) Custom authorization parameters. When not provided, <see cref="P:Manatee.Trello.TrelloAuthorization.Default"/> will be used.</param>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.Delete(System.Threading.CancellationToken)">
            <summary>
            Deletes the webhook.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
            <remarks>
            This permanently deletes the webhook from Trello's server, however, this object will remain in memory and all properties will remain accessible.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refreshes the webhook data.
            </summary>
            <param name="ct">(Optional) A cancellation token for async processing.</param>
        </member>
    </members>
</doc>
