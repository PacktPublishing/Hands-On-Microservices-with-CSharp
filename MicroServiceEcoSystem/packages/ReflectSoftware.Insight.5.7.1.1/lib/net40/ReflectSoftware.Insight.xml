<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReflectSoftware.Insight</name>
    </assembly>
    <members>
        <member name="T:ReflectSoftware.Insight.ConfigurationMode">
            <summary>
            Types for the configuration mode.
            </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ConfigurationMode.Application">
            <summary>This mode indicatates that the current configuration is based on the app/web.config file.</summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ConfigurationMode.ApplicationExternal">
            <summary>This mode indicatates that the current configuration is based on the app/web.config 'insightSettings externalConfigSource=' setting.</summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ConfigurationMode.External">
            <summary>This mode indicatates that the current configuration is based a supplied configuration file set during runtime (in code).</summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ConfigurationMode.Document">
            <summary>This mode indicatates that the current configuration is based a supplied XmlDocument or XDocument object set during runtime (in code).</summary>
        </member>
        <member name="T:ReflectSoftware.Insight.ReflectInsightConfig">
            <summary>
            This class is used to obtain configuration settings used by the ReflectInsightDispatcher. In
            addition, it also events subscribers that the active configuration file has changed.
            </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightConfig.XmlSection">
            <summary>The XmlNode that represents the root section for the config file settings.</summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightConfig.Control">
            <summary>   Gets the External Mode Control instance. </summary>
            <value> The last configuration full path. </value>
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.#ctor(System.Xml.XmlNode)">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightConfig.AppConfigFullFileName">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.OnConfigFileChanged(System.Object,System.IO.FileSystemEventArgs)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.DisposeAppConfigFileWatcher">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.DisposeExternConfigFileWatcher">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.CreateAppConfigFileWatcher">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.CreateExternConfigFileWatcher(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetActiveApplicationConfig(ReflectSoftware.Insight.ReflectInsightConfig,System.String@)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.SetApplicationConfigFile">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.DoOnConfigFileChanged(System.IO.FileSystemEventArgs)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.ReadAndCreateConfigObject(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.SetAssignedConfig(ReflectSoftware.Insight.ReflectInsightConfig)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.SetExternalConfigurationMode(System.Xml.XmlDocument)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.SetExternalConfigurationMode(System.Xml.Linq.XDocument)">
            --------------------------------------------------------------------    
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.SetExternalConfigurationMode(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.ClearExternalConfigurationMode">
            --------------------------------------------------------------------              
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightConfig.Settings">
            --------------------------------------------------------------------
             <summary>   Gets the active configuration file settings. </summary>
            
             <value> <see cref="T:ReflectSoftware.Insight.ReflectInsightConfig"/> </value>  
             ///--------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetAttribute(System.Xml.XmlNode,System.String,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.LoadListenerGroups">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.LoadLogManagerInstances">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.LoadMessageColors">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetFilterInfo(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetAttribute(System.String,System.String,System.String)">
            --------------------------------------------------------------------      
             <summary>   Gets the requested attribute in the active config file. </summary>
            
             <param name="xPath">        The path to the node. </param>
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns> The value found in the config file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetListenerType(System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the requested Listener Type for listenerName. </summary>
            
             <param name="listenerName"> The listener type. </param>
             <returns>   Listener Type. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetSenderName">
            --------------------------------------------------------------------
             <summary>   Gets the name of the sender. </summary>
             <returns>   Senders name. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetExceptionEventTracker(System.Int32)">
            --------------------------------------------------------------------
             <summary>   Gets the specific exception event attribute. </summary>
            
             <param name="defaultTime">  The default time id. </param>
             <returns>   The time. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetMessageProcessingMaxValue(System.String,System.Int32)">
            --------------------------------------------------------------------
             <summary>   Gets the specific max value for the speiced attribute when dealing with message processing. </summary>
            
             <remarks>   A default time of 20 will be returned in the event of any errors. </remarks>
            
             <param name="attName">       The attribute name. </param>
             <param name="defaultValue">  The default max value if not specifed. </param>        
             <returns>   The max value. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetFilesAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the files attribute. </summary>
            
             <param name="attName">      Name of the attribute. </param>
             <param name="defaultValue"> The default value. </param>
             <returns>   The attribute. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetBaseConfigChangeAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the base configuration change attribute. </summary>
            
             <param name="attName">      Name of the attribute. </param>
             <param name="defaultValue"> The default value. </param>
             <returns>   The attribute. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetSenderNameAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the Sender Name attribute value. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist or is empty, then use this as the default value. </param>
            
             <returns> The value found in the configuration file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetExceptionEventTrackerAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the Exception EventTracker time in minutes. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist or is empty, then use this as the default value. </param>
             <returns> The value found in the configuration file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetMessageProcessingAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the Message Processing Attribute specified. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist or is empty, then use this as the default value. </param>
             <returns> The value found in the configuration file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetBasePropagateExceptionAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the Base PropagateException attribute value. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns> The value found in the configuration file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetBaseTraceHttpRequestAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the Base TraceHttpRequest attribute value. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns> The value found in the configuration file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetBaseEnableAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the Base Enable attribute value. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
            
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetBaseGlobalAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the base global attribute. </summary>
            
             <param name="attName">      Name of the attribute. </param>
             <param name="defaultValue"> The default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetDebugWriterAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the debug writer attribute. </summary>
            
             <param name="attName">      Name of the attribute. </param>
             <param name="defaultValue"> The default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetListenerGroupsAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets a Listener Groups attribute value. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetGroupAttribute(System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets a Group attribute value by name. </summary>
            
             <param name="gName">        The name of the group. </param>
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetExtensionAttribute(System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets an Extension attribute value by name. </summary>
            
             <param name="aName">        The name of the extension. </param>
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetFiltersAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets a Filters attribute value. </summary>
            
             <param name="attName">      The attribute name. </param>
             <param name="defaultValue"> If the value doesn't exist, then use this as the default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetLogManagerAttribute(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the log manager attribute. </summary>
            
             <param name="attName">      Name of the attribute. </param>
             <param name="defaultValue"> The default value. </param>
             <returns>The value found in the configuration file if it existed. Otherwise the default value supplied.</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetNode(System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the <see cref="T:System.Xml.XmlNode"/> </summary>
            
             <param name="xPath">    The node path. </param>
             <returns>   <see cref="T:System.Xml.XmlNode"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetNodes(System.String)">
            --------------------------------------------------------------------
             <summary>   Gets a list of <see cref="T:System.Xml.XmlNode"/> </summary>
            
             <param name="xPath">    The node path. </param>
             <returns>   <see cref="T:System.Xml.XmlNodeList"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.GetSubsection(System.String)">
            --------------------------------------------------------------------
             <summary>   Get the specified subsection key/value collection. </summary>
            
             <param name="section">  Name of the subsection. </param>
             <returns>   <see cref="T:System.Collections.Specialized.NameValueCollection"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.AddConstructedBaseSettings">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.AddConstructedSubsection(System.String,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.ConstructSubsections">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.ClearSubsections">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.AddSubsection(System.String,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Adds the specific subsection. </summary>
            
             <param name="section">  The name of the subsection. </param>
             <param name="nvc">      The subsection <see cref="T:System.Collections.Specialized.NameValueCollection"/> to add. </param>
             <returns> Returns the newly added subsection <see cref="T:System.Collections.Specialized.NameValueCollection"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.ClearSubsection(System.String)">
            --------------------------------------------------------------------
             <summary>   Clear the subsection. </summary>
            
             <param name="section">  The name of the subsection to clear. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightConfig.RemoveSubsection(System.String)">
            --------------------------------------------------------------------
             <summary>   Remove the subsection. </summary>
            
             <param name="section">  The name of the subsection to remove. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationHandler.System#Configuration#IConfigurationSectionHandler#Create(System.Object,System.Object,System.Xml.XmlNode)">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ConfigurationControl">
            <summary>
            Managing configuration control
            </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationControl.#ctor">
            -------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ConfigurationControl.CurrentConfigurationMode">
            -------------------------------------------------------------------
            <summary>Gets the external state of the current configuration mode.</summary>
            -------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ConfigurationControl.LastConfigFullPath">
            -------------------------------------------------------------------
            <summary>   Gets the last configuration full path. </summary>
            <value> The last configuration full path. </value>
            -------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ConfigurationControl.IgnorePhysicalConfigChange">
            -------------------------------------------------------------------
            <summary>   Gets or sets whether to ignore physical configuration changes. </summary>
            <value> <c>true</c> to ignore, else <c>false</c> </value>
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationControl.SetExternalConfigurationMode(System.Xml.XmlDocument)">
            -------------------------------------------------------------------
            <summary>
            Tells ReflectInsight to use a runtime specified configuration file. The app/web.config
            change action will be ignored. To clear this mode, call the SetExternalConfigurationMode()
            method.
            </summary>
                   
            <param name="xmlDoc">   The external configuration XmlDocument. </param>
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationControl.SetExternalConfigurationMode(System.Xml.Linq.XDocument)">
            -------------------------------------------------------------------
            <summary>
            Tells ReflectInsight to use a runtime specified configuration file. The app/web.config
            change action will be ignored. To clear this mode, call the SetExternalConfigurationMode()
            method.
            </summary>        
                   
            <param name="xDoc">   The external configuration XDocument. </param>
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationControl.SetExternalConfigurationMode(System.String)">
            -------------------------------------------------------------------
            <summary>
            Tells ReflectInsight to use a runtime specified configuration file. The app/web.config
            change action will be ignored. To clear this mode, call the SetExternalConfigurationMode()
            method.
            </summary>
                   
            <param name="externalConfigFile">   The external configuration file. </param>
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationControl.ClearExternalConfigurationMode">
            -------------------------------------------------------------------
            <summary>   Tells ReflectInsightConfig to use the app/web.config as default. </summary>        
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ConfigurationControl.ForceConfigChange">
            -------------------------------------------------------------------
            <summary>   Forces a configuration change. </summary>
            -------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.SimpleAPIHelper">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetMemoryStatus">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetIdentedCallStack(System.Collections.Generic.List{System.String})">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetCallStack(System.Collections.Generic.List{System.String})">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetAppDomainInformation(System.AppDomain)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetThreadInformation(System.Threading.Thread)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper._GetProcessInformation(ReflectSoftware.Insight.Common.Data.RICustomData,System.Diagnostics.Process)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetProcessInformation(System.Diagnostics.Process)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetMiniDumpInfo(System.String,System.Diagnostics.Process)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetSystemInformation">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetLoadedAssemblies">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.CompareProcess(System.Diagnostics.Process,System.Diagnostics.Process)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetLoadedProcesses">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetCollection(System.Collections.IEnumerable,ReflectSoftware.Insight.Common.ObjectScope)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.CreateDataTableSchema(System.Data.DataSet,System.Data.DataTable)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.DataTableFieldAddQuotesIfNeeded(System.Type)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.IsValidDataTableFieldType(System.Type)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetBestAllowableTableType(System.Type)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetDataSetTypeMap(System.Type)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.PopulateDataSet(System.Collections.IEnumerable[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SimpleAPIHelper.GetDesktopImage">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ListenerRouter">
            --------------------------------------------------------------------
             <summary>   A listener router. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:ReflectSoftware.Insight.Common.IReflectInsightListener"/>
             <seealso cref="T:System.IDisposable"/>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerRouter.LastUnsuccessfulWaitTime">
            <summary>   The last unsuccessful wait time. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerRouter.ListenerRequest">
            <summary>   The listener request. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerRouter.LastUnsuccessfulConnection">
            <summary>   The last unsuccessful connection Date/Time. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerRouter.MessageWriter">
            <summary>   The message writer. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerRouter.FKey">
            <summary>   The key. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerRouter.FIV">
            <summary>   The fiv. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerRouter.Disposed">
            --------------------------------------------------------------------
             <summary>   Gets a value indicating whether  disposed. </summary>
            
             <value> <c>true</c> if disposed, else <c>false</c>. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.#ctor">
            --------------------------------------------------------------------
             <summary>   Default constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.Dispose">
            --------------------------------------------------------------------
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
             resources.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:System.IDisposable.Dispose()"/>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.UpdateParameterVariables(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
             <summary>   Updates the parameter variables. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:ReflectSoftware.Insight.Common.IReflectInsightListener.UpdateParameterVariables(IListenerInfo)"/>
             ### <param name="listener"> The <see cref="T:ReflectSoftware.Insight.Common.IListenerInfo"/> listener. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.OnWriterThreadException(System.Exception)">
            --------------------------------------------------------------------
             <summary>   Executes the writer thread exception action. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">   The <see cref="T:System.Exception" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.WriteRequest(ReflectSoftware.Insight.Common.Router.MessageRequestType,RI.Utils.Miscellaneous.IFastBinarySerializable)">
            --------------------------------------------------------------------
             <summary>   Writes a request. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="requestType">  <see cref="T:ReflectSoftware.Insight.Common.Router.MessageRequestType" /> of the request. </param>
             <param name="request">      The <see cref="T:RI.Utils.Miscellaneous.IFastBinarySerializable" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.ConstructAndSendMessages(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
             <summary>   Construct and send messages. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="messages"> An array of <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage" /> messages. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerRouter.Receive(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
             <summary>   Receives the specified messages. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:ReflectSoftware.Insight.Common.IReflectInsightListener.Receive(ReflectInsightPackage[])"/>
             ### <param name="messages"> A list of
                                         <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/>
                                         messages. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DataPart.#ctor(ReflectSoftware.Insight.Common.MessageSendType,System.Byte[],System.Byte[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SendData.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SendData.Clear">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SendData.Send(ReflectSoftware.Insight.PipeConnection,ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.PipeConnection.#ctor(System.UInt64)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.PipeConnection.Establish">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.PipeConnection.EnsureConnection(System.Int32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.PipeConnection.SendData(ReflectSoftware.Insight.DataPart)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.PipeConnection.Close">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.PipeConnection.Dispose">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.RemoveBadHookedConnections">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.FreeConnections(System.Collections.Generic.List{ReflectSoftware.Insight.PipeConnection})">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.EstablishHookedConnections">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.LaunchViewer(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.SendSessionMessage(System.Boolean,ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.SendHookedMessage(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ViewerConnect.SendMessage(System.Boolean,ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.AddAndProcessMessages(System.Action)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.SendMessages(System.Collections.Generic.IEnumerable{ReflectSoftware.Insight.BoundReflectInsightPackage})">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.SendMessage(ReflectSoftware.Insight.BoundReflectInsightPackage)">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.MessageQueue.MessageCount">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.MessageQueue.HasMessages">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.GetBoundMessages">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageQueue.WaitUntilNoMessages(System.Int32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.#ctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.Clear">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.Clear(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.Clear(System.String,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.Add(System.String,System.String,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.Add(System.String,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessagePropertyContainer.Clone">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIExtendedMessageProperty">
            --------------------------------------------------------------------
             <summary>   RIExtendedMessageProperty class. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.RIExtendedMessageProperty.AllRequests">
            <summary>   All requests. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.#cctor">
            --------------------------------------------------------------------
             <summary>
             Initializes static members of the <see cref="T:ReflectSoftware.Insight.RIExtendedMessageProperty"/> class.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearSingleMessageProperty(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Clears a single message property. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
             <param name="property"> The property. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearSingleMessageProperties(System.String)">
            --------------------------------------------------------------------
             <summary>   Clears a single message properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearSingleMessageProperties">
            --------------------------------------------------------------------
             <summary>   Clears a single message properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearRequestProperty(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Clears the request property. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
             <param name="property"> The property. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearRequestProperties(System.String)">
            --------------------------------------------------------------------
             <summary>   Clears the request properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearRequestProperties">
            --------------------------------------------------------------------
             <summary>   Clears the request properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearAllRequestsProperty(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Clears all requests property. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
             <param name="property"> The property. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearAllRequestsProperties(System.String)">
            --------------------------------------------------------------------
             <summary>   Clears all requests properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.ClearAllRequestsProperties">
            --------------------------------------------------------------------
             <summary>   Clears all requests properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AttachToSingleMessage(System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Attaches to single message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
             <param name="property"> The property. </param>
             <param name="value">    The value. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AttachToSingleMessage(System.String,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Attaches to single message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">      The caption. </param>
             <param name="nvcollection"> The <see cref="T:System.Collections.Specialized.NameValueCollection"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AttachToRequest(System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Attaches to request. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
             <param name="property"> The property. </param>
             <param name="value">    The value. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AttachToRequest(System.String,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Attaches to request. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">      The caption. </param>
             <param name="nvcollection"> The <see cref="T:System.Collections.Specialized.NameValueCollection"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AttachToAllRequests(System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Attaches to all requests. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">  The caption. </param>
             <param name="property"> The property. </param>
             <param name="value">    The value. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AttachToAllRequests(System.String,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Attaches to all requests. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="caption">      The caption. </param>
             <param name="nvcollection"> The <see cref="T:System.Collections.Specialized.NameValueCollection"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AppendExtendedProperties(System.Collections.Generic.List{ReflectSoftware.Insight.Common.Data.ReflectInsightExtendedProperties},ReflectSoftware.Insight.MessagePropertyContainer)">
            --------------------------------------------------------------------
             <summary>   Appends the extended properties. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="propertyList"> The <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightExtendedProperties"/> property list. </param>
             <param name="container">    The <see cref="T:ReflectSoftware.Insight.MessagePropertyContainer"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExtendedMessageProperty.AssignToPackage(ReflectSoftware.Insight.ControlValues,ReflectSoftware.Insight.Common.Data.ReflectInsightPackage)">
            --------------------------------------------------------------------
             <summary>   Assigns to package. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="controlValue"> The <see cref="T:ReflectSoftware.Insight.ControlValues"/> </param>
             <param name="package">      The <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugManager.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugManager.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugManager.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugManager.DebugTimerCallback(System.Object)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugManager.StartDebugProcessThread">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugManager.Sleep(System.Int32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugTextLoggerManager.Write(System.String,System.Object[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugTextLogger.#ctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugTextLogger.Dispose">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DebugTextLogger.Write(System.String,System.Object[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.StartDebugProcessThread">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.SendPackages(ReflectSoftware.Insight.DestinationInfo[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.AddToDestinationInterimMessageQueue(ReflectSoftware.Insight.DestinationInfo[],ReflectSoftware.Insight.BoundReflectInsightPackage)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.ProcessMessages">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.ExecuteProcessMessages">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.RunModeProcess">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.DebugModeProcess">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.MessageManager.Process">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ListenerFileHelper">
            --------------------------------------------------------------------
             <summary>   A listener file helper. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerFileHelper.DetermineMessageTextFlagParam(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
             <summary>   Determine message text flag parameter. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:ReflectSoftware.Insight.Common.ReflectInsightException">  Thrown when a Reflect Insight error condition
                                                         occurs. </exception>
            
             <param name="listener"> The listener. </param>
            
             <returns>   A MessageTextFlag. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerFileHelper.DetermineMessageTextPattern(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
             <summary>   Determine message text pattern. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="listener">     The <see cref="T:ReflectSoftware.Insight.Common.IListenerInfo" />. </param>        
            
             <returns>   A String. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerFileHelper.DeterminePathParam(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
             <summary>   Determine path parameter. </summary>
             <exception cref="T:ReflectSoftware.Insight.Common.ReflectInsightException">  Thrown when a Reflect Insight error condition occurs. </exception>
             <param name="listener"> The <see cref="T:ReflectSoftware.Insight.Common.IListenerInfo" />. </param>
             <returns>   A String. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerFileHelper.DetermineAutoSaveParam(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
             <summary>   Determine automatic save parameter. </summary>
             <exception cref="T:ReflectSoftware.Insight.Common.ReflectInsightException">  Thrown when a Reflect Insight error condition occurs. </exception>
             <param name="listener"> The <see cref="T:ReflectSoftware.Insight.Common.IListenerInfo" />. </param>
             <returns>   A RIAutoSaveInfo. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.UpdateParameterVariables(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.OpenControlFile">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.CloseControlFile(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.OpenFileStream">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.CloseFileStream(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.PurgeLogFile">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.ForceAutoSave">
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.ProcessMessages(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            -------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerTextFile.Receive(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.CheckpointSetContainer.#ctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.CheckpointSetContainer.ResetAll">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.Attached(System.UInt32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.Release">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.Detached">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.Reset">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.ResetStates">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.ResetSingleRequestProperties">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.Clear">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValues.ResetAllCheckpoints">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValuesContainer.#ctor(ReflectSoftware.Insight.ControlValues)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ControlValuesContainer.Dispose">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RequestManager.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RequestManager.GetRequestObject">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIEventManager">
            --------------------------------------------------------------------
             <summary>   Class RIEventManager. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnAllExceptions">
            <summary>   Occurs when [on all exceptions]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnQueueException">
            <summary>   Occurs when [on queue exception]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnSendInternalException">
            <summary>   Occurs when [on send internal exception]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnCreatedInstance">
            <summary>   Occurs when [on created instance]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnConfigSettingsInitialized">
            <summary>   Occurs when [on configuration settings initialized]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnConfigChange">
            <summary>   Occurs when [on configuration change]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnServiceConfigChange">
            <summary>   Occurs when [on service configuration change]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnStartup">
            <summary>   Occurs when [on startup]. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.RIEventManager.OnShutdown">
            <summary>   Occurs when [on shutdown]. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnSendInternalException(System.Exception)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnQueueException(System.Exception)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnCreatedInstance(ReflectSoftware.Insight.ReflectInsight)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnConfigSettingsInitialized(ReflectSoftware.Insight.ReflectInsightConfig)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnConfigChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnServiceConfigChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIEventManager.DoOnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIExceptionManager">
            --------------------------------------------------------------------
             <summary>   Class RIExceptionManager. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.RIExceptionManager.FExceptionManagerComposite">
            <summary>   The exception manager composite. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RIExceptionManager.FDefaultExceptionPublisher">
            <summary>   The default exception publisher. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RIExceptionManager.FEventTracker">
            <summary>   The event tracker. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.#cctor">
            --------------------------------------------------------------------
             <summary>   Static constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.OnStartup">
            --------------------------------------------------------------------
             <summary>   Executes the startup action. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.OnConfigFileChange">
            --------------------------------------------------------------------
             <summary>   Executes the configuration file change action. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.OnShutdown">
            --------------------------------------------------------------------
             <summary>   Executes the shutdown action. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.CanEvent(System.Exception)">
            --------------------------------------------------------------------
             <summary>   Determines whether this instance can event the specified exception. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">   The <see cref="T:System.Exception"/> </param>
            
             <returns>   <c>true</c> or <c>false</c>. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.Publish(System.Exception,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Publishes the specified exception. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">                   The <see cref="T:System.Exception"/> </param>
             <param name="additionalParameters"> Any additional <see cref="T:System.Collections.Specialized.NameValueCollection"/> parameters. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.Publish(System.Exception,System.String)">
            --------------------------------------------------------------------
             <summary>   Publishes the specified exception. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">               The <see cref="T:System.Exception"/> </param>
             <param name="additionalInfo">   The additional information. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.Publish(System.Exception)">
            --------------------------------------------------------------------
             <summary>   Publishes the specified exception. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">   The <see cref="T:System.Exception"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.PublishIfEvented(System.Exception,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Publishes the exception if allowed. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">                   The <see cref="T:System.Exception"/> </param>
             <param name="additionalParameters"> Any additional <see cref="T:System.Collections.Specialized.NameValueCollection"/> parameters. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.PublishIfEvented(System.Exception,System.String)">
            --------------------------------------------------------------------
             <summary>   Publishes the exception if allowed. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">               The <see cref="T:System.Exception"/> </param>
             <param name="additionalInfo">   The additional information. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.PublishIfEvented(System.Exception)">
            --------------------------------------------------------------------
             <summary>   Publishes the exception if allowed. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">   The <see cref="T:System.Exception"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.RemovePublisherByType(System.Type)">
            --------------------------------------------------------------------
             <summary>   Removes the publisher by type. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="pType">    Type of the publisher. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.RemovePublisherByName(System.String)">
            --------------------------------------------------------------------
             <summary>   Removes the publisher by name. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name"> The name of the publisher. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIExceptionManager.AddPublisher(RI.Utils.ExceptionManagement.IExceptionPublisher,System.Collections.Specialized.NameValueCollection)">
            --------------------------------------------------------------------
             <summary>   Adds the publisher. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="publisher">    The
                                         <see cref="T:RI.Utils.ExceptionManagement.IExceptionPublisher"/> </param>
             <param name="parameters">   Any additional <see cref="T:System.Collections.Specialized.NameValueCollection"/> parameters. </param>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RIExceptionManager.PublisherCount">
            --------------------------------------------------------------------
             <summary>   Gets the publisher count. </summary>
            
             <value> The count. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RIExceptionManager.PublisherInfos">
            --------------------------------------------------------------------
             <summary>   Gets the publisher information. </summary>
            
             <value> An array of <see cref="T:RI.Utils.ExceptionManagement.PublisherInfo"/> </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RIExceptionManager.Publishers">
            --------------------------------------------------------------------
             <summary>   Gets all publishers. </summary>
            
             <value> An array of <see cref="T:RI.Utils.ExceptionManagement.IExceptionPublisher"/>s. </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.DetailParser">
            ------------------------------------------------------------------------
             <summary>
             This class will act as helper class to obtain a list of Listeners. It is a static class which
             cannot be instantiated.
             </summary>
             <remarks>
             Listeners strings can be a combination of the following:
             
             <list type="number">
             <item>
             <description>Viewer, File[path=c:\log.rlg]</description>
             </item>
             <item>
             <description>File[path=c:\log1.rlg], File[path=d:\log2.rlg]</description>
             </item>
             <item>
             <description>Viewer[], UserDefinedListener1, UserDefinedListener2[ userParam1=1234;
             userParam2=ReflectInsight is great! ]</description>
             </item>
             </list>
             
             Notes:
             <list type="number">
             <item>
             <description>Listener names must not contain spaces</description>
             </item>
             <item>
             <description>A listener with [] only is equal to no []. For example, Viewer[] is the same as
             Viewer</description>
             </item>
             <item>
             <description>If more than one listener is defined in the detail string, they must be
             separated by comma (,)</description>
             </item>
             <item>
             <description>All parameters must be contained within the square brackets (i.e. []) and must
             be in a key/value pair (i.e. path=c:\mylog.txt)</description>
             </item>
             <item>
             <description>Multiple parameters within a listener must be separated by semi-colon (;) (i.e.
             MyListener[ userParam1=1234; userParam2=some value ]</description>
             </item>
             </list>
             </remarks>
            ------------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.ReconstructDetailString(System.String,RI.Utils.Collection.SafeNameValueCollection)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.ValidateCorrectUseOfBrackets(System.String,System.Char,System.Char)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.EnsureNoSpacesForListenerName(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.MaskSpecialSymbols(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.UnmaskSpecialSymbols(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.GetParameters(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.CreateListenerInfo(System.String,RI.Utils.Collection.SafeNameValueCollection)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.AddListenersByDetails(System.Collections.Generic.List{ReflectSoftware.Insight.ListenerInfo},System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DetailParser.ReconstructDetailString(System.Collections.ArrayList)">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ListenerInfo">
             <summary>
             This class contains information about a particular Listener.
             i.e Name, Details and Parameters.
             </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:ReflectSoftware.Insight.Common.IListenerInfo"/>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerInfo.Id">
            <summary>   Gets the identifier. </summary>
            <value> The identifier. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerInfo.Name">
            <summary>   Gets the name. </summary>
            <seealso cref="P:ReflectSoftware.Insight.Common.IListenerInfo.Name"/>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerInfo.Details">
            <summary>   Gets the details. </summary>
            <seealso cref="P:ReflectSoftware.Insight.Common.IListenerInfo.Details"/>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerInfo.Params">
            <summary>   Gets the parameters. </summary>
            <seealso cref="P:ReflectSoftware.Insight.Common.IListenerInfo.Params"/>
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerInfo.#ctor(System.String,System.String,RI.Utils.Collection.SafeNameValueCollection,ReflectSoftware.Insight.Common.IReflectInsightListener)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerInfo.InternalDispose">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.DestinationInfo">
             <summary>
             This class contains information about a particular Destination and of its Listeners.
             </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:RI.Utils.MemoryCache.IDelayDisposable"/>
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.Id">
            <summary>   Gets the identifier. </summary>
            <value> The identifier. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.Name">
            <summary>   Gets the name. </summary>
            <value> The name. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.Details">
            <summary>   Gets the details. </summary>
            <value> The details. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.Enabled">
            <summary>   Gets or sets enabled. </summary>
            <value> <c>true</c> if enabled, else <c>false</c> </value>
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.BindingGroupIds">
            <summary>
            Gets or sets the binding group identifier.
            </summary>
            <value>
            The binding group identifier.
            </value>        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.#ctor(System.String,System.String,System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.#ctor(System.String,System.String,System.Boolean,ReflectSoftware.Insight.FilterInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.#ctor(System.String,System.String,System.Boolean,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.#ctor(System.String,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.#ctor(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.AddInterimMessageQueue(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.ClearInterimMessageQueue">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.GetInterimMessages">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.InternalDispose(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.RI#Utils#MemoryCache#IDelayDisposable#DelayDispose">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.ClearListeners">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.SetFilter(System.String)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationInfo.SetFilter(ReflectSoftware.Insight.FilterInfo)">
            --------------------------------------------------------------------        
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.Listeners">
            --------------------------------------------------------------------        
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationInfo.Filter">
            --------------------------------------------------------------------        
        </member>
        <member name="T:ReflectSoftware.Insight.DestinationBindingGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationBindingGroup.Id">
            <summary>   Gets the identifier. </summary>        
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationBindingGroup.Name">
            <summary>   Gets the name. </summary>        
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationBindingGroup.Parent">
            <summary>   Gets the parent. </summary>
            <value> The <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> parent. </value>
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.#ctor(System.String,ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.ReconstructFastDestinationArray">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.GetId(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.Contains(System.String)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.Contains(ReflectSoftware.Insight.DestinationInfo)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.AddDestinationBinding(System.String)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.RemoveDestinationBinding(System.String)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.DestinationBindingGroup.ClearDestinationBindings">
            --------------------------------------------------------------------        
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationBindingGroup.IsEmpty">
            --------------------------------------------------------------------        
        </member>
        <member name="P:ReflectSoftware.Insight.DestinationBindingGroup.BoundDestinations">
            --------------------------------------------------------------------        
        </member>
        <member name="T:ReflectSoftware.Insight.ListenerGroup">
            <summary>
            ListenerGroup
            </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.Id">
            <summary>   Gets the identifier. </summary>
            <value> The identifier. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.Name">
            <summary>   Gets the name. </summary>
            <value> The name. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.Enabled">
            <summary>   Gets or sets if enabled. </summary>
            <value> <c>true</c> if enabled, else <c>false</c> </value>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.MaskIdentities">
            <summary>   Gets or sets whether to mask identities. </summary>
            <value> <c>true</c> to mask, else <c>false</c> </value>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.FromConfig">
            <summary>   Gets whether this is from the configuration. </summary>
            <value> <c>true</c> if from the configuration, else <c>false</c> </value>
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.#ctor(System.String,System.Boolean,System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.#ctor(System.String,System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.#ctor(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.InternalDispose(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.RI#Utils#MemoryCache#IDelayDisposable#DelayDispose">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.ReconstructFastDestinationArray">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.ClearDestinations(System.Boolean)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.RemoveDestinationFromGroupBindings(ReflectSoftware.Insight.DestinationInfo)">
            --------------------------------------------------------------------        
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.IsActive">
            --------------------------------------------------------------------        
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.IsDefault">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.ContainsDestination(System.Int32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.ContainsDestination(System.String)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.RemoveDestination(ReflectSoftware.Insight.DestinationInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.RemoveDestination(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.AddDestination(System.String,System.String,System.Boolean)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.AddDestination(System.String,System.String,System.Boolean,ReflectSoftware.Insight.FilterInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.AddDestination(System.String,System.String,System.Boolean,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.AddDestination(System.String,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.AddDestination(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.GetDestination(System.Int32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.GetDestination(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.Destinations">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.GetDestinationBindingGroup(System.Int32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.GetDestinationBindingGroup(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.AddDestinationBindingGroup(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.RemoveDestinationBindingGroup(ReflectSoftware.Insight.DestinationBindingGroup)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.RemoveDestinationBindingGroup(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerGroup.ClearDestinationBindingGroups">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerGroup.DestinationBindingGroups">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.FilterMode">
            --------------------------------------------------------------------
             <summary>   FilterMode. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.FilterMode.Include">
            <summary>
            Include
            </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.FilterMode.Exclude">
            <summary>
            Exclude
            </summary>
        </member>
        <member name="T:ReflectSoftware.Insight.FilterInfo">
            --------------------------------------------------------------------
             <summary>   FilterInfo Class. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:RI.Utils.Miscellaneous.IFastBinarySerializable"/>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.FilterInfo.Name">
            --------------------------------------------------------------------
             <summary>   Gets or sets the name. </summary>
            
             <value> The name. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.FilterInfo.Mode">
            --------------------------------------------------------------------
             <summary>   Gets or sets the <see cref="T:ReflectSoftware.Insight.FilterMode"/> </summary>
            
             <value> The mode. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.FilterInfo.IDs">
            --------------------------------------------------------------------
             <summary>   Gets the ids. </summary>
            
             <value> The id. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.FilterInfo.#ctor(System.String,ReflectSoftware.Insight.FilterMode)">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.FilterInfo" /> class. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name"> The name. </param>
             <param name="mode"> The <see cref="T:ReflectSoftware.Insight.FilterMode"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.FilterInfo.WriteData(RI.Utils.Miscellaneous.FastBinaryWriter,System.Object)">
            --------------------------------------------------------------------
             <summary>   Writes the data. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="writer">           The <see cref="T:RI.Utils.Miscellaneous.FastBinaryWriter"/> </param>
             <param name="additionalInfo">    Additional info. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.FilterInfo.ReadData(RI.Utils.Miscellaneous.FastBinaryReader,System.Object)">
            --------------------------------------------------------------------
             <summary>   Reads the data. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="reader">           The <see cref="T:RI.Utils.Miscellaneous.FastBinaryReader"/> </param>
             <param name="additionalInfo">    Additional info. </param>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIFilter">
            --------------------------------------------------------------------
             <summary>   RIFilter. </summary>
            
             <seealso cref="T:RI.Utils.Miscellaneous.IFastBinarySerializable"/>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.#ctor">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.RIFilter" /> class. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.#ctor(System.String)">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.RIFilter" /> class. </summary>
            
             <param name="filterName">   Name of the filter. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.#ctor(ReflectSoftware.Insight.FilterInfo)">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.RIFilter" /> class. </summary>
            
             <param name="fInfo">    The <see cref="T:ReflectSoftware.Insight.FilterInfo"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.WriteBooleanArray(RI.Utils.Miscellaneous.FastBinaryWriter,System.Boolean[])">
            --------------------------------------------------------------------
             <summary>   Writes the boolean array. </summary>
            
             <param name="writer">   The <see cref="T:RI.Utils.Miscellaneous.FastBinaryWriter"/> </param>
             <param name="array">    Array of <see cref="T:System.Boolean"/> values. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.ReadBooleanArray(RI.Utils.Miscellaneous.FastBinaryReader)">
            --------------------------------------------------------------------
             <summary>   Reads the boolean array. </summary>
            
             <param name="reader">   The <see cref="T:RI.Utils.Miscellaneous.FastBinaryReader"/> </param>
             <returns>   <see cref="T:System.Boolean"/>[]. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.WriteData(RI.Utils.Miscellaneous.FastBinaryWriter,System.Object)">
            --------------------------------------------------------------------
             <summary>   Writes the data. </summary>
            
             <param name="writer">           The <see cref="T:RI.Utils.Miscellaneous.FastBinaryWriter"/> </param>
             <param name="additionalInfo">    Additional info. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.ReadData(RI.Utils.Miscellaneous.FastBinaryReader,System.Object)">
            --------------------------------------------------------------------
             <summary>   Reads the data. </summary>
            
             <param name="reader">           The <see cref="T:RI.Utils.Miscellaneous.FastBinaryReader"/> </param>
             <param name="additionalInfo">    Additional info. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.InitializeFilterModeArray(System.Boolean[],ReflectSoftware.Insight.FilterMode)">
            --------------------------------------------------------------------
             <summary>   Initializes the filter mode array. </summary>
            
             <param name="mArray">   Array of <see cref="T:System.Boolean"/> values. </param>
             <param name="mode">     The <see cref="T:ReflectSoftware.Insight.FilterMode"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.HandleCategoryMessageTypeIfApplicable(System.Type,System.String,System.Boolean[],System.String,ReflectSoftware.Insight.FilterMode)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.InitFilter(ReflectSoftware.Insight.FilterMode)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.SetFilter(ReflectSoftware.Insight.FilterInfo)">
            --------------------------------------------------------------------
             <summary>   Sets the filter. </summary>
            
             <param name="fInfo">    The <see cref="T:ReflectSoftware.Insight.FilterInfo"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.SetFilter(System.String)">
            --------------------------------------------------------------------
             <summary>   Sets the filter. </summary>
            
             <param name="filterName">   Name of the filter. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.IsPackageAllowed(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.FilterMessage(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage)">
            --------------------------------------------------------------------
             <summary>   Filters the message. </summary>
            
             <param name="message">  The <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> </param>
             <returns>   <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIFilter.FilterMessages(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
             <summary>   Filters the messages. </summary>
            
             <param name="messages"> The <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/>s. </param>
             <returns> An array of <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/></returns>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RIFilter.Name">
            --------------------------------------------------------------------
             <summary>   Gets the name. </summary>
            
             <value> The name. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerConsole.UpdateParameterVariables(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerConsole.Receive(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ListenerLoader">
            --------------------------------------------------------------------
             <summary>
             This static class will Load and return a reference to a Listener object instance.  If a
             Listener was not found, null is returned.
             </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerLoader.FListenerTypeList">
            <summary>   List of listener types. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerLoader.FAssemblies">
            <summary>   The assemblies. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerLoader.#cctor">
            --------------------------------------------------------------------
             <summary>   Static constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerLoader.LoadObject(System.String)">
            --------------------------------------------------------------------
             <summary>   Loads an object. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:ReflectSoftware.Insight.Common.ReflectInsightException">  Thrown when a Reflect Insight error condition
                                                         occurs. </exception>
            
             <param name="typeString">   The type string. </param>
            
             <returns>   The object. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerLoader.Get(System.String)">
            --------------------------------------------------------------------
             <summary>   Gets. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:ReflectSoftware.Insight.Common.ReflectInsightException">  Thrown when a Reflect Insight error condition
                                                         occurs. </exception>
            
             <param name="listenerName"> The listener name to get. </param>
            
             <returns>   The <see cref="T:ReflectSoftware.Insight.Common.IReflectInsightListener" /> interface. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ListenerEventLog">
            --------------------------------------------------------------------
             <summary>   A listener event log. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:ReflectSoftware.Insight.Common.IReflectInsightListener"/>
             <seealso cref="T:System.IDisposable"/>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerEventLog.FCategoryID">
            <summary>   Identifier for the category. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerEventLog.FEventID">
            <summary>   Identifier for the event. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ListenerEventLog.FEventLog">
            <summary>   The event log. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ListenerEventLog.Disposed">
            --------------------------------------------------------------------
             <summary>   Gets a value indicating whether the disposed. </summary>
            
             <value> true if disposed, false if not. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerEventLog.#ctor">
            --------------------------------------------------------------------
             <summary>   Default constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerEventLog.UpdateParameterVariables(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
             <summary>   Updates the parameter variables. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:ReflectSoftware.Insight.Common.IReflectInsightListener.UpdateParameterVariables(IListenerInfo)"/>
             ### <param name="listener"> The <see cref="T:ReflectSoftware.Insight.Common.IListenerInfo"/> listener. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerEventLog.Dispose">
            --------------------------------------------------------------------
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
             resources.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:System.IDisposable.Dispose()"/>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerEventLog.Receive(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
             <summary>   Receives the specified messages. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:ReflectSoftware.Insight.Common.IReflectInsightListener.Receive(ReflectInsightPackage[])"/>
             ### <param name="messages"> A list of
                                         <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/>
                                         messages. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.InvokeListeners.Receive(ReflectSoftware.Insight.DestinationInfo,ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.UpdateParameterVariables(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.OpenFileStream">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.CloseFileStream(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.DeleteFile(System.Boolean)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.PurgeLogFile">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.RewriteFileIgnoreRequestor(ReflectSoftware.Insight.Common.RIFileHeader,RI.Utils.Miscellaneous.FastBinaryFormatter,System.UInt32,System.UInt32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.ForceAutoSave">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.ProcessMessages(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerBinaryFile.Receive(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerViewer.UpdateParameterVariables(ReflectSoftware.Insight.Common.IListenerInfo)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ListenerViewer.Receive(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage[])">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ReflectInsight">
             <summary>   A reflect insight. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:ReflectSoftware.Insight.ReflectInsightDispatcher"/>
        </member>
        <member name="E:ReflectSoftware.Insight.ReflectInsight.OnGlobalReflectInsightMessageIntercept">
            <summary>
            Event queue for all listeners interested in OnGlobalReflectInsightMessageIntercept events.
            </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FUserDomainName">
            <summary>   Name of the user domain. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FUserName">
            <summary>   Name of the user. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FMachineName">
            <summary>   Name of the machine. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FMaskedUserDomainName">
            <summary>   Name of the masked user domain. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FMaskedUserName">
            <summary>   Name of the masked user. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FMaskedMachineName">
            <summary>   Name of the masked machine. </summary>
        </member>
        <member name="E:ReflectSoftware.Insight.ReflectInsight.OnReflectInsightMessageIntercept">
            <summary>
            Event queue for all listeners interested in OnReflectInsightMessageIntercept events.
            </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FCategory">
            <summary>   The category. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.ReflectInsight.FBkColor">
            <summary>   The block color. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsight.DefaultCheckmark">
            <summary>   The default checkmark. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsight.PropagateException">
            <summary>   Gets or sets a value indicating whether to propagate exception. </summary>
            <value> true if propagate exception, false if not. </value>
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.#cctor">
            --------------------------------------------------------------------
             <summary>   Static constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Init(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.#ctor(System.String)">
            --------------------------------------------------------------------
             <summary>   Constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="category"> The category. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.#ctor">
            --------------------------------------------------------------------
             <summary>   Default constructor. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.GetMessageTypeForSendObject(System.Object)">
            --------------------------------------------------------------------
             <summary>   Gets message type for send object. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="obj">  The object. </param>
            
             <returns>   The <see cref="T:ReflectSoftware.Insight.Common.MessageType" /> for send object. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.GetControlValues">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.GetConfigSettings">
            --------------------------------------------------------------------
             <summary>   This method is used to read configuration settings for this object. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:ReflectSoftware.Insight.ReflectInsightDispatcher.GetConfigSettings()"/>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Send(ReflectSoftware.Insight.ControlValues)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.DoOnMessageIntercept(ReflectSoftware.Insight.Common.ReflectInsightMessageInterceptHandler,ReflectSoftware.Insight.ReflectInsight,ReflectSoftware.Insight.Common.Data.ReflectInsightPackage)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendInternalError(ReflectSoftware.Insight.Common.MessageType,System.Exception)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXML(ReflectSoftware.Insight.Common.MessageType,System.String,System.Xml.XmlNode,System.Object[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStream(ReflectSoftware.Insight.Common.MessageType,System.Byte[],System.String,System.Object[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStream(ReflectSoftware.Insight.Common.MessageType,System.IO.Stream,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a stream. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="stream">   The data. </param>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTextStream(ReflectSoftware.Insight.Common.MessageType,System.IO.Stream,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a text stream. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="stream">   The data. </param>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTextFile(ReflectSoftware.Insight.Common.MessageType,System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a text file. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.IO.FileLoadException">        Thrown when a File Load error condition occurs. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendBinaryFile(ReflectSoftware.Insight.Common.MessageType,System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a binary file. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCustomData(System.String,ReflectSoftware.Insight.Common.Data.RICustomData,System.Object[])">
            --------------------------------------------------------------------                
             <summary>   Sends a custom data. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="cData">    The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendObject(System.String,System.Object,ReflectSoftware.Insight.Common.ObjectScope,System.Boolean,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an object. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">              The message. </param>
             <param name="obj">              The object. </param>
             <param name="scope">            The <see cref="T:ReflectSoftware.Insight.Common.ObjectScope" />. </param>
             <param name="bIgnoreStandard">  <c>true</c> to ignore standard types. </param>
             <param name="args">             A variable-length parameters list containing arguments. </param>   
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.AddCheckpoint(System.String,System.Int32,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Adds checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="lable">            The lable. </param>
             <param name="checkPointValue">  The check point value. </param>
             <param name="checkPointType">   <see cref="T:ReflectSoftware.Insight.Common.Checkpoint" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Clear">
            --------------------------------------------------------------------
             <summary>
             Clears this ReflectSoftware.Insight.ReflectInsight to its blank/initial state.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerClearAll">
            --------------------------------------------------------------------
             <summary>   Viewer clear all. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerClearWatches">
            --------------------------------------------------------------------
             <summary>   Viewer clear watches. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerClearScratchpad">
            --------------------------------------------------------------------
             <summary>   (This method is obsolete). </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Send(ReflectSoftware.Insight.Common.MessageType,System.String,System.String,System.Byte,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Send this message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="str">      The message. </param>
             <param name="details">  The details. </param>
             <param name="subType">  Subtype if message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Send(ReflectSoftware.Insight.Common.MessageType,System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Send this message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="str">      The message. </param>
             <param name="details">  The details. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Send(ReflectSoftware.Insight.Common.MessageType,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Send this message. </summary>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight._SendCustomData(ReflectSoftware.Insight.Common.MessageType,System.String,ReflectSoftware.Insight.Common.Data.RICustomData,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a custom data. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="mType">    The <see cref="T:ReflectSoftware.Insight.Common.MessageType" />. </param>
             <param name="str">      The message. </param>
             <param name="cData">    The <see cref="T:ReflectSoftware.Insight.Common.Data.RICustomData" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight._SendImage(System.String,System.Drawing.Image,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an image. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="img">  The <see cref="T:System.Drawing.Image" />. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsight.DefaultCheckpoint">
            --------------------------------------------------------------------
             <summary>   Gets or sets the default checkpoint. </summary>
             <value> The default checkpoint. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ResetCheckpoint(ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="cType">    The type. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ResetAllCheckpoints">
            --------------------------------------------------------------------
             <summary>   Resets all checkpoints. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ResetCheckpoint">
            --------------------------------------------------------------------
             <summary>   Resets the default checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ResetCheckpoint(System.String,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The name. </param>
             <param name="cType">    The type. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ResetCheckpoint(System.String)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The name. </param>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.AddCheckpoint(ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Adds checkpoint. </summary>
            
             <exception cref="T:System.ArgumentOutOfRangeException">  Thrown when one or more arguments are outside the required range. </exception>
             <exception cref="T:System.Exception">                    Thrown when an exception error condition occurs. </exception>
            
             <param name="cType">    The <see cref="T:ReflectSoftware.Insight.Common.Checkpoint" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.AddCheckpoint">
            --------------------------------------------------------------------
             <summary>   Adds the default checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.AddCheckpoint(System.String,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Adds checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentOutOfRangeException">  Thrown when one or more arguments are outside the required range. </exception>
             <exception cref="T:System.Exception">                    Thrown when an exception error condition occurs. </exception>
            
             <param name="name">     The name. </param>
             <param name="cType">    The <see cref="T:ReflectSoftware.Insight.Common.Checkpoint" />. </param>
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.AddCheckpoint(System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the default checkpoint. </summary>
             
             <param name="name">     The name. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.AddSeparator">
            --------------------------------------------------------------------
             <summary>   Adds separator. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.EnterMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Enter method. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.EnterMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>   Enter method. </summary>        
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase" />. </param>
             <param name="fullName">         <c>true</c> to use the fully qualified method name. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.TraceMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Trace method. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
             <returns>   A TraceMethod. </returns>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.TraceMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>   Trace method. </summary>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase" />. </param>
             <param name="fullName">         <c>true</c> to use the fully qualified name. </param>
             <returns>   A TraceMethod. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ExitMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Exit method. </summary>        
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ExitMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>   Exit method. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase" />. </param>
             <param name="fullName">         true to full name. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMessage(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMsg(System.String,System.Object[])">
            --------------------------------------------------------------------        
             <summary>   (This method is obsolete). </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendComment(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a comment. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendNote(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a note. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendInformation(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an information message. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendWarning(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a warning message. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendError(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an error message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendFatal(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a fatal message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendFatal(System.String,System.Exception,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a fatal message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="excep">    The <see cref="T:System.Exception" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDebug(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a debug message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTrace(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a trace message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStart(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a start message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStop(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a stop message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSuspend(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a suspend message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendResume(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a resume message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTransfer(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a transfer message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendVerbose(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a verbose message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAuditSuccess(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an audit success message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAuditFailure(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an audit failure message. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLevel(System.String,ReflectSoftware.Insight.Common.LevelType,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a level message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="level">    The <see cref="T:ReflectSoftware.Insight.Common.LevelType" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendReminder(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a reminder message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStream(System.String,System.Byte[],System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a stream message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStream(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a stream message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStream(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a stream message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMemory(System.String,System.Byte[],System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a memory message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMemory(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a memory message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMemory(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a memory message. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMemoryStatus(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the memory status. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMemoryStatus">
            --------------------------------------------------------------------
             <summary>   Sends the memory status. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLoadedAssemblies(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the loaded assemblies. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLoadedAssemblies">
            --------------------------------------------------------------------
             <summary>   Sends the loaded assemblies. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLoadedProcesses(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the loaded processes. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLoadedProcesses">
            --------------------------------------------------------------------
             <summary>   Sends the loaded processes. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCollection(System.String,System.Collections.IEnumerable,ReflectSoftware.Insight.Common.ObjectScope,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a collection. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">          The message. </param>
             <param name="enumerator">   The enumerator. </param>
             <param name="scope">        The <see cref="T:ReflectSoftware.Insight.Common.ObjectScope" />. </param>
             <param name="args">         A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCollection(System.String,System.Collections.IEnumerable,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a collection. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          The message. </param>
             <param name="enumerator">   The enumerator. </param>
             <param name="args">         A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTextFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a text file. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTextFile(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a text file. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTextFile(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a text file. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXML(System.String,System.Xml.XmlNode,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an XML. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="node"> The <see cref="T:System.Xml.XmlNode" />. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXMLFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an XML file. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.IO.FileLoadException">        Thrown when a File Load error condition occurs. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXML(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends XML data. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXML(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends XML. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.ArgumentException">        Thrown when one or more arguments have unsupported or illegal values. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXML(System.String,System.Xml.XmlReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends XML. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.Xml.XmlReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendXMLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an XML string. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.ArgumentException">        Thrown when one or more arguments have unsupported or illegal values. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">          The message. </param>
             <param name="xmlString">    The XML string. </param>
             <param name="args">         A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendHTMLFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a HTML file. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.IO.FileLoadException">        Thrown when a File Load error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendHTML(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends HTML data. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendHTML(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends HTML. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendHTMLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a HTML string. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">          The message. </param>
             <param name="htmlString">   The data. </param>
             <param name="args">         A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendJSON(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON object. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">    The message. </param>
             <param name="json">   The data. </param>
             <param name="args">   A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendJSON(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON string. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">    The message. </param>
             <param name="json">   The data. </param>
             <param name="args">   A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendJSONFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON file. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.IO.FileLoadException">        Thrown when a File Load error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendJSON(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends JSON data. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendJSON(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends JSON. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSQLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a SQL string. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">  The message. </param>
             <param name="sql">  The SQL. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSQLScript(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a SQL script. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSQLScript(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a SQL script. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSQLScript(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a SQL script. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDesktopImage(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the current desktop image. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDesktopImage">
            --------------------------------------------------------------------
             <summary>   Sends the current desktop image. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendImage(System.String,System.Drawing.Image,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an image. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="img">  The <see cref="T:System.Drawing.Image" />. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendImage(System.String,System.Drawing.Icon,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an icon. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">  The message. </param>
             <param name="ico">  The <see cref="T:System.Drawing.Icon" />. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendImage(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an image. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendGeneration(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the current generation number from the Garbage Collector for the specified object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="obj">  The object. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendGeneration(System.String,System.WeakReference,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the current generation number from the Garbage Collector for the specified object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="wRef"> The <see cref="T:System.WeakReference" />. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendObject(System.String,System.Object,ReflectSoftware.Insight.Common.ObjectScope,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="obj">      The object. </param>
             <param name="scope">    The <see cref="T:ReflectSoftware.Insight.Common.ObjectScope" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendObject(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  The message. </param>
             <param name="obj">  The object. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendObject(System.String,System.Object,System.Boolean,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">              The message. </param>
             <param name="obj">              The object. </param>
             <param name="bIgnoreStandard">  <c>true</c> to ignore standard types. </param>
             <param name="args">             A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSerializedObject(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a serialized object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="obj">  The object. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerSendWatch(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a watch message to the viewer Watch Panel. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="labelID">  The label to display for the watch. </param>
             <param name="str">      The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerSendWatch(System.String,System.Object)">
            --------------------------------------------------------------------
             <summary>   Sends a watch message to the viewer Watch Panel. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="labelID">  The label to display for the watch. </param>
             <param name="obj">      The data. </param>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerSendScratchpad(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   (This method is obsolete). </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  Identifier for the label. </param>
             <param name="str">      The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------       
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ViewerSendScratchpad(System.String,System.Object)">
            --------------------------------------------------------------------
             <summary>   (This method is obsolete). </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  Identifier for the label. </param>
             <param name="obj">      The object. </param>        
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendException(System.String,System.Exception,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an exception. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="excep">    The exception. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendException(System.Exception)">
            --------------------------------------------------------------------
             <summary>   Sends an exception. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="excep">    The exception. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCurrency(System.String,System.Nullable{System.Decimal},System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a value formatted as currency. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="val">  The value. </param>
             <param name="ci">   The <see cref="T:System.Globalization.CultureInfo"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCurrency(System.String,System.Nullable{System.Decimal},System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a value formatted as currency. </summary>
             <remarks>   The current culture information will be used for formatting.
                         ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  The message. </param>
             <param name="val">  The value. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.String,System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a date time. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="dt">       The <see cref="T:System.DateTime"/>. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="ci">       The <see cref="T:System.Globalization.CultureInfo"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a date time. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      The message. </param>
             <param name="dt">       The <see cref="T:System.DateTime"/>. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a date time. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="dt">   The <see cref="T:System.DateTime"/>. </param>
             <param name="ci">   The <see cref="T:System.Globalization.CultureInfo"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a date time. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  The message. </param>
             <param name="dt">   The <see cref="T:System.DateTime"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTimestamp(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the time stamp. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">          The message. </param>
             <param name="timeZoneId">   Identifier for the time zone. </param>
             <param name="args">         A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTimestamp(System.String,System.TimeZoneInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the time stamp. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception> 
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="tz">   The <see cref="T:System.TimeZoneInfo"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTimestamp(System.TimeZoneInfo)">
            --------------------------------------------------------------------
             <summary>   Sends the time stamp. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="tz">   The <see cref="T:System.TimeZoneInfo"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTimestamp(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the time stamp. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTimestamp">
            --------------------------------------------------------------------
             <summary>   Sends the time stamp. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendPoint(System.String,System.Drawing.Point,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a point. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="pt">   The <see cref="T:System.Drawing.Point"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendRectangle(System.String,System.Drawing.Rectangle,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a rectangle. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="rect"> The <see cref="T:System.Drawing.Rectangle"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSize(System.String,System.Drawing.Size,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a size. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="sz">   The <see cref="T:System.Drawing.Size"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendColor(System.String,System.Drawing.Color,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a color. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="clrObj">   The <see cref="T:System.Drawing.Color"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCheckmark(System.String,ReflectSoftware.Insight.Common.Checkmark,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a check mark. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="cmType">   Type of <see cref="T:ReflectSoftware.Insight.Common.Checkmark"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendCheckmark(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a check mark. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAssert(System.Boolean,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an assertion message. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="condition">    The condition to evaluate. </param>
             <param name="str">          The message. </param>
             <param name="args">         A variable-length parameters list containing arguments. </param>
            
             <returns>   <c>true</c> if it succeeds, else <c>false</c>. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAssigned(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an message indicating whether the object is assigned a value (not null). </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="obj">  The object. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
             <returns>   <c>true</c> if assigned, else <c>false</c>. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStackTrace(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the current stack trace. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendStackTrace">
            --------------------------------------------------------------------
             <summary>   Sends the stack trace. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendProcessInformation(System.Diagnostics.Process)">
            --------------------------------------------------------------------
             <summary>   Sends the current process information. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="aProcess"> The <see cref="T:System.Diagnostics.Process"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendProcessInformation">
            --------------------------------------------------------------------
             <summary>   Sends the process information. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAppDomainInformation(System.AppDomain)">
            --------------------------------------------------------------------
             <summary>   Sends the application domain information. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="anAppDomain">  The <see cref="T:System.AppDomain"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAppDomainInformation">
            --------------------------------------------------------------------
             <summary>   Sends the application domain information. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendThreadInformation(System.Threading.Thread)">
            --------------------------------------------------------------------
             <summary>   Sends the current thread information. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="aThread">  The <see cref="T:System.Threading.Thread"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendThreadInformation">
            --------------------------------------------------------------------
             <summary>   Sends the thread information. </summary>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendSystemInformation">
            --------------------------------------------------------------------
             <summary>   Sends the system information. </summary>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataSet(System.String,System.Data.DataSet,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a data set. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="dSet"> The <see cref="T:System.Data.DataSet"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataSet(System.Data.DataSet)">
            --------------------------------------------------------------------
             <summary>   Sends a data set. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="dSet"> The <see cref="T:System.Data.DataSet"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataSetSchema(System.String,System.Data.DataSet,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a data set schema. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="dSet"> The <see cref="T:System.Data.DataSet"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataSetSchema(System.Data.DataSet)">
            --------------------------------------------------------------------
             <summary>   Sends a data set schema. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="dSet"> The <see cref="T:System.Data.DataSet"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataTable(System.String,System.Data.DataTable,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a data table. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="table">    The <see cref="T:System.Data.DataTable"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataTable(System.Data.DataTable)">
            --------------------------------------------------------------------
             <summary>   Sends a data table. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="table">    The <see cref="T:System.Data.DataTable"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataTableSchema(System.String,System.Data.DataTable,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a data table schema. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="table">    The <see cref="T:System.Data.DataTable"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataTableSchema(System.Data.DataTable)">
            --------------------------------------------------------------------
             <summary>   Sends a data table schema. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="table">    The <see cref="T:System.Data.DataTable"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataView(System.String,System.Data.DataView,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a data view. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">  The message. </param>
             <param name="view"> The <see cref="T:System.Data.DataView"/>. </param>
             <param name="args"> A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendDataView(System.Data.DataView)">
            --------------------------------------------------------------------
             <summary>   Sends a data view. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="view"> The <see cref="T:System.Data.DataView"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTypedCollection``1(System.String,System.Collections.Generic.IEnumerable{``0}[])">
            --------------------------------------------------------------------
             <summary>   Sends a typed collection. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="str">          The enumarables. </param>
             <param name="enumerables">  A variable-length parameters list containing enumerables. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendTypedCollection``1(System.Collections.Generic.IEnumerable{``0})">
            --------------------------------------------------------------------
             <summary>   Sends a typed collection. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="enumerable">   The enumerable. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendEnumerable``1(System.String,System.Collections.Generic.IEnumerable{``0}[])">
            --------------------------------------------------------------------
             <summary>   (This method is obsolete). </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="str">          The. </param>
             <param name="enumerables">  A variable-length parameters list containing enumerables. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            --------------------------------------------------------------------
             <summary>   (This method is obsolete). </summary>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="enumerable">   The enumerable. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendHttpRequest(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary> Sends the current HTTP Request.</summary>
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendHttpRequest">
            --------------------------------------------------------------------
             <summary> Sends the current HTTP Request.</summary>
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLinqResults(System.String,System.Linq.IQueryable,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a linq results. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="query">    The <see cref="T:System.Linq.IQueryable"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLinqResults(System.Linq.IQueryable)">
            --------------------------------------------------------------------
             <summary>   Sends a linq results. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="query">    The <see cref="T:System.Linq.IQueryable"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLinqQuery(System.String,System.Linq.IQueryable,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a linq query. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="query">    The <see cref="T:System.Linq.IQueryable"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendLinqQuery(System.Linq.IQueryable)">
            --------------------------------------------------------------------
             <summary>   Sends a linq query. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="query">    The <see cref="T:System.Linq.IQueryable"/>. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendAttachment(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends an attachment. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the attachment. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMiniDumpFile(System.String,System.String,System.Diagnostics.Process,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a mini dump file. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename to stored the dump information in. </param>
             <param name="process">  The current <see cref="T:System.Diagnostics.Process"/>. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendMiniDumpFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a mini dump file. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename to store the dump information in. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the string. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="str">      The message. </param>
             <param name="theString">The String</param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.SendString(System.String,System.Text.StringBuilder,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the string. </summary>
             <param name="str">      The message. </param>
             <param name="theString">The String</param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.PurgeLogFile">
            --------------------------------------------------------------------
             <summary>   Sends a purge log command. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsight.Category">
            --------------------------------------------------------------------
             <summary>   Gets or sets the category. </summary>
             <value> The category. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsight.BackColor">
            --------------------------------------------------------------------
             <summary>   Gets or sets the background color. </summary>
             <value> The background color. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.ResetEnterExitIndentation">
            --------------------------------------------------------------------
             <summary>   Resets the Enter/Exit indentation. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Indent">
            --------------------------------------------------------------------
             <summary>   Increments the current indentation level. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <returns>   An Int32. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsight.Unindent">
            --------------------------------------------------------------------
             <summary>   Decrements the current indentation level. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <returns>   An Int32. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsight.IndentLevel">
            --------------------------------------------------------------------
             <summary>   Gets the current indentation level. </summary>
             <value> The indentation level. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.IndentValue.Increment">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.IndentValue.Decrement">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.IndentValue.Reset">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.IndentValue.Level">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SendPack.ConstructMessage(System.String,System.Object[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SendPack.Set(ReflectSoftware.Insight.Common.MessageType,System.String,System.Object[])">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.SendPack.Release">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIObjectType">
            --------------------------------------------------------------------
             <summary>   RIObjectType enumeration. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.RIObjectType.Instance">
            <summary> The instance </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RIObjectType.Global">
            <summary> The global </summary>
        </member>
        <member name="T:ReflectSoftware.Insight.ReflectInsightDispatcher">
            --------------------------------------------------------------------
             <summary>
             This class gives basic functionality for passing UserPackages to Listeners.
             </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <seealso cref="T:System.IDisposable"/>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightDispatcher.DestinationBindingGroupName">
            <summary></summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightDispatcher.DestinationBindingGroupId">
            <summary>   Gets the destination binding group identifier. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightDispatcher.Disposed">
            <summary>   Gets if disposed. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightDispatcher.Enabled">
            <summary>   Gets or sets if enabled. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.#ctor">
            --------------------------------------------------------------------
             <summary>   Constructs a ReflectInsightDispatcher object. </summary>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Finalize">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispose">
            --------------------------------------------------------------------
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
             resources.
             </summary>
            
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <seealso cref="M:System.IDisposable.Dispose()"/>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispose(System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             Releases the unmanaged resources used by the ReflectSoftware.Insight.ReflectInsightDispatcher
             and optionally releases the managed resources.
             </summary>
            
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="bDisposing"></param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.OnConfigChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.GetConfigSettings">
            --------------------------------------------------------------------
             <summary>   This method is used to read configuration settings for this object. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispatch(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage,ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------
             <summary>   This base method sends a package to the host object. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="userPackage">  User <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> to send. </param>
             <param name="lgroup">       The <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.SetDestinationBindingGroup(System.String)">
            --------------------------------------------------------------------
             <summary>   Set the destination binding group for this instance. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="destinationBindingGroup">  named destination binding group. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.GetDestinationBindingGroup">
            --------------------------------------------------------------------
             <summary>   Get the destination binding group for this instance. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <returns>   The group. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.ClearDestinationBindingGroup">
            --------------------------------------------------------------------
             <summary>   Clear the destination binding group for this instance. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Initialize">
            --------------------------------------------------------------------
             <summary>   Initialize ReflectInsight. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispatch(System.Collections.Generic.IEnumerable{ReflectSoftware.Insight.Common.Data.ReflectInsightPackage},System.Int32)">
            --------------------------------------------------------------------
             <summary>   Dispatches the specified packages. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="packages">                     A collection of <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> packages. </param>
             <param name="destinationBindingGroupId">    The destination binding group identifier. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispatch(System.Collections.Generic.IEnumerable{ReflectSoftware.Insight.Common.Data.ReflectInsightPackage})">
            --------------------------------------------------------------------
             <summary>   Dispatches the specified packages. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="packages"> A collection of <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> packages. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispatch(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage,System.Int32)">
            --------------------------------------------------------------------
             <summary>   Dispatches the specified package. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="package">                      The <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> </param>
             <param name="destinationBindingGroupId">    The destination binding group identifier. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.Dispatch(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage)">
            --------------------------------------------------------------------
             <summary>   Dispatches the specified package. </summary>
             <remarks>   ReflectSoftware Version 5.3. </remarks>
            
             <param name="package">  The <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightDispatcher.IsStateEnabledForType(ReflectSoftware.Insight.RIObjectType)">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightDispatcher.IsLiveViewerInstalled">
            --------------------------------------------------------------------
             <summary>   True if ReflectInsight is Live Viewer installed on local machine. </summary>
             <value> <c>true</c> if installed, else <c>false</c> </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightDispatcher.IsLogViewerInstalled">
            --------------------------------------------------------------------
             <summary>   True if ReflectInsight is Log Viewer installed on local machine. </summary>
             <value> <c>true</c> if installed, else <c>false</c> </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.GReflectInsight">
            --------------------------------------------------------------------
             <summary>
             This static class is responsible for delegating messages to the appropriate Listener (Viewer
             and/or File). The developer does not create an instance of the class but rather use it
             statically.
             </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.#ctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.Dispatch(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage,ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------
             <summary>
             This method is used to dispatch a package to all hosts assigned in the Listeners details
             string.  The dispatcher will wait until each host has acknowledged the reception of the
             package.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="userPackage">  <see cref="T:ReflectSoftware.Insight.Common.Data.ReflectInsightPackage"/> to send to each host assigned in the Listeners details string. </param>
             <param name="lgroup">       The <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SetDestinationBindingGroup(System.String)">
            --------------------------------------------------------------------
             <summary>   Set the destination binding group for this instance. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="destinationBindingGroup">  named destination binding group. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.GetDestinationBindingGroup">
            --------------------------------------------------------------------
             <summary>   Get the destination binding group for this instance. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <returns>   The group. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ClearDestinationBinding">
            --------------------------------------------------------------------
             <summary>   Clear the destination binding group for this instance. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.Clear">
            --------------------------------------------------------------------
             <summary>   Clears the Viewers content and/or deletes the current Listener log file. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerClearAll">
            --------------------------------------------------------------------
             <summary>   Clear all Viewer Windows. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerClearWatches">
            --------------------------------------------------------------------
             <summary>   Clears the Live Viewers Watch Panel. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerClearScratchpad">
            --------------------------------------------------------------------
             <summary>   Clears the Live Viewers Watch Panel. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.AddCheckpoint(ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>
             This method will increment a given checkpoint and send the results to the appropriate
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="cType">    The <see cref="T:ReflectSoftware.Insight.Common.Checkpoint"/> to send. i.e Checkpoint.Green. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.AddCheckpoint">
            --------------------------------------------------------------------
             <summary>
             This method will increment the default checkpoint and send the results to the appropriate
             Listener (Viewer and/or File).
             </summary>
             <remarks>   See the DefaultCheckpoint property for more details. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.AddCheckpoint(System.String,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Adds checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentOutOfRangeException">  Thrown when one or more arguments are outside the required range. </exception> 
             <exception cref="T:System.Exception">                    Thrown when an exception error condition occurs. </exception>
            
             <param name="name">     The name. </param>
             <param name="cType">    The <see cref="T:ReflectSoftware.Insight.Common.Checkpoint" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.AddCheckpoint(System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the default checkpoint. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="name">     The name. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.AddSeparator">
            --------------------------------------------------------------------
             <summary>
             This method will send a AddSeparator command to the appropriate Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.EnterMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is sent.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.EnterMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is sent.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase"/> (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
             <param name="fullName">         If <c>true</c>, display the full name of the calling method. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.EnterMethod(System.Reflection.MethodBase)">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is sent.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase"/> (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.TraceMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is
             sent. Note: this method should be used inside of a using clause.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            
             <returns>   TraceMethod. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.TraceMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is
             sent. Note: this method should be used inside of a using clause.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase"/> (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
             <param name="fullName">         If <c>true</c>, display the full name of the calling method. </param>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.TraceMethod"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.TraceMethod(System.Reflection.MethodBase)">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is
             sent. Note: this method should be used inside of a using clause.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current <see cref="T:System.Reflection.MethodBase"/> (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.TraceMethod"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ExitMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an un-indentation message to the Listener (Viewer and/or File). All
             subsequent messages will be unindented at the current level.  This is to match previously
             sent matching EnterMethod.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ExitMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             This method sends an un-indentation message to the Listener (Viewer and/or File). All
             subsequent messages will be unindented at the current level.  This is to match previously
             sent matching EnterMethod.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current <see cref="T:ReflectSoftware.Insight.TraceMethod"/>
                                             (i.e. System.Reflection.MethodBase.GetCurrentMethod()) </param>
             <param name="fullName">         If <c>true</c>, display the full name of the calling method. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ExitMethod(System.Reflection.MethodBase)">
            --------------------------------------------------------------------
             <summary>
             This method sends an un-indentation message to the Listener (Viewer and/or File). All
             subsequent messages will be unindented at the current level.  This is to match previously
             sent matching EnterMethod.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current <see cref="T:ReflectSoftware.Insight.TraceMethod"/>
                                             (i.e. System.Reflection.MethodBase.GetCurrentMethod()) </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMessage(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMessage <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to the
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendComment(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendComment <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             the Listener.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendNote(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendNote <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to the
             Listener(Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendInformation(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendInformation <see cref="T:ReflectSoftware.Insight.Common.MessageType"/>
             to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendWarning(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendWarning <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendError(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendError <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to the
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendFatal(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendFatal <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to the
             Listener.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendFatal(System.String,System.Exception,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendFatal <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to the
             Listener.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="ex">   <see cref="T:System.Exception"/> </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDebug(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDebug <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTrace(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTrace <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStart(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStart <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStop(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStop <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSuspend(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSuspend <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendResume(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendResume <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTransfer(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTransfer <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendVerbose(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendVerbose <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             Listeners.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAuditSuccess(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAuditSuccess <see cref="T:ReflectSoftware.Insight.Common.MessageType"/>
             to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAuditFailure(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAuditFailure <see cref="T:ReflectSoftware.Insight.Common.MessageType"/>
             to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLevel(System.String,ReflectSoftware.Insight.Common.LevelType,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLevel <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to the
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive message to display to the user. </param>
             <param name="level">    The <see cref="T:ReflectSoftware.Insight.Common.LevelType"/> to send. </param>
             <param name="args">     Optional arguments supplied to a formatted descriptive string for the
                                     message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendReminder(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendReminder <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive message to display to the user. </param>
             <param name="args"> Optional arguments supplied to a formatted descriptive string for the
                                 message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStream(System.String,System.Byte[],System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStream <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> to
             the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive message to display to the user. </param>
             <param name="stream">   The extra data that is associated with message. </param>
             <param name="args">     Optional arguments supplied to a formatted descriptive string for the
                                     message. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStream(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStream MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendStream MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStream(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStream MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> File name associated with the SendStream MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMemory(System.String,System.Byte[],System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemory MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendMemory MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMemory(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemory MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendMemory MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMemory(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemory MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> File name associated with the SendMemory MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMemoryStatus(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemoryStatus MessageType to the Listener (Viewer and/or File). It
             sends the current memory status of the callers application domain and machine.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMemoryStatus">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemoryStatus MessageType to the Listener (Viewer and/or File). It
             sends the current memory status of the callers application domain and machine.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLoadedAssemblies(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedAssemblies MessageType to the Listener (Viewer and/or File). It
             sends information about the currently loaded assemblies within the current application domain.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLoadedAssemblies">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedAssemblies MessageType to the Listener (Viewer and/or File). It
             sends information about the currently loaded assemblies within the current application domain.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLoadedProcesses(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedProcesses MessageType to the Listener (Viewer and/or File). It
             sends information about loaded processes currently running.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLoadedProcesses">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedProcesses MessageType to the Listener (Viewer and/or File). It
             sends information about loaded processes currently running.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCollection(System.String,System.Collections.IEnumerable,ReflectSoftware.Insight.Common.ObjectScope,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCollection MessageType to the Listener (Viewer and/or File). It sends
             a list of objects contained within the collection enumerable object.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerator">   Container object that supports the IEnumerable interface. </param>
             <param name="scope">        Object properties to send. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCollection(System.String,System.Collections.IEnumerable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCollection MessageType to the Listener (Viewer and/or File). It sends
             a list of objects contained within the collection enumerable object. Contained object details
             will not be displayed.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerator">   Container object that supports the IEnumerable interface. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTextFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTextFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> File path to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTextFile(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTextFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   File stream. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTextFile(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTextFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXMLFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> XML File path to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXML(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXM MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   XML File stream to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXML(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXML(System.String,System.Xml.XmlDocument,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="doc">  XmlDocument object send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXML(System.String,System.Xml.XmlNode,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="node"> XmlNode object send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXML(System.String,System.Xml.XmlReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   XmlReader object to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendXMLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="xmlString">    The XML text to send. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendHTMLFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTMLFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> HTML File path to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendHTML(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   HTML File stream to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendHTML(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendHTMLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="htmlString">   The HTML text to send. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendJSON(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON string. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">   The message. </param>
             <param name="json">  The data. </param>
             <param name="args">  A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendJSONFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON file. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.IO.FileLoadException">        Thrown when a File Load error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendJSON(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends JSON data. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendJSON(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends JSON. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSQLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSQL MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="sql">  A string describing an SQL statement. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSQLScript(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSQL MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> An SQL script file. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSQLScript(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSQL MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   SQL File stream to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSQLScript(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSQL MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDesktopImage(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDesktopImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDesktopImage">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDesktopImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendImage(System.String,System.Drawing.Image,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="img">  An Image object or descended of. e.g Bitmap. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendImage(System.String,System.Drawing.Icon,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="ico">  An Icon object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendImage(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> A image file. e.g *.bmp, *.jpg, *.png, *.gif, *.ico,... </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendGeneration(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendGeneration MessageType to the Listener (Viewer and/or File). It will
             record the current Generation of a given object.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  An object to determine its generation value. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendGeneration(System.String,System.WeakReference,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendGeneration MessageType to the Listener (Viewer and/or File). It will
             record the current Generation of a given WeakReference object.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="wRef"> An WeakReference object to determine its generation value. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCustomData(System.String,ReflectSoftware.Insight.Common.Data.RICustomData,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a Custom Data MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="cData">    The Custom Data. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendObject(System.String,System.Object,ReflectSoftware.Insight.Common.ObjectScope,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method allows the caller to send any object type to display within the Viewer. If the
             object being sent is of a standard type, then the SendObject will redirect the MessageType
             from SendObject to the appropriate MessageType i.e SendDate.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="obj">      The object to describe. </param>
             <param name="scope">    Object properties to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendObject(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method allows the caller to send any object type to display within the Viewer. If the
             object being sent is of a standard type, then the SendObject will redirect the MessageType
             from SendObject to the appropriate MessageType i.e SendDate.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  The object to describe. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendObject(System.String,System.Object,System.Boolean,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method allows the caller to send any object type to display within the Viewer. If the
             object being sent is of a standard type, then the SendObject will redirect the MessageType
             from SendObject to the appropriate MessageType i.e SendDate.  This behavior can be
             overwritten by setting the bIgnoreStandard = true.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">              A descriptive string to describe the MessageType. </param>
             <param name="obj">              The object to describe. </param>
             <param name="bIgnoreStandard">  Ignore standard object type behavior. </param>
             <param name="args">             Arguments supplied to a formatted descriptive string for
                                             parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSerializedObject(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method Sends the contents of an Object serialized. The Object must support either the
             ISerializable interface or the Serializable attribute.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  The object to serialize. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerSendWatch(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Viewers Watch Panel. </param>
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerSendWatch(System.String,System.Object)">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Live Viewers Watch Panel. </param>
             <param name="obj">      The object to display. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerSendScratchpad(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Viewers Watch Panel. </param>
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ViewerSendScratchpad(System.String,System.Object)">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Live Viewers Watch Panel. </param>
             <param name="obj">      The object to display. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendException(System.String,System.Exception,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendException MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="ex">   An Exception object or a descended of. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendException(System.Exception)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendException MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">   An Exception object or a descended of. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCurrency(System.String,System.Nullable{System.Decimal},System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCurrency MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="val">  The actual value to display. </param>
             <param name="ci">   A CultureInfo object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCurrency(System.String,System.Nullable{System.Decimal},System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCurrency MessageType to the Listener (Viewer and/or File). The
             Culture used will be the CurrentThread.CurrentCulture.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="val">  The actual value to display. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.String,System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="dt">       The DateTime parameter to display. </param>
             <param name="format">   The DateTime format to use to control the display. </param>
             <param name="ci">       The CultureInfo object. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File). The
             Culture used will be the CurrentThread.CurrentCulture.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="dt">       The DateTime parameter to display. </param>
             <param name="format">   The DateTime format to use to control the display. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dt">   The DateTime parameter to display. </param>
             <param name="ci">   A CultureInfo object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File). The
             Culture used will be the CurrentThread.CurrentCulture.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dt">   The DateTime parameter to display. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTimestamp(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="timeZoneId">   The TimeZone Id. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTimestamp(System.String,System.TimeZoneInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="tz">   The <see cref="T:System.TimeZone" />. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTimestamp(System.TimeZoneInfo)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="tz">   The <see cref="T:System.TimeZone" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTimestamp(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File). This
             method will send the timestamp based on TimeZone (Local)
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTimestamp">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File). This
             method will send the time stamp based on TimeZone (Local)
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendPoint(System.String,System.Drawing.Point,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendPoint MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="pt">   A Point object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendRectangle(System.String,System.Drawing.Rectangle,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendRectangle MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="rect"> A Rectangle object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSize(System.String,System.Drawing.Size,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSize MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="sz">   A Size object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendColor(System.String,System.Drawing.Color,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendColor MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="clrObj">   A Color object. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCheckmark(System.String,ReflectSoftware.Insight.Common.Checkmark,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCheckmark MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="cmType">   A Checkmark type to send. e.g Checkmark.Green. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendCheckmark(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCheckmark MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   The Checkmark used depends on the DefaultCheckmark property value. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAssert(System.Boolean,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAssert MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>
             This message will only get sent if the condition fails (false) and in DEBUG mode. Otherwise,
             it is ignored.
             </remarks>
            
             <param name="condition">    The assert condition. </param>
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            
             <returns>   the condition value. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAssigned(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAssigned MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  Object to test on. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            
             <returns>   Boolean. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStackTrace(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStackTrace MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendStackTrace">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStackTrace MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendProcessInformation(System.Diagnostics.Process)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendProcessInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   Note: this method takes a few seconds to execute. </remarks>
            
             <param name="aProcess"> A processs to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendProcessInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendProcessInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>
             Will send information about the current process.  Note: this method takes a few seconds to
             execute.
             </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAppDomainInformation(System.AppDomain)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAppDomainInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="anAppDomain">  An AppDomain object to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAppDomainInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAppDomainInformation MessageType (CurrentDomain) to the Listener
             (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendThreadInformation(System.Threading.Thread)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendThreadInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="aThread">  A Thread object to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendThreadInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendThreadInformation MessageType (CurrentThread) to the Listener (Viewer
             and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendSystemInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSystemInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataSet(System.String,System.Data.DataSet,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSet MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dSet"> The DataSet to send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataSet(System.Data.DataSet)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSet MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="dSet"> The DataSet to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataSetSchema(System.String,System.Data.DataSet,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSetSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dSet"> The DataSet to send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataSetSchema(System.Data.DataSet)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSetSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="dSet"> The DataSet to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataTable(System.String,System.Data.DataTable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendDataTable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="table">    The table to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataTable(System.Data.DataTable)">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendDataTable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="table">    The table to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataTableSchema(System.String,System.Data.DataTable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataTableSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="table">    The table. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataTableSchema(System.Data.DataTable)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataTableSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="table">    The <see cref="T:System.Data.DataTable" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataView(System.String,System.Data.DataView,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataView MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="view"> The <see cref="T:System.Data.DataView" /> to send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendDataView(System.Data.DataView)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataView MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="view"> The <see cref="T:System.Data.DataView" /> to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTypedCollection``1(System.String,System.Collections.Generic.IEnumerable{``0}[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a Sends a Type Collection MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerables">  The enumerables to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendTypedCollection``1(System.Collections.Generic.IEnumerable{``0})">
            --------------------------------------------------------------------
             <summary>
             This method sends a Sends a Type Collection MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="enumerable">   The enumerable to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendEnumerable``1(System.String,System.Collections.Generic.IEnumerable{``0}[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendEnumerable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerables">  The enumerables to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendEnumerable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <typeparam name="T">    . </typeparam>
             <param name="enumerable">   The enumerable to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendHttpRequest(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary> Sends the current HTTP Request.</summary>
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendHttpRequest">
            --------------------------------------------------------------------
             <summary> Sends the current HTTP Request.</summary>
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLinqResults(System.String,System.Linq.IQueryable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqResults MessageType to the Listener (Viewer and/or File).
             </summary>
                    
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="query">    The query results to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLinqResults(System.Linq.IQueryable)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqResults MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="query">    The query results to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLinqQuery(System.String,System.Linq.IQueryable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqQuery MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="query">    The query results to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendLinqQuery(System.Linq.IQueryable)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqQuery MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="query">    The query results to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendAttachment(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendAttachment MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> The file to send as an attachment. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMiniDumpFile(System.String,System.String,System.Diagnostics.Process,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendMiniDumpFile MessageType to the Listener for the process specified.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> The file to send as an attachment. </param>
             <param name="process">  The process to create a mini memory dump file. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendMiniDumpFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendMiniDumpFile MessageType to the Listener for the current process.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> The file to send as an attachment. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the string. </summary>
             
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="str">      The message. </param>
             <param name="theString">The String</param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.SendString(System.String,System.Text.StringBuilder,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the string. </summary>
             
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="str">      The message. </param>
             <param name="theString">The String</param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.PurgeLogFile">
            --------------------------------------------------------------------
             <summary>   Sends a purge log command. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ResetCheckpoint(ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>
             This method will increment the given checkpoint and send the result to the appropriate
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="cType">    The Checkpoint type to reset. e.g Checkpoint.Green. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ResetCheckpoint">
            --------------------------------------------------------------------
             <summary>
             This method will reset the DefaultCheckpoint value. Nothing is passed to the Listener (Viewer
             and/or File).
             </summary>
            
             <remarks>   See the DefaultCheckpoint property for more details. </remarks>
            
             <example>
             If the DefaultCheckpoint = Checkpoint.Yellow, then this method will reset the Yellow
             Checkpoint value to zero.
             </example>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ResetCheckpoint(System.String,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The name. </param>
             <param name="cType">    The type. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ResetCheckpoint(System.String)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The name. </param>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GReflectInsight.ResetEnterExitIndentation">
            --------------------------------------------------------------------
             <summary>   This method will reset the current Enter/Exit indentation level. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GReflectInsight.Enabled">
            --------------------------------------------------------------------
             <summary>   If false, then the dispatcher will ignore any packages being sent. </summary>
            
             <value> The enabled. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GReflectInsight.DefaultCheckpoint">
            --------------------------------------------------------------------
             <summary>
             Gets or sets or gets the DefaultCheckpoint. The default AddCheckpoint() and ResetCheckpoint()
             methods uses this property.
             </summary>
            
             <value> The default checkpoint. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GReflectInsight.DefaultCheckmark">
            --------------------------------------------------------------------
             <summary>
             Gets or sets or gets the DefaultCheckmark. The default SendCheckmark() method uses this
             property.
             </summary>
            
             <value> The default checkmark. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GReflectInsight.Category">
            --------------------------------------------------------------------
             <summary>   Gets or sets or gets the current Category descriptive value. </summary>
            
             <value> The category. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GReflectInsight.BackColor">
            --------------------------------------------------------------------
             <summary>   Gets or sets or gets the current default Background Color for all MessageTypes. </summary>
            
             <value> The color of the back. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GReflectInsight.PropagateException">
            --------------------------------------------------------------------
             <summary>   Enable or disable ReflectInsight PropagateException. </summary>
            
             <value> The propagate exception. </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.GDebugReflectInsight">
            --------------------------------------------------------------------
             <summary>
             This static class is responsible for delegating messages to the appropriate Listener (Viewer
             and/or File). The developer does not create an instance of the class but rather use it
             statically.
             </summary>
             <remarks>   DEBUG version. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.#ctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.Dispatch(ReflectSoftware.Insight.Common.Data.ReflectInsightPackage,ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------
             <summary>
             This method is used to dispatch a package to all hosts assigned in the Listeners details
             string.  The dispatcher will wait until each host has acknowledged the reception of the
             package.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="userPackage">  Package to send to each host assigned in the Listeners details
                                         string. </param>
             <param name="lgroup">       The <see cref="T:ReflectSoftware.Insight.ListenerGroup" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SetDestinationBindingGroup(System.String)">
            --------------------------------------------------------------------
             <summary>   Set the destination binding group for this instance. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="destinationBindingGroup">  named destination binding group. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ClearDestinationBinding">
            --------------------------------------------------------------------
             <summary>   Clear the destination binding group for this instance. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.Clear">
            --------------------------------------------------------------------
             <summary>   Clears the Viewers content and/or deletes the current Listener log file. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerClearAll">
            --------------------------------------------------------------------
             <summary>   Clear all Viewer Windows. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerClearWatches">
            --------------------------------------------------------------------
             <summary>   Clears the Live Viewers Watch Panel. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerClearScratchpad">
            --------------------------------------------------------------------
             <summary>   Clears the Live Viewers Watch Panel. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.AddCheckpoint(ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>
             This method will increment a given checkpoint and send the results to the appropriate
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="cType">    The Checkpoint to send. i.e Checkpoint.Green. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.AddCheckpoint">
            --------------------------------------------------------------------
             <summary>
             This method will increment the default checkpoint and send the results to the appropriate
             Listener (Viewer and/or File).
             </summary>
            
             <remarks>   See the DefaultCheckpoint property for more details. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.AddCheckpoint(System.String,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Adds checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <exception cref="T:System.ArgumentOutOfRangeException">  Thrown when one or more arguments are outside
                                                             the required range. </exception>
             <exception cref="T:System.Exception">                    Thrown when an exception error condition
                                                             occurs. </exception>
            
             <param name="name">     The name. </param>
             <param name="cType">    The <see cref="T:ReflectSoftware.Insight.Common.Checkpoint" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.AddCheckpoint(System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the default checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="name">     The name. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.AddSeparator">
            --------------------------------------------------------------------
             <summary>
             This method will send a AddSeparator command to the appropriate Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.EnterMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is sent.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.EnterMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             This method sends an indentation message to the Listener (Viewer and/or File). All subsequent
             messages will be indented at the current level until a respective matching ExitMethod is sent.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current MethodBase (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
             <param name="fullName">         If true, display the full name of the calling method. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ExitMethod(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an un indentation message to the Listener (Viewer and/or File). All
             subsequent messages will be unindented at the current level.  This is to match previously
             sent matching EnterMethod.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ExitMethod(System.Reflection.MethodBase,System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             This method sends an un indentation message to the Listener (Viewer and/or File). All
             subsequent messages will be unindented at the current level.  This is to match previously
             sent matching EnterMethod.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current MethodBase (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
             <param name="fullName">         If true, display the full name of the calling method. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ExitMethod(System.Reflection.MethodBase)">
            --------------------------------------------------------------------
             <summary>
             This method sends an un indentation message to the Listener (Viewer and/or File). All
             subsequent messages will be unindented at the current level.  This is to match previously
             sent matching EnterMethod.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="currentMethod">    The current MethodBase (i.e.
                                             System.Reflection.MethodBase.GetCurrentMethod()) </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMessage(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMessage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendComment(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendComment MessageType to the Listener. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendNote(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendNote MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendInformation(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendWarning(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendWarning MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendError(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendError MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendFatal(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendFatal MessageType to the Listener. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendFatal(System.String,System.Exception,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendFatal MessageType to the Listener. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="ex">   Exception. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDebug(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendDebug MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTrace(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendTrace MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStart(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendStart MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStop(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendStop MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSuspend(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendSuspend MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendResume(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendResume MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTransfer(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendTransfer MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendVerbose(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendVerbose MessageType to Listeners. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAuditSuccess(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAuditSuccess MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAuditFailure(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAuditFailure MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLevel(System.String,ReflectSoftware.Insight.Common.LevelType,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLevel MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="level">    The Level type to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendReminder(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendReminder MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStream(System.String,System.Byte[],System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStream MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendStream MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStream(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStream MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendStream MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStream(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStream MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> File name associated with the SendStream MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMemory(System.String,System.Byte[],System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemory MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendMemory MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMemory(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemory MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   The extra data that is associated with SendMemory MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMemory(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemory MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> File name associated with the SendMemory MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMemoryStatus(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemoryStatus MessageType to the Listener (Viewer and/or File). It
             sends the current memory status of the callers application domain and machine.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMemoryStatus">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendMemoryStatus MessageType to the Listener (Viewer and/or File). It
             sends the current memory status of the callers application domain and machine.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLoadedAssemblies(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedAssemblies MessageType to the Listener (Viewer and/or File). It
             sends information about the currently loaded assemblies within the current application domain.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLoadedAssemblies">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedAssemblies MessageType to the Listener (Viewer and/or File). It
             sends information about the currently loaded assemblies within the current application domain.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLoadedProcesses(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedProcesses MessageType to the Listener (Viewer and/or File). It
             sends information about the currently loaded processes currently running.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLoadedProcesses">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLoadedProcesses MessageType to the Listener (Viewer and/or File). It
             sends information about the currently loaded processes currently running.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCollection(System.String,System.Collections.IEnumerable,ReflectSoftware.Insight.Common.ObjectScope,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCollection MessageType to the Listener (Viewer and/or File). It sends
             a list of objects contained within the collection enumerable object.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerator">   Container object that supports the IEnumerable interface. </param>
             <param name="scope">        Object properties to send. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCollection(System.String,System.Collections.IEnumerable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCollection MessageType to the Listener (Viewer and/or File). It sends
             a list of objects contained within the collection enumerable object. Contained object details
             will not be displayed.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerator">   Container object that supports the IEnumerable interface. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTextFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTextFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> File path to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTextFile(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTextFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   File stream. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTextFile(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTextFile MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXMLFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> XML File path to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXML(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   XML File stream to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXML(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXML(System.String,System.Xml.XmlDocument,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="doc">  XmlDocument object send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXML(System.String,System.Xml.XmlNode,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="node"> XmlNode object send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXML(System.String,System.Xml.XmlReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   XmlReader object to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendXMLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendXML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="xmlString">    The XML text to send. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendHTMLFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> HTML File path to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendHTML(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   HTML File stream to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendHTML(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTMLMessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendHTMLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendHTML MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="htmlString">   The HTML text to send. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendJSON(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON string. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">    The message. </param>
             <param name="json">   The data. </param>
             <param name="args">   A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendJSONFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends a JSON file. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.IO.FileLoadException">        Thrown when a File Load error condition occurs. </exception>
            
             <param name="str">      The message. </param>
             <param name="fileName"> Filename of the file. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendJSON(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends JSON data. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="stream">   The data. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendJSON(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends JSON. </summary>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            
             <param name="str">      The message. </param>
             <param name="reader">   The <see cref="T:System.IO.TextReader" />. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSQLString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendSQL MessageType to the  (Viewer and/or File). </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="sql">  A string describing an SQL statement. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSQLScript(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   This method sends a SendSQL MessageType to the  (Viewer and/or File). </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> An SQL script file. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSQLScript(System.String,System.IO.Stream,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSQL MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="stream">   SQL File stream to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSQLScript(System.String,System.IO.TextReader,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSQL MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="reader">   TextReader to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDesktopImage(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDesktopImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDesktopImage">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDesktopImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendImage(System.String,System.Drawing.Image,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="img">  An Image object or descended of. e.g Bitmap. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendImage(System.String,System.Drawing.Icon,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="ico">  An Icon object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendImage(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendImage MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> A image file. e.g *.bmp, *.jpg, *.png, *.gif, *.ico,... </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendGeneration(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendGeneration MessageType to the Listener (Viewer and/or File). It will
             record the current Generation of a given object.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  An object to determine its generation value. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendGeneration(System.String,System.WeakReference,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendGeneration MessageType to the Listener (Viewer and/or File). It will
             record the current Generation of a given WeakReference object.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="wRef"> An WeakReference object to determine its generation value. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCustomData(System.String,ReflectSoftware.Insight.Common.Data.RICustomData,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a Custom Data MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="cData">    The Custom Data. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendObject(System.String,System.Object,ReflectSoftware.Insight.Common.ObjectScope,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method allows the caller to send any object type to display within the Viewer. If the
             object being sent is of a standard type, then the SendObject will redirect the MessageType
             from SendObject to the appropriate MessageType i.e SendDate.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="obj">      The object to describe. </param>
             <param name="scope">    Object properties to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendObject(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method allows the caller to send any object type to display within the Viewer. If the
             object being sent is of a standard type, then the SendObject will redirect the MessageType
             from SendObject to the appropriate MessageType i.e SendDate.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  The object to describe. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendObject(System.String,System.Object,System.Boolean,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method allows the caller to send any object type to display within the Viewer. If the
             object being sent is of a standard type, then the SendObject will redirect the MessageType
             from SendObject to the appropriate MessageType i.e SendDate.  This behavior can be
             overwritten by setting the bIgnoreStandard = true.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">              A descriptive string to describe the MessageType. </param>
             <param name="obj">              The object to describe. </param>
             <param name="bIgnoreStandard">  Ignore standard object type behavior. </param>
             <param name="args">             Arguments supplied to a formatted descriptive string for
                                             parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSerializedObject(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method Sends the contents of an Object serialized. The Object must support either the
             ISerializable interface or the Serializable attribute.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  The object to serialize. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerSendWatch(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Viewers Watch Panel. </param>
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerSendWatch(System.String,System.Object)">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Live Viewers Watch Panel. </param>
             <param name="obj">      The object to display. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerSendScratchpad(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Viewers Watch Panel. </param>
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ViewerSendScratchpad(System.String,System.Object)">
            --------------------------------------------------------------------
             <summary>
             This method sends a watch message. This message doesn't get persistent on the receiver's end.
             Only the Live Viewer respects this message type.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="labelID">  The labelID to show in the Live Viewers Watch Panel. </param>
             <param name="obj">      The object to display. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendException(System.String,System.Exception,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendException MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="ex">   An Exception object or a descended of. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendException(System.Exception)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendException MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="ex">   An Exception object or a descended of. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCurrency(System.String,System.Nullable{System.Decimal},System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCurrency MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="val">  The actual value to display. </param>
             <param name="ci">   A CultureInfo object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCurrency(System.String,System.Nullable{System.Decimal},System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCurrency MessageType to the Listener (Viewer and/or File). The
             Culture used will be the CurrentThread.CurrentCulture.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="val">  The actual value to display. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.String,System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="dt">       The DateTime parameter to display. </param>
             <param name="format">   The DateTime format to use to control the display. </param>
             <param name="ci">       The CultureInfo object. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File). The
             Culture used will be the CurrentThread.CurrentCulture.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="dt">       The DateTime parameter to display. </param>
             <param name="format">   The DateTime format to use to control the display. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.Globalization.CultureInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dt">   The DateTime parameter to display. </param>
             <param name="ci">   A CultureInfo object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDateTime(System.String,System.Nullable{System.DateTime},System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDateTime MessageType to the  (Viewer and/or File). The Culture used
             will be the CurrentThread.CurrentCulture.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dt">   The DateTime parameter to display. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTimestamp(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="timeZoneId">   The TimeZone Id. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTimestamp(System.String,System.TimeZoneInfo,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="tz">   The <see cref="T:System.TimeZoneInfo" />. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTimestamp(System.TimeZoneInfo)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="tz">   The <see cref="T:System.TimeZoneInfo" />. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTimestamp(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File). This
             method will send the time stamp based on TimeZone (Local)
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTimestamp">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendTimestamp MessageType to the Listener (Viewer and/or File). This
             method will send the time stamp based on TimeZone (Local)
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendPoint(System.String,System.Drawing.Point,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendPoint MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="pt">   A Point object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendRectangle(System.String,System.Drawing.Rectangle,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendRectangle MessageType to the  (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="rect"> A Rectangle object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSize(System.String,System.Drawing.Size,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSize MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="sz">   A Size object. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendColor(System.String,System.Drawing.Color,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendColor MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="clrObj">   A Color object. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCheckmark(System.String,ReflectSoftware.Insight.Common.Checkmark,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCheckmark MessageType to the  (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="cmType">   A Checkmark type to send. e.g Checkmark.Green. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendCheckmark(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendCheckmark MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   The Checkmark used depends on the DefaultCheckmark property value. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAssert(System.Boolean,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAssert MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>
             This message will only get sent if the condition fails (false) and in DEBUG mode.  Otherwise,
             it is ignored.
             </remarks>
            
             <param name="condition">    The assert condition. </param>
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="args">         Arguments supplied to a formatted descriptive string for
                                         parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAssigned(System.String,System.Object,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAssigned MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="obj">  Object to test on. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStackTrace(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStackTrace MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendStackTrace">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendStackTrace MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendProcessInformation(System.Diagnostics.Process)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendProcessInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   Note: this method takes a few seconds to execute. </remarks>
            
             <param name="aProcess"> A processs to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendProcessInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendProcessInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>
             Will send information about the current process.  Note: this method takes a few seconds to
             execute.
             </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAppDomainInformation(System.AppDomain)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAppDomainInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="anAppDomain">  An AppDomain object to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAppDomainInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendAppDomainInformation MessageType (CurrentDomain) to the Listener
             (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendThreadInformation(System.Threading.Thread)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendThreadInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="aThread">  A Thread object to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendThreadInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendThreadInformation MessageType (CurrentThread) to the Listener (Viewer
             and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendSystemInformation">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendSystemInformation MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataSet(System.String,System.Data.DataSet,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSet MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dSet"> The DataSet to send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataSet(System.Data.DataSet)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSet MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="dSet"> The DataSet to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataSetSchema(System.String,System.Data.DataSet,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSetSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="dSet"> The DataSet to send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataSetSchema(System.Data.DataSet)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataSetSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="dSet"> The DataSet to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataTable(System.String,System.Data.DataTable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendDataTable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="table">    The table to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataTable(System.Data.DataTable)">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendDataTable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="table">    The table to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataTableSchema(System.String,System.Data.DataTable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataTableSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="table">    The table. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataTableSchema(System.Data.DataTable)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataTableSchema MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="table">    The table. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendDataView(System.String,System.Data.DataView,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendDataView MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">  A descriptive string to describe the MessageType. </param>
             <param name="view"> The view to send. </param>
             <param name="args"> Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTypedCollection``1(System.String,System.Collections.Generic.IEnumerable{``0}[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a Sends a Type Collection MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerables">  The enumerables to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendTypedCollection``1(System.Collections.Generic.IEnumerable{``0})">
            --------------------------------------------------------------------
             <summary>
             This method sends a Sends a Type Collection MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="enumerable">   The enumerable to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendEnumerable``1(System.String,System.Collections.Generic.IEnumerable{``0}[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendEnumerable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="str">          A descriptive string to describe the MessageType. </param>
             <param name="enumerables">  The enumerables to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendEnumerable MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <typeparam name="T">    . </typeparam>
             <param name="enumerable">   The enumerable to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendHttpRequest(System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary> Sends the current HTTP Request.</summary>
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
             <param name="str">      The message. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendHttpRequest">
            --------------------------------------------------------------------
             <summary> Sends the current HTTP Request.</summary>
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
             <exception cref="T:System.Exception">                Thrown when an exception error condition occurs. </exception>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLinqResults(System.String,System.Linq.IQueryable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqResult MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="query">    The query results to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLinqResults(System.Linq.IQueryable)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqResults MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="query">    The query results to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLinqQuery(System.String,System.Linq.IQueryable,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqQuery MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="query">    The query results to send. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendLinqQuery(System.Linq.IQueryable)">
            --------------------------------------------------------------------
             <summary>
             This method sends a SendLinqQuery MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="query">    The query results to send. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendAttachment(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendAttachment MessageType to the Listener (Viewer and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> The file to send as an attachment. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMiniDumpFile(System.String,System.String,System.Diagnostics.Process,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendMiniDumpFile MessageType to the Listener for the process specified.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> The file to send as an attachment. </param>
             <param name="process">  The process to create a mini memory dump file. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendMiniDumpFile(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             This method sends an SendMiniDumpFile MessageType to the Listener for the current process.
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="str">      A descriptive string to describe the MessageType. </param>
             <param name="fileName"> The file to send as an attachment. </param>
             <param name="args">     Arguments supplied to a formatted descriptive string for parameter
                                     str. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendString(System.String,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the string. </summary>
             
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="str">      The message. </param>
             <param name="theString">The String</param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.SendString(System.String,System.Text.StringBuilder,System.Object[])">
            --------------------------------------------------------------------
             <summary>   Sends the string. </summary>
             
             <remarks>   ReflectInsight Version 5.3. </remarks>
             
             <param name="str">      The message. </param>
             <param name="theString">The String</param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.PurgeLogFile">
            --------------------------------------------------------------------
             <summary>   Sends a purge log command. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ResetCheckpoint(ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>
             This method will reset the given checkpoint value. Nothing is passed to the Listener (Viewer
             and/or File).
             </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="cType">    The Checkpoint type to reset. e.g Checkpoint.Green. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ResetCheckpoint">
            --------------------------------------------------------------------
             <summary>
             This method will reset the DefaultCheckpoint value. Nothing is passed to the Listener (Viewer
             and/or File).
             </summary>
            
             <remarks>   See the DefaultCheckpoint property for more details. </remarks>
            
             <example>
             If the DefaultCheckpoint = Checkpoint.Yellow, then this method will reset the Yellow
             Checkpoint value to zero.
             </example>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ResetCheckpoint(System.String,ReflectSoftware.Insight.Common.Checkpoint)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The name. </param>
             <param name="cType">    The type. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ResetCheckpoint(System.String)">
            --------------------------------------------------------------------
             <summary>   Resets the checkpoint. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The name. </param>        
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.GDebugReflectInsight.ResetEnterExitIndentation">
            --------------------------------------------------------------------
             <summary>   This method will reset the current Enter/Exit indentation level. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GDebugReflectInsight.Enabled">
            --------------------------------------------------------------------
             <summary>   If false, then the dispatcher will ignore any packages being sent. </summary>
            
             <value> The enabled. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GDebugReflectInsight.DefaultCheckpoint">
            --------------------------------------------------------------------
             <summary>
             Gets or sets or gets the DefaultCheckpoint. The default AddCheckpoint() and ResetCheckpoint()
             methods uses this property.
             </summary>
            
             <value> The default checkpoint. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GDebugReflectInsight.DefaultCheckmark">
            --------------------------------------------------------------------
             <summary>
             Gets or sets or gets the DefaultCheckmark. The default SendCheckmark() method uses this
             property.
             </summary>
            
             <value> The default check mark. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GDebugReflectInsight.Category">
            --------------------------------------------------------------------
             <summary>   Gets or sets or gets the current Category descriptive value. </summary>
            
             <value> The category. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GDebugReflectInsight.BackColor">
            --------------------------------------------------------------------
             <summary>   Gets or sets or gets the current default BackColor for all MessageTypes. </summary>
            
             <value> The color of the back. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.GDebugReflectInsight.PropagateException">
            --------------------------------------------------------------------
             <summary>   Enable or disable ReflectInsight PropagateException. </summary>
            
             <value> The propagate exception. </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIListenerGroupManager">
            <summary>   RIListenerGroupManager class. </summary>
            <remarks>   ReflectInsight Version 5.3. </remarks>
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.OnStartup">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.OnShutdown">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.ForceDisposeListenerGroups">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.OnConfigFileChange">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.RemoveConfigListenerGroups">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.ObtainConfigListenerGroups">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.AddDefaultListenerGroupIfNecessary">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.PrepareActiveGroup">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.SetDefaultListenerGroup(ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.SetActiveListenerGroup(ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.AddGroup(ReflectSoftware.Insight.ListenerGroup,System.Boolean)">
            --------------------------------------------------------------------        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.Add(System.String,System.Boolean,System.Boolean)">
            --------------------------------------------------------------------        
             <summary>   Adds the specified listener. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">             The listener name. </param>
             <param name="bEnabled">         <c>true</c> if enabled, else <c>false</c>. </param>
             <param name="bMaskIdentities">  <c>true</c> to mask identity, else <c>false</c> </param>
            
             <returns>   ListenerGroup. </returns>        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.Add(System.String,System.Boolean)">
            --------------------------------------------------------------------        
             <summary>   Adds the specified listener. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name">     The listener name. </param>
             <param name="bEnabled"> <c>true</c> if enabled, else <c>false</c>. </param>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> </returns>        
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.Add(System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the specified listener. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name"> The listener name. </param>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> </returns>
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.Remove(ReflectSoftware.Insight.ListenerGroup)">
            --------------------------------------------------------------------
             <summary>   Removes the specified ListenerGroup. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="group">    The <see cref="T:ReflectSoftware.Insight.ListenerGroup" />. </param>
            
             <returns>   <c>true</c> if successful, else <c>false</c> </returns>
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.Remove(System.String)">
            --------------------------------------------------------------------
             <summary>   Removes the specified listener group. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name"> The name of the group. </param>
            
             <returns>   <c>true</c> if removed, else <c>false</c> </returns>
        </member>
        <member name="M:ReflectSoftware.Insight.RIListenerGroupManager.Get(System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the specified ListenerGroup. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="name"> The name of the group. </param>
            
             <returns>
             <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> or null if the group does not exist.
             </returns>
        </member>
        <member name="P:ReflectSoftware.Insight.RIListenerGroupManager.ListenerGroups">
            --------------------------------------------------------------------
             <summary>   Gets all listener groups. </summary>
            
             <value> An array of <see cref="T:ReflectSoftware.Insight.ListenerGroup"/>s. </value>
        </member>
        <member name="P:ReflectSoftware.Insight.RIListenerGroupManager.ActiveGroup">
            --------------------------------------------------------------------
             <summary>   Gets or sets the active ListenerGroup. </summary>
            
             <value> The active <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> </value>
        </member>
        <member name="P:ReflectSoftware.Insight.RIListenerGroupManager.DefaultGroup">
            --------------------------------------------------------------------
             <summary>   Gets or sets the default ListenerGroup. </summary>
            
             <value> The default <see cref="T:ReflectSoftware.Insight.ListenerGroup"/> </value>
        </member>
        <member name="T:ReflectSoftware.Insight.RILogManagerNode">
            --------------------------------------------------------------------
             <summary>   Class RILogManagerNode. </summary>
            
             <seealso cref="T:System.IDisposable"/>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RILogManagerNode.Name">
            <summary>   Gets the name. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.RILogManagerNode.Instance">
            <summary>   Gets the instance. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.RILogManagerNode.Disposed">
            <summary>   Gets the disposed. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManagerNode.#ctor(System.String,ReflectSoftware.Insight.Common.IReflectInsight)">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.RILogManagerNode" /> class. </summary>
            
             <param name="name"> The name. </param>
             <param name="ri">   The <see cref="T:ReflectSoftware.Insight.ReflectInsight" /> object. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManagerNode.Dispose">
            --------------------------------------------------------------------
             <summary> Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. </summary>
            
             <seealso cref="M:System.IDisposable.Dispose()"/>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RILogManager">
            --------------------------------------------------------------------
             <summary>   Main RILogManager class. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.FreeInstances">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.CreateInstance(ReflectSoftware.Insight.Common.RIInstance)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.GetNode(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.EstablishDefault">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.ObtainConfigInstances">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Remove(System.String,System.Boolean)">
            --------------------------------------------------------------------
             <summary>   Removes the specified instance name. </summary>
            
             <param name="name">     The instance name. </param>
             <param name="bDispose"> True to dispose the object. </param>
             <returns>   True if successful, else False. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Remove(System.String)">
            --------------------------------------------------------------------
             <summary>   Removes the specified instance name. </summary>
            
             <param name="name"> The instance name. </param>
             <returns>   True if successful, else False. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Add(ReflectSoftware.Insight.Common.RIInstance)">
            --------------------------------------------------------------------
             <summary>   Adds the specified instance. </summary>
            
             <param name="instance"> The instance. </param>
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Add(System.String,ReflectSoftware.Insight.Common.IReflectInsight)">
            --------------------------------------------------------------------
             <summary>   Adds the specified instance name. </summary>
             <remarks>
             If the instance name already exists, the category, color, state and destination binding group
             information will be updated.
             </remarks>
            
             <param name="name"> The instance name. </param>
             <param name="ri">   The ReflectInsight object. </param>
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Add(System.String,System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the specified instance name. </summary>
            
             <param name="name">                 The instance name. </param>
             <param name="category">             The category. </param>
             <param name="bkColor">              Background Color. </param>
             <param name="destinationBindings">  The destination binding group. </param>
            
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Add(System.String,System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the specified instance name. </summary>
            
             <param name="name">     The instance name. </param>
             <param name="category"> The category. </param>
             <param name="bkColor">  Background Color. </param>
            
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Add(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the specified instance name. </summary>
            
             <param name="name">     The instance name. </param>
             <param name="category"> The category. </param>
            
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Add(System.String)">
            --------------------------------------------------------------------
             <summary>   Adds the specified instance name. </summary>
            
             <param name="name"> The instance name. </param>
            
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Get(System.String)">
            --------------------------------------------------------------------
             <summary>   Gets the specified instance name. </summary>
            
             <param name="name"> The instance name. </param>
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.Get(System.Type)">
            --------------------------------------------------------------------
             <summary>   Gets the specified type. </summary>
            
             <param name="type"> The type. </param>
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.GetCurrentClassLogger">
            --------------------------------------------------------------------
             <summary>   Gets the current class logger. </summary>
            
             <remarks>
             This call requires the overhead of a StackFrame, therefore, 'Get(instancename)' is the
             recommended call to use to obtain a ReflectInsight instance.
             </remarks>
            
             <returns>   A ReflectInsight instance. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RILogManager.SetDefault(System.String)">
            --------------------------------------------------------------------
             <summary>   Sets the default instance. </summary>
            
             <param name="name"> The instance name. </param>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RILogManager.Default">
            --------------------------------------------------------------------
             <summary>   Gets the default instance. </summary>
             <value> The default ReflectInsight instance. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RILogManager.Instances">
            --------------------------------------------------------------------
             <summary>   Gets all available instances. </summary>
             <value> All ReflectInsight instances. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RILogManager.Nodes">
            --------------------------------------------------------------------
             <summary>   Gets the <see cref="T:ReflectSoftware.Insight.RILogManagerNode"/> nodes. </summary>
             <value> All <see cref="T:ReflectSoftware.Insight.RILogManagerNode"/> nodes. </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.ReflectInsightService">
            <summary>   A reflect insight service. </summary>
            <remarks>   ReflectInsight Version 5.3. </remarks>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightService.ProcessId">
            <summary>   Gets the identifier of the process. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightService.Session">
            <summary>   Gets the session. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightService.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightService.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightService.OnShutdown(System.Object,System.EventArgs)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightService.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightService.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightService.SessionId">
            --------------------------------------------------------------------
             <summary>   Gets the identifier of the session. </summary>
            
             <value> The identifier of the session. </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.ReflectInsightService.Initialize">
            --------------------------------------------------------------------
             <summary>   Initializes this ReflectSoftware.Insight.ReflectInsightService. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightService.IsLiveViewerInstalled">
            --------------------------------------------------------------------
             <summary>
             Gets a value indicating whether this ReflectSoftware.Insight.ReflectInsightService is live
             viewer installed.
             </summary>
            
             <value>
             true if this ReflectSoftware.Insight.ReflectInsightService is live viewer installed, false if
             not.
             </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.ReflectInsightService.IsLogViewerInstalled">
            --------------------------------------------------------------------
             <summary>
             Gets a value indicating whether this ReflectSoftware.Insight.ReflectInsightService is log
             viewer installed.
             </summary>
            
             <value>
             true if this ReflectSoftware.Insight.ReflectInsightService is log viewer installed, false if
             not.
             </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RIMessageColors">
            --------------------------------------------------------------------
             <summary>   RIMessageColors class. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.LoadConfigColors">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.Clear">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.SetBackColor(ReflectSoftware.Insight.Common.MessageType,System.Drawing.Color)">
            --------------------------------------------------------------------
             <summary>   Sets the background color. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="mType">    <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> </param>
             <param name="bkColor">  Background Color. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RIMessageColors.GetBackColor(ReflectSoftware.Insight.Common.MessageType,System.Drawing.Color)">
            --------------------------------------------------------------------
             <summary>   Gets the background color. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="mType">        <see cref="T:ReflectSoftware.Insight.Common.MessageType"/> </param>
             <param name="defaultColor"> The default color. </param>
             <returns>   Color. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListenerRequest.Attached(System.UInt32)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListenerRequest.Detached">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListenerRequest.Reset">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RITraceListenerData">
            --------------------------------------------------------------------
             <summary>   RITraceListenerData class. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListenerData.MessageType">
            <summary>   The message type. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListenerData.Message">
            <summary>   The message. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListenerData.Details">
            <summary>   The details. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListenerData.ExtendedProperties">
            <summary>   The extended properties. </summary>
        </member>
        <member name="T:ReflectSoftware.Insight.RITraceListener">
            --------------------------------------------------------------------
             <summary>   Redirect all Trace/Debug messages to ReflectInsight. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="T:System.Diagnostics.TraceListener"/>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListener.LockObject">
            <summary>   The lock object. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListener.FEnabled">
            <summary>   Enabled. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListener.FListener">
            <summary>   The listener. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListener.FName">
            <summary>   The name. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListener.FInstanceName">
            <summary>   The instance name. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.RITraceListener.FLastIndentLevel">
            <summary>   The last indent level. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.RITraceListener.Disposed">
            --------------------------------------------------------------------
             <summary>   Gets if disposed. </summary>
            
             <value> <c>true</c> or <c>false</c> </value>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.#cctor">
            --------------------------------------------------------------------
             <summary>   Initializes static members of the <see cref="T:ReflectSoftware.Insight.RITraceListener"/> class. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.OnStartup">
            --------------------------------------------------------------------
             <summary>   Called upon startup. </summary>
            
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.#ctor(System.String)">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.RITraceListener"/> class. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="instanceName"> Name of the instance. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.#ctor">
            --------------------------------------------------------------------
             <summary>   Initializes a new instance of the <see cref="T:ReflectSoftware.Insight.RITraceListener"/> class using 'RITraceListener' as the default instance name. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Dispose(System.Boolean)">
            --------------------------------------------------------------------
             <summary>
             Releases the unmanaged resources used by the
             <see cref="T:System.Diagnostics.TraceListener" /> and optionally releases the managed
             resources.
             </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Dispose(Boolean)"/>
             ### <param name="bDisposing">    <c>true</c> to release both managed and unmanaged resources; <c>false</c>
                                             to release only unmanaged resources. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.DoOnConfigChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.OnConfigChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.SendInternalError(ReflectSoftware.Insight.Common.IReflectInsight,ReflectSoftware.Insight.Common.MessageType,System.Exception)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.AppendMessage(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.GetFullWriteMessage(System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.TrackIndent">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.PrepareListenerData(ReflectSoftware.Insight.RITraceListenerData,System.Diagnostics.TraceEventType)">
            --------------------------------------------------------------------
             <summary>   Prepares the listener data. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <param name="tData">        The <see cref="T:ReflectSoftware.Insight.RITraceListenerData"/> data. </param>
             <param name="eventType">    Type of <see cref="T:System.Diagnostics.TraceEventType"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            --------------------------------------------------------------------
             <summary>
             Writes trace information, a data object and event information to the listener specific output.
             </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.TraceData(TraceEventCache,string,TraceEventType,int,object)"/>
             ### <param name="eventCache">   A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information. </param>
             ### <param name="source">       A name used to identify the output, typically the name of the application that generated the trace event. </param>
             ### <param name="eventType">    One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace. </param>
             ### <param name="id">           A numeric identifier for the event. </param>
             ### <param name="data">         The trace data to emit. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            --------------------------------------------------------------------
             <summary>
             Writes trace information, a message, and event information to the listener specific output.
             </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,string,TraceEventType,int,string)"/>
             ### <param name="eventCache">   A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information. </param>
             ### <param name="source">       A name used to identify the output, typically the name of the application that generated the trace event. </param>
             ### <param name="eventType">    One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace. </param>
             ### <param name="id">           A numeric identifier for the event. </param>
             ### <param name="message">      A message to write. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            --------------------------------------------------------------------
             <summary>
             Writes trace information, a formatted array of objects and event information to the listener
             specific output.
             </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,string,TraceEventType,int,string,params object[])"/> 
             ### <param name="eventCache">   A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information. </param>
             ### <param name="source">       A name used to identify the output, typically the name of the application that generated the trace event. </param>
             ### <param name="eventType">    One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace. </param>
             ### <param name="id">           A numeric identifier for the event. </param>
             ### <param name="format">       A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array. </param>
             ### <param name="args">         An object array containing zero or more objects to format. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Fail(System.String)">
            --------------------------------------------------------------------
             <summary>   Fails with the specified message. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Fail(String)"/>
             ### <param name="msg">  A message to emit. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Fail(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Fails with the specified message. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Fail(String,String)"/>
             ### <param name="msg">        A message to emit. </param>
             ### <param name="category">   A category to emit. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Write(System.String)">
            --------------------------------------------------------------------
             <summary>   Writes the specified message. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Write(String)"/>
             ### <param name="msg">  A message to write. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Write(System.Object)">
            --------------------------------------------------------------------
             <summary>   Writes the specified object. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Write(Object)"/>
             ### <param name="obj">    An <see cref="T:System.Object" /> whose fully qualified class name
                                     you want to write. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Write(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Writes the specified message. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Write(String,String)"/>
             ### <param name="msg">  A message to write. </param>
             ### <param name="category"> A category name used to organize the output. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Write(System.Object,System.String)">
            --------------------------------------------------------------------
             <summary>   Writes the specified object. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            
             <seealso cref="M:System.Diagnostics.TraceListener.Write(Object,String)"/>
             ### <param name="obj">        An <see cref="T:System.Object" /> whose fully qualified class name you want to write. </param>
             ### <param name="category"> A category name used to organize the output. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.WriteLine(System.String)">
            --------------------------------------------------------------------
             <summary>   Writes the line. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.WriteLine(String)"/>
             ### <param name="msg">  A message to write. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.WriteLine(System.Object)">
            --------------------------------------------------------------------
             <summary>   Writes the line. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.WriteLine(Object)"/>
             ### <param name="obj">   An <see cref="T:System.Object" /> whose fully qualified class name you want to write. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.WriteLine(System.String,System.String)">
            --------------------------------------------------------------------
             <summary>   Writes the line. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.WriteLine(String,String)"/>
             ### <param name="msg">  A message to write. </param>
             ### <param name="category"> A category name used to organize the output. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.WriteLine(System.Object,System.String)">
            --------------------------------------------------------------------
             <summary>   Writes the line. </summary>
            
             <seealso cref="M:System.Diagnostics.TraceListener.WriteLine(Object,String)"/>
             ### <param name="obj">      An <see cref="T:System.Object" /> whose fully qualified class name you want to write. </param>
             ### <param name="category"> A category name used to organize the output. </param>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RITraceListener.Name">
            --------------------------------------------------------------------
             <summary>
             Gets or sets a name for this <see cref="T:System.Diagnostics.TraceListener" />.
             </summary>
            
             <seealso cref="P:System.Diagnostics.TraceListener.Name"/>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RITraceListener.IsThreadSafe">
            --------------------------------------------------------------------
             <summary>   Gets a value indicating whether the trace listener is thread safe. </summary>
            
             <seealso cref="P:System.Diagnostics.TraceListener.IsThreadSafe"/>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceListener.Clear">
            --------------------------------------------------------------------
             <summary>   Clears this instance. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RITraceListener.Enabled">
            --------------------------------------------------------------------
             <summary>   Gets or sets enabled. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.IRITrace">
            --------------------------------------------------------------------
             <summary>   IRITrace Interface. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.IRITrace.Name">
            <summary>   Gets the name of the interface. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.IRITrace.Logger">
            <summary>   Gets the logger assigned to this interface. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.DefaultTracer.#ctor">
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.TraceThreadInfo">
            --------------------------------------------------------------------
             <summary>   TraceThreadInfo class. </summary>
            
             <seealso cref="T:RI.Utils.MemoryCache.IRequestObject"/>
            --------------------------------------------------------------------
        </member>
        <member name="F:ReflectSoftware.Insight.TraceThreadInfo.Tracers">
            <summary>   The tracers. </summary>
        </member>
        <member name="F:ReflectSoftware.Insight.TraceThreadInfo.MethodException">
            <summary>   The method exception. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.TraceThreadInfo.RootTracer">
            <summary>   Gets or sets the root tracer. </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.TraceThreadInfo.RequestId">
            <summary>   Gets the request identifier. </summary>
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.Attached(System.UInt32)">
            --------------------------------------------------------------------
             <summary>   Attaches the specified request identifier. </summary>
            
             <param name="requestId">    The request id. </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.Reset">
            --------------------------------------------------------------------
             <summary>   Resets this instance. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.Detached">
            --------------------------------------------------------------------
             <summary>   Detaches this instance. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.Push(ReflectSoftware.Insight.IRITrace)">
            --------------------------------------------------------------------
             <summary>   Pushes the specified tracer. </summary>
            
             <param name="tracer">   The <see cref="T:ReflectSoftware.Insight.IRITrace"/> </param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.Pop">
            --------------------------------------------------------------------
             <summary>   Pops this instance onto the internal stack. </summary>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.IRITrace"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.Peek">
            --------------------------------------------------------------------
             <summary>
             Peeks into the internal stack and returns the next <see cref="T:ReflectSoftware.Insight.IRITrace"/> without removing it
             from the stack.
             </summary>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.IRITrace"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceThreadInfo.EndOfStack">
            --------------------------------------------------------------------
             <summary>   Are we at the end the of stack. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.RITraceManager">
            --------------------------------------------------------------------
             <summary>   RITraceManager class. </summary>
             <remarks>   ReflectInsight Version 5.3. </remarks>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceManager.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceManager.EnterMethod(ReflectSoftware.Insight.IRITrace)">
            --------------------------------------------------------------------
             <summary>   Enters the method. </summary>
            
             <param name="tracer">   The <see cref="T:ReflectSoftware.Insight.IRITrace"/> </param>
             <returns>   <see cref="T:ReflectSoftware.Insight.TraceThreadInfo"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceManager.EnterMethod">
            --------------------------------------------------------------------
             <summary>   Enters the method. </summary>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.TraceThreadInfo"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceManager.ExitMethod">
            --------------------------------------------------------------------
             <summary>   Exits the method. </summary>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceManager.GetTraceInfo">
            --------------------------------------------------------------------
             <summary>   Gets the trace information. </summary>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.TraceThreadInfo"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.RITraceManager.GetActiveTracer">
            --------------------------------------------------------------------
             <summary>   Gets the active tracer. </summary>
            
             <returns>   <see cref="T:ReflectSoftware.Insight.IRITrace"/> </returns>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RITraceManager.ActiveLogger">
            --------------------------------------------------------------------
             <summary>
             Gets the active <see cref="T:ReflectSoftware.Insight.ReflectInsight"/> logger.
             </summary>
            
             <value> The active <see cref="T:ReflectSoftware.Insight.ReflectInsight"/> logger. </value>
            --------------------------------------------------------------------
        </member>
        <member name="P:ReflectSoftware.Insight.RITraceManager.ActiveName">
            --------------------------------------------------------------------
             <summary>   Gets the name of the active Tracer. </summary>
             <value> The name of the active <see cref="T:ReflectSoftware.Insight.IRITrace"/> Tracer. </value>
            --------------------------------------------------------------------
        </member>
        <member name="T:ReflectSoftware.Insight.TraceMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:ReflectSoftware.Insight.TraceMethod.RI">
            <summary></summary>
        </member>
        <member name="P:ReflectSoftware.Insight.TraceMethod.Message">
            <summary></summary>
        </member>
        <member name="P:ReflectSoftware.Insight.TraceMethod.Disposed">
            <summary></summary>
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.#cctor">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.OnConfigFileChange">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.OnStartup">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.OnShutdown">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.#ctor(ReflectSoftware.Insight.ReflectInsight,System.String)">
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.Execute``1(System.Func{``0},ReflectSoftware.Insight.Common.TraceMethodExceptionPolicy)">
            --------------------------------------------------------------------
             <summary>
             Wraps the execution body for a TraceMethod. This allows the executing code to decide if they want to log any exception
             but but still allow the exception to been seen by a parent TraceMethod via execution policy.
             </summary>
             <remarks>Regardless of exception policy, the exception will always propagate (bubble) to the parent calling method.</remarks>
             <param name="action">The action to execute.</param>
             <param name="policy">The policy to take if an exception occures in the action code.</param>
             <returns>Returns T</returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.Execute(System.Action,ReflectSoftware.Insight.Common.TraceMethodExceptionPolicy)">
            --------------------------------------------------------------------
             <summary>
             Wraps the execution body for a TraceMethod. This allows the executing code to decide if they want to log any exception
             but but still allow the exception to been seen by a parent TraceMethod via execution policy.
             </summary>
             <remarks>Regardless of exception policy, the exception will always propagate (bubble) to the parent calling method.</remarks>
             <param name="action">The action to execute.</param>
             <param name="policy">The policy to take if an exception occures in the action code.</param>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.ExceptionHandler(System.Exception,System.Func{System.Exception,System.Boolean})">
            --------------------------------------------------------------------
             <summary>   Sets the exception handler. </summary>
            
             <param name="ex">       The <see cref="T:System.Exception"/> </param>
             <param name="handler">  The function handler </param>
             <returns>   <c>true</c> if the exception was handled, else <c>false</c>. </returns>
            --------------------------------------------------------------------
        </member>
        <member name="M:ReflectSoftware.Insight.TraceMethod.Dispose">
            --------------------------------------------------------------------
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
             resources.
             </summary>
            
             <seealso cref="M:System.IDisposable.Dispose()"/>
            --------------------------------------------------------------------
        </member>
    </members>
</doc>
